Resident data ends at 3d2c, program starts at 3d2c, file ends at 2076c

Starting analysis pass at address 3d2c

End of analysis pass, low address = 3d2c, high address = 15e99

[Start of code]

Main routine R0001, 0 locals

       CALL_VS         R0002 -> Gef
       QUIT            

Routine R0002, 0 locals

       CALL_VN         R0465 (#0018,#0065)
       RTRUE           

Routine R0003, 0 locals

       RTRUE           

Routine R0004, 1 local

       CALL_VS         R0483 (L00,#00) -> -(SP)
       PULL            Gef
       JE              Gef,#61,#65,#69 [TRUE] L0001
       JE              Gef,#6f,#75,#41 [TRUE] L0001
       JE              Gef,#45,#49,#4f [TRUE] L0001
       JE              Gef,#55 [FALSE] L0002
L0001: RTRUE           
L0002: RFALSE          

Routine R0005, 1 local

       STORE           Gef,L00
       JE              Gef,#07 [FALSE] L0001
       PRINT           "north"
       JUMP            L0013
L0001: JE              Gef,#08 [FALSE] L0002
       PRINT           "south"
       JUMP            L0013
L0002: JE              Gef,#09 [FALSE] L0003
       PRINT           "east"
       JUMP            L0013
L0003: JE              Gef,#0a [FALSE] L0004
       PRINT           "west"
       JUMP            L0013
L0004: JE              Gef,#0b [FALSE] L0005
       PRINT           "northeast"
       JUMP            L0013
L0005: JE              Gef,#0d [FALSE] L0006
       PRINT           "northwest"
       JUMP            L0013
L0006: JE              Gef,#0c [FALSE] L0007
       PRINT           "southeast"
       JUMP            L0013
L0007: JE              Gef,#0e [FALSE] L0008
       PRINT           "southwest"
       JUMP            L0013
L0008: JE              Gef,#0f [FALSE] L0009
       PRINT           "up"
       JUMP            L0013
L0009: JE              Gef,#10 [FALSE] L0010
       PRINT           "down"
       JUMP            L0013
L0010: JE              Gef,#11 [FALSE] L0011
       PRINT           "in"
       JUMP            L0013
L0011: JE              Gef,#12 [FALSE] L0012
       PRINT           "out"
       JUMP            L0013
L0012: CALL_VS         R0133 (#09,L00) -> -(SP)
       RET_POPPED      
L0013: RTRUE           

Routine R0006, 2 locals

       JZ              L00 [FALSE] L0001
       PRINT           "zero"
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       PRINT           "minus "
       SUB             #00,L00 -> L00
L0002: JL              L00,#03e8 [TRUE] L0003
       DIV             L00,#03e8 -> -(SP)
       CALL_2N         R0006 ((SP)+)
       PRINT           " thousand"
       MOD             L00,#03e8 -> L00
       STORE           L01,#01
L0003: JL              L00,#64 [TRUE] L0005
       JE              L01,#01 [FALSE] L0004
       PRINT           ", "
L0004: DIV             L00,#64 -> -(SP)
       CALL_2N         R0006 ((SP)+)
       PRINT           " hundred"
       MOD             L00,#64 -> L00
       STORE           L01,#01
L0005: JZ              L00 [TRUE] RFALSE
       JE              L01,#01 [FALSE] L0006
       PRINT           " and "
L0006: STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0007
       PRINT           "one"
       JUMP            L0034
L0007: JE              Gef,#02 [FALSE] L0008
       PRINT           "two"
       JUMP            L0034
L0008: JE              Gef,#03 [FALSE] L0009
       PRINT           "three"
       JUMP            L0034
L0009: JE              Gef,#04 [FALSE] L0010
       PRINT           "four"
       JUMP            L0034
L0010: JE              Gef,#05 [FALSE] L0011
       PRINT           "five"
       JUMP            L0034
L0011: JE              Gef,#06 [FALSE] L0012
       PRINT           "six"
       JUMP            L0034
L0012: JE              Gef,#07 [FALSE] L0013
       PRINT           "seven"
       JUMP            L0034
L0013: JE              Gef,#08 [FALSE] L0014
       PRINT           "eight"
       JUMP            L0034
L0014: JE              Gef,#09 [FALSE] L0015
       PRINT           "nine"
       JUMP            L0034
L0015: JE              Gef,#0a [FALSE] L0016
       PRINT           "ten"
       JUMP            L0034
L0016: JE              Gef,#0b [FALSE] L0017
       PRINT           "eleven"
       JUMP            L0034
L0017: JE              Gef,#0c [FALSE] L0018
       PRINT           "twelve"
       JUMP            L0034
L0018: JE              Gef,#0d [FALSE] L0019
       PRINT           "thirteen"
       JUMP            L0034
L0019: JE              Gef,#0e [FALSE] L0020
       PRINT           "fourteen"
       JUMP            L0034
L0020: JE              Gef,#0f [FALSE] L0021
       PRINT           "fifteen"
       JUMP            L0034
L0021: JE              Gef,#10 [FALSE] L0022
       PRINT           "sixteen"
       JUMP            L0034
L0022: JE              Gef,#11 [FALSE] L0023
       PRINT           "seventeen"
       JUMP            L0034
L0023: JE              Gef,#12 [FALSE] L0024
       PRINT           "eighteen"
       JUMP            L0034
L0024: JE              Gef,#13 [FALSE] L0025
       PRINT           "nineteen"
       JUMP            L0034
L0025: JL              Gef,#14 [TRUE] L0034
       JG              Gef,#63 [TRUE] L0034
       DIV             L00,#0a -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0026
       PRINT           "twenty"
       JUMP            L0033
L0026: JE              Gef,#03 [FALSE] L0027
       PRINT           "thirty"
       JUMP            L0033
L0027: JE              Gef,#04 [FALSE] L0028
       PRINT           "forty"
       JUMP            L0033
L0028: JE              Gef,#05 [FALSE] L0029
       PRINT           "fifty"
       JUMP            L0033
L0029: JE              Gef,#06 [FALSE] L0030
       PRINT           "sixty"
       JUMP            L0033
L0030: JE              Gef,#07 [FALSE] L0031
       PRINT           "seventy"
       JUMP            L0033
L0031: JE              Gef,#08 [FALSE] L0032
       PRINT           "eighty"
       JUMP            L0033
L0032: JE              Gef,#09 [FALSE] L0033
       PRINT           "ninety"
L0033: MOD             L00,#0a -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       PRINT           "-"
       MOD             L00,#0a -> -(SP)
       CALL_2N         R0006 ((SP)+)
L0034: RTRUE           

Routine R0007, 3 locals

       MOD             L00,#0c -> L02
       JZ              L02 [FALSE] L0001
       STORE           L02,#0c
L0001: JL              L02,#0a [FALSE] L0002
       PRINT           " "
L0002: PRINT_NUM       L02
       PRINT           ":"
       DIV             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       MOD             L01,#0a -> -(SP)
       PRINT_NUM       (SP)+
       DIV             L00,#0c -> -(SP)
       JG              (SP)+,#00 [FALSE] L0003
       PRINT           " pm"
       JUMP            L0004
L0003: PRINT           " am"
L0004: RTRUE           

Routine R0008, 1 local

       JE              L00,"l" [FALSE] L0001
       PRINT           "look"
       RTRUE           
L0001: JE              L00,"z" [FALSE] L0002
       PRINT           "wait"
       RTRUE           
L0002: JE              L00,"x" [FALSE] L0003
       PRINT           "examine"
       RTRUE           
L0003: JE              L00,"i","inv","inventory" [FALSE] L0004
       PRINT           "inventory"
       RTRUE           
L0004: RFALSE          

Routine R0009, 1 local

       JE              L00,G13 [FALSE] L0001
       PRINT           "you"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#20 [FALSE] L0004
       PRINT           "those"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#02 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1e [FALSE] L0009
       PRINT           "her"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1f [TRUE] L0013
L0012: PRINT           "him"
       RTRUE           
L0013: PRINT           "that"
       RTRUE           

Routine R0010, 1 local

       JE              L00,G13 [FALSE] L0001
       PRINT           "yourself"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#20 [FALSE] L0004
       PRINT           "them"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#02 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1e [FALSE] L0009
       PRINT           "her"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1f [TRUE] L0013
L0012: PRINT           "him"
       RTRUE           
L0013: PRINT           "it"
       RTRUE           

Routine R0011, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#20 [TRUE] L0004
L0003: JE              L00,G13 [FALSE] L0005
L0004: PRINT           "are"
       JUMP            L0006
L0005: PRINT           "is"
L0006: RTRUE           

Routine R0012, 1 local

       JE              L00,G13 [FALSE] L0001
       PRINT           "You"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#20 [FALSE] L0004
       PRINT           "Those"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#02 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1e [FALSE] L0009
       PRINT           "She"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1f [TRUE] L0013
L0012: PRINT           "He"
       RTRUE           
L0013: PRINT           "That"
       RTRUE           

Routine R0013, 1 local

       JE              L00,G13 [FALSE] L0001
       PRINT           "You're"
       RTRUE           
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#20 [FALSE] L0004
       PRINT           "They're"
       RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0006: TEST_ATTR       L00,#02 [FALSE] L0013
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1e [FALSE] L0009
       PRINT           "She's"
       RTRUE           
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#03,L00)
       JUMP            L0012
L0011: TEST_ATTR       L00,#1f [TRUE] L0013
L0012: PRINT           "He's"
       RTRUE           
L0013: PRINT           "That's"
       RTRUE           

Routine R0014, 2 locals

       JE              Ge9,#1008 [FALSE] L0001
       PRINT           "
>"
       RTRUE           
L0001: JE              Ge9,#1007 [FALSE] L0066
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0002
       PRINT_PADDR     S043
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "Nothing to do!"
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT           " You have died "
       JUMP            L0065
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT           " You have won "
       JUMP            L0065
L0005: JE              Gef,#05 [FALSE] L0008
       PRINT_PADDR     S044
       JZ              #01 [TRUE] L0006
       PRINT_PADDR     S045
L0006: JE              G14,#02 [FALSE] L0007
       JZ              #0001 [FALSE] L0007
       PRINT_PADDR     S046
L0007: PRINT_RET       " or QUIT?"
L0008: JE              Gef,#06 [FALSE] L0009
       PRINT_PADDR     S047
       NEW_LINE        
       RTRUE           
L0009: JE              Gef,#07 [FALSE] L0010
       PRINT_PADDR     S048
       NEW_LINE        
       RTRUE           
L0010: JE              Gef,#08 [FALSE] L0011
       PRINT_PADDR     S049
       NEW_LINE        
       RTRUE           
L0011: JE              Gef,#09 [FALSE] L0012
       PRINT_RET       "
It is now pitch dark in here!"
L0012: JE              Gef,#0a [FALSE] L0013
       PRINT_RET       "I beg your pardon?"
L0013: JE              Gef,#0b [FALSE] L0014
       PRINT_PADDR     S050
       NEW_LINE        
       RTRUE           
L0014: JE              Gef,#0c [FALSE] L0015
       PRINT_PADDR     S051
       NEW_LINE        
       RTRUE           
L0015: JE              Gef,#0d [FALSE] L0016
       PRINT_RET       "[Previous turn undone.]"
L0016: JE              Gef,#0e [FALSE] L0017
       PRINT_RET       "Sorry, that can't be corrected."
L0017: JE              Gef,#0f [FALSE] L0018
       PRINT_RET       "Think nothing of it."
L0018: JE              Gef,#10 [FALSE] L0019
       PRINT_PADDR     S052
       NEW_LINE        
       RTRUE           
L0019: JE              Gef,#11 [FALSE] L0020
       PRINT_PADDR     S053
       NEW_LINE        
       RTRUE           
L0020: JE              Gef,#12 [FALSE] L0021
       PRINT           "yourself"
       JUMP            L0065
L0021: JE              Gef,#13 [FALSE] L0022
       PRINT_RET       "As good-looking as ever."
L0022: JE              Gef,#14 [FALSE] L0023
       PRINT_PADDR     S054
       NEW_LINE        
       RTRUE           
L0023: JE              Gef,#15 [FALSE] L0024
       PRINT_RET       "You can hardly repeat that."
L0024: JE              Gef,#16 [FALSE] L0025
       PRINT_RET       "You can't begin with a comma."
L0025: JE              Gef,#17 [FALSE] L0026
       PRINT_PADDR     S055
       NEW_LINE        
       RTRUE           
L0026: JE              Gef,#18 [FALSE] L0027
       PRINT           "You can't talk to "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0027: JE              Gef,#19 [FALSE] L0028
       PRINT_PADDR     S056
       NEW_LINE        
       RTRUE           
L0028: JE              Gef,#1a [FALSE] L0029
       PRINT           "(first taking "
       CALL_2N         R0117 (G44)
       PRINT_RET       ")"
L0029: JE              Gef,#1b [FALSE] L0030
       PRINT_PADDR     S057
       NEW_LINE        
       RTRUE           
L0030: JE              Gef,#1c [FALSE] L0031
       PRINT_PADDR     S058
       JUMP            L0065
L0031: JE              Gef,#1d [FALSE] L0032
       PRINT_RET       "I didn't understand that number."
L0032: JE              Gef,#1e [FALSE] L0033
       PRINT_RET       "You can't see any such thing."
L0033: JE              Gef,#1f [FALSE] L0034
       PRINT_PADDR     S059
       NEW_LINE        
       RTRUE           
L0034: JE              Gef,#20 [FALSE] L0035
       PRINT_RET       "You aren't holding that!"
L0035: JE              Gef,#21 [FALSE] L0036
       PRINT_PADDR     S060
       NEW_LINE        
       RTRUE           
L0036: JE              Gef,#22 [FALSE] L0037
       PRINT_PADDR     S061
       NEW_LINE        
       RTRUE           
L0037: JE              Gef,#23 [FALSE] L0038
       PRINT           "I'm not sure what ""
       CALL_2N         R0488 (G69)
       PRINT_RET       "" refers to."
L0038: JE              Gef,#24 [FALSE] L0039
       PRINT_PADDR     S062
       NEW_LINE        
       RTRUE           
L0039: JE              Gef,#25 [FALSE] L0040
       PRINT_PADDR     S063
       NEW_LINE        
       RTRUE           
L0040: JE              Gef,#26 [FALSE] L0041
       PRINT_RET       "That's not a verb I recognise."
L0041: JE              Gef,#27 [FALSE] L0042
       PRINT_PADDR     S064
       NEW_LINE        
       RTRUE           
L0042: JE              Gef,#28 [FALSE] L0043
       PRINT           "You can't see ""
       CALL_2N         R0488 (G69)
       PRINT           "" ("
       CALL_2N         R0117 (G6a)
       PRINT_RET       ") at the moment."
L0043: JE              Gef,#29 [FALSE] L0044
       PRINT_PADDR     S065
       NEW_LINE        
       RTRUE           
L0044: JE              Gef,#2a [FALSE] L0049
       JZ              L01 [FALSE] L0045
       PRINT           "None"
       JUMP            L0046
L0045: PRINT           "Only "
       CALL_2N         R0120 (L01)
L0046: PRINT           " of those "
       JE              L01,#01 [FALSE] L0047
       PRINT           "is"
       JUMP            L0048
L0047: PRINT           "are"
L0048: PRINT_RET       " available."
L0049: JE              Gef,#2b [FALSE] L0050
       PRINT_RET       "Nothing to do!"
L0050: JE              Gef,#2c [FALSE] L0051
       PRINT_RET       "There are none at all available!"
L0051: JE              Gef,#2d [FALSE] L0052
       PRINT           "Who do you mean, "
       JUMP            L0065
L0052: JE              Gef,#2e [FALSE] L0053
       PRINT           "Which do you mean, "
       JUMP            L0065
L0053: JE              Gef,#2f [FALSE] L0054
       PRINT_PADDR     S066
       NEW_LINE        
       RTRUE           
L0054: JE              Gef,#30 [FALSE] L0056
       PRINT           "Whom do you want"
       JE              G38,G13 [TRUE] L0055
       PRINT           " "
       CALL_2N         R0117 (G38)
L0055: PRINT           " to "
       CALL_1N         R0039
       PRINT           "?
"
       JUMP            L0065
L0056: JE              Gef,#31 [FALSE] L0058
       PRINT           "What do you want"
       JE              G38,G13 [TRUE] L0057
       PRINT           " "
       CALL_2N         R0117 (G38)
L0057: PRINT           " to "
       CALL_1N         R0039
       PRINT           "?
"
       JUMP            L0065
L0058: JE              Gef,#32 [FALSE] L0062
       PRINT           "Your score has just gone "
       JG              L01,#00 [FALSE] L0059
       PRINT           "up"
       JUMP            L0060
L0059: SUB             #00,L01 -> L01
       PRINT           "down"
L0060: PRINT           " by "
       CALL_2N         R0120 (L01)
       PRINT           " point"
       JG              L01,#01 [FALSE] L0061
       PRINT           "s"
L0061: JUMP            L0065
L0062: JE              Gef,#33 [FALSE] L0063
       PRINT_PADDR     S067
       NEW_LINE        
       RTRUE           
L0063: JE              Gef,#34 [FALSE] L0064
       PRINT           "
Type a number from 1 to "
       PRINT_NUM       L01
       PRINT_RET       ", 0 to redisplay or press ENTER."
L0064: JE              Gef,#35 [FALSE] L0065
       PRINT_RET       "
[Please press SPACE.]"
L0065: RTRUE           
L0066: JE              Ge9,#1006 [FALSE] L0089
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0067
       PRINT           " (providing light)"
       JUMP            L0088
L0067: JE              Gef,#02 [FALSE] L0068
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " closed)"
       JUMP            L0088
L0068: JE              Gef,#03 [FALSE] L0069
       PRINT           " (closed and providing light)"
       JUMP            L0088
L0069: JE              Gef,#04 [FALSE] L0070
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " empty)"
       JUMP            L0088
L0070: JE              Gef,#05 [FALSE] L0071
       PRINT           " (empty and providing light)"
       JUMP            L0088
L0071: JE              Gef,#06 [FALSE] L0072
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " closed and empty)"
       JUMP            L0088
L0072: JE              Gef,#07 [FALSE] L0073
       PRINT_PADDR     S068
       JUMP            L0088
L0073: JE              Gef,#08 [FALSE] L0074
       PRINT           " (providing light and being worn"
       JUMP            L0088
L0074: JE              Gef,#09 [FALSE] L0075
       PRINT           " (providing light"
       JUMP            L0088
L0075: JE              Gef,#0a [FALSE] L0076
       PRINT           " (being worn"
       JUMP            L0088
L0076: JE              Gef,#0b [FALSE] L0077
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " "
       JUMP            L0088
L0077: JE              Gef,#0c [FALSE] L0078
       PRINT           "open"
       JUMP            L0088
L0078: JE              Gef,#0d [FALSE] L0079
       PRINT           "open but empty"
       JUMP            L0088
L0079: JE              Gef,#0e [FALSE] L0080
       PRINT           "closed"
       JUMP            L0088
L0080: JE              Gef,#0f [FALSE] L0081
       PRINT           "closed and locked"
       JUMP            L0088
L0081: JE              Gef,#10 [FALSE] L0082
       PRINT           " and empty"
       JUMP            L0088
L0082: JE              Gef,#11 [FALSE] L0083
       PRINT           " (which "
       CALL_2N         R0011 (L01)
       PRINT           " empty)"
       JUMP            L0088
L0083: JE              Gef,#12 [FALSE] L0084
       PRINT           " containing "
       JUMP            L0088
L0084: JE              Gef,#13 [FALSE] L0085
       PRINT           " (on "
       JUMP            L0088
L0085: JE              Gef,#14 [FALSE] L0086
       PRINT           ", on top of "
       JUMP            L0088
L0086: JE              Gef,#15 [FALSE] L0087
       PRINT           " (in "
       JUMP            L0088
L0087: JE              Gef,#16 [FALSE] L0088
       PRINT           ", inside "
L0088: RTRUE           
L0089: JE              Ge9,#00 [FALSE] L0094
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0090
       PRINT           "At the moment, "
       JUMP            L0093
L0090: JE              Gef,#02 [FALSE] L0091
       PRINT           "means "
       JUMP            L0093
L0091: JE              Gef,#03 [FALSE] L0092
       PRINT           "is unset"
       JUMP            L0093
L0092: JE              Gef,#04 [FALSE] L0093
       PRINT_PADDR     S069
       NEW_LINE        
       RTRUE           
L0093: RTRUE           
L0094: JE              Ge9,#1003 [FALSE] L0099
       CALL_2N         R0118 (L01)
       JG              #01,L01 [TRUE] L0095
       JG              L01,#0082 [FALSE] L0096
L0095: CALL_VN         R0471 (#03,L01)
       JUMP            L0097
L0096: TEST_ATTR       L01,#20 [FALSE] L0097
       PRINT           " have"
       JUMP            L0098
L0097: PRINT           " has"
L0098: PRINT_RET       " better things to do."
L0099: JE              Ge9,#01 [FALSE] L0102
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0100
       PRINT           "Please answer yes or no."
       JUMP            L0101
L0100: JE              Gef,#02 [FALSE] L0101
       PRINT_PADDR     S070
L0101: RTRUE           
L0102: JE              Ge9,#02 [FALSE] L0105
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0103
       PRINT_PADDR     S071
       JUMP            L0104
L0103: JE              Gef,#02 [FALSE] L0104
       PRINT_RET       "Failed."
L0104: RTRUE           
L0105: JE              Ge9,#03 [FALSE] L0108
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0106
       PRINT_RET       "Restore failed."
L0106: JE              Gef,#02 [FALSE] L0107
       PRINT_RET       "Ok."
L0107: RTRUE           
L0108: JE              Ge9,#04 [FALSE] L0111
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0109
       PRINT_RET       "Save failed."
L0109: JE              Gef,#02 [FALSE] L0110
       PRINT_RET       "Ok."
L0110: RTRUE           
L0111: JE              Ge9,#05 [FALSE] L0114
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0112
       PRINT_PADDR     S072
       NEW_LINE        
       RTRUE           
L0112: JE              Gef,#02 [FALSE] L0113
       PRINT_PADDR     S073
       NEW_LINE        
       RTRUE           
L0113: RTRUE           
L0114: JE              Ge9,#06 [FALSE] L0118
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0115
       PRINT_RET       "Transcripting is already on."
L0115: JE              Gef,#02 [FALSE] L0116
       PRINT_RET       "Start of a transcript of"
L0116: JE              Gef,#03 [FALSE] L0117
       PRINT_PADDR     S074
       NEW_LINE        
       RTRUE           
L0117: RTRUE           
L0118: JE              Ge9,#07 [FALSE] L0122
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0119
       PRINT_RET       "Transcripting is already off."
L0119: JE              Gef,#02 [FALSE] L0120
       PRINT_RET       "
End of transcript."
L0120: JE              Gef,#03 [FALSE] L0121
       PRINT_PADDR     S075
       NEW_LINE        
       RTRUE           
L0121: RTRUE           
L0122: JE              Ge9,#08 [FALSE] L0123
       PRINT_RET       "Score notification on."
L0123: JE              Ge9,#09 [FALSE] L0124
       PRINT_RET       "Score notification off."
L0124: JE              Ge9,#0a [FALSE] L0125
       PRINT           "You have visited: "
       RTRUE           
L0125: JE              Ge9,#0b [FALSE] L0136
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0126
       PRINT_RET       "Objects you have handled:
"
L0126: JE              Gef,#02 [FALSE] L0127
       PRINT_RET       "None."
L0127: JE              Gef,#03 [FALSE] L0128
       PRINT           "   (worn)"
       JUMP            L0135
L0128: JE              Gef,#04 [FALSE] L0129
       PRINT           "   (held)"
       JUMP            L0135
L0129: JE              Gef,#05 [FALSE] L0130
       PRINT           "   (given away)"
       JUMP            L0135
L0130: JE              Gef,#06 [FALSE] L0131
       PRINT           "   (in "
       CALL_2N         R0119 (L01)
       PRINT           ")"
       JUMP            L0135
L0131: JE              Gef,#07 [FALSE] L0132
       PRINT           "   (in "
       CALL_2N         R0117 (L01)
       PRINT           ")"
       JUMP            L0135
L0132: JE              Gef,#08 [FALSE] L0133
       PRINT           "   (inside "
       CALL_2N         R0117 (L01)
       PRINT           ")"
       JUMP            L0135
L0133: JE              Gef,#09 [FALSE] L0134
       PRINT           "   (on "
       CALL_2N         R0117 (L01)
       PRINT           ")"
       JUMP            L0135
L0134: JE              Gef,#0a [FALSE] L0135
       PRINT           "   (lost)"
L0135: RTRUE           
L0136: JE              Ge9,#0c [FALSE] L0140
       JZ              G14 [TRUE] L0137
       PRINT           "In that game you scored "
       JUMP            L0138
L0137: PRINT           "You have so far scored "
L0138: PRINT_NUM       G0e
       PRINT           " out of a possible "
       PRINT_NUM       #1e
       PRINT           ", in "
       PRINT_NUM       G09
       PRINT           " turn"
       JE              G09,#01 [TRUE] L0139
       PRINT           "s"
L0139: RTRUE           
L0140: JE              Ge9,#0d [FALSE] L0147
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0143
       JZ              G14 [TRUE] L0141
       PRINT           "The score was "
       JUMP            L0142
L0141: PRINT           "The score is "
L0142: PRINT_RET       "made up as follows:
"
L0143: JE              Gef,#02 [FALSE] L0144
       PRINT_RET       "finding sundry items"
L0144: JE              Gef,#03 [FALSE] L0145
       PRINT_RET       "visiting various places"
L0145: JE              Gef,#04 [FALSE] L0146
       PRINT           "total (out of "
       PRINT_NUM       #1e
       PRINT_RET       ")"
L0146: RTRUE           
L0147: JE              Ge9,#0e [FALSE] L0150
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0148
       PRINT_RET       "You are carrying nothing."
L0148: JE              Gef,#02 [FALSE] L0149
       PRINT           "You are carrying"
L0149: RTRUE           
L0150: JE              Ge9,#0f [FALSE] L0184
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0151
       PRINT_RET       "Taken."
L0151: JE              Gef,#02 [FALSE] L0152
       PRINT_RET       "You are always self-possessed."
L0152: JE              Gef,#03 [FALSE] L0153
       PRINT           "I don't suppose "
       CALL_2N         R0117 (L01)
       PRINT_RET       " would care for that."
L0153: JE              Gef,#04 [FALSE] L0158
       PRINT           "You'd have to get "
       JG              #01,L01 [TRUE] L0154
       JG              L01,#0082 [FALSE] L0155
L0154: CALL_VN         R0471 (#03,L01)
       JUMP            L0156
L0155: TEST_ATTR       L01,#16 [FALSE] L0156
       PRINT           "off "
       JUMP            L0157
L0156: PRINT           "out of "
L0157: CALL_2N         R0117 (L01)
       PRINT_RET       " first."
L0158: JE              Gef,#05 [FALSE] L0159
       PRINT           "You already have "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0159: JE              Gef,#06 [FALSE] L0164
       JG              #01,G2e [TRUE] L0160
       JG              G2e,#0082 [FALSE] L0161
L0160: CALL_VN         R0471 (#03,G2e)
       JUMP            L0162
L0161: TEST_ATTR       G2e,#20 [FALSE] L0162
       PRINT           "Those seem "
       JUMP            L0163
L0162: PRINT           "That seems "
L0163: PRINT           "to belong to "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0164: JE              Gef,#07 [FALSE] L0169
       JG              #01,G2e [TRUE] L0165
       JG              G2e,#0082 [FALSE] L0166
L0165: CALL_VN         R0471 (#03,G2e)
       JUMP            L0167
L0166: TEST_ATTR       G2e,#20 [FALSE] L0167
       PRINT           "Those seem "
       JUMP            L0168
L0167: PRINT           "That seems "
L0168: PRINT           "to be a part of "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0169: JE              Gef,#08 [FALSE] L0170
       CALL_2N         R0012 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       "n't available."
L0170: JE              Gef,#09 [FALSE] L0171
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       "n't open."
L0171: JE              Gef,#0a [FALSE] L0176
       JG              #01,L01 [TRUE] L0172
       JG              L01,#0082 [FALSE] L0173
L0172: CALL_VN         R0471 (#03,L01)
       JUMP            L0174
L0173: TEST_ATTR       L01,#20 [FALSE] L0174
       PRINT           "They're "
       JUMP            L0175
L0174: PRINT           "That's "
L0175: PRINT_RET       "hardly portable."
L0176: JE              Gef,#0b [FALSE] L0181
       JG              #01,L01 [TRUE] L0177
       JG              L01,#0082 [FALSE] L0178
L0177: CALL_VN         R0471 (#03,L01)
       JUMP            L0179
L0178: TEST_ATTR       L01,#20 [FALSE] L0179
       PRINT           "They're "
       JUMP            L0180
L0179: PRINT           "That's "
L0180: PRINT_RET       "fixed in place."
L0181: JE              Gef,#0c [FALSE] L0182
       PRINT_PADDR     S076
       NEW_LINE        
       RTRUE           
L0182: JE              Gef,#0d [FALSE] L0183
       PRINT           "(putting "
       CALL_2N         R0117 (L01)
       PRINT           " into "
       CALL_2N         R0117 (#0000)
       PRINT_RET       " to make room)"
L0183: RTRUE           
L0184: JE              Ge9,#10 [FALSE] L0193
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0189
       JG              #01,L01 [TRUE] L0185
       JG              L01,#0082 [FALSE] L0186
L0185: CALL_VN         R0471 (#03,L01)
       JUMP            L0187
L0186: TEST_ATTR       L01,#20 [FALSE] L0187
       CALL_2N         R0118 (L01)
       PRINT           " are "
       JUMP            L0188
L0187: CALL_2N         R0118 (L01)
       PRINT           " is "
L0188: PRINT_RET       "already here."
L0189: JE              Gef,#02 [FALSE] L0190
       PRINT           "You haven't got "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0190: JE              Gef,#03 [FALSE] L0191
       PRINT           "(first taking "
       CALL_2N         R0117 (L01)
       PRINT_RET       " off)"
L0191: JE              Gef,#04 [FALSE] L0192
       PRINT_RET       "Dropped."
L0192: RTRUE           
L0193: JE              Ge9,#11 [FALSE] L0205
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0198
       JG              #01,L01 [TRUE] L0194
       JG              L01,#0082 [FALSE] L0195
L0194: CALL_VN         R0471 (#03,L01)
       JUMP            L0196
L0195: TEST_ATTR       L01,#20 [FALSE] L0196
       PRINT           "They are"
       JUMP            L0197
L0196: PRINT           "It is"
L0197: PRINT_RET       " unfortunately closed."
L0198: JE              Gef,#02 [FALSE] L0203
       JG              #01,L01 [TRUE] L0199
       JG              L01,#0082 [FALSE] L0200
L0199: CALL_VN         R0471 (#03,L01)
       JUMP            L0201
L0200: TEST_ATTR       L01,#20 [FALSE] L0201
       PRINT           "But they aren't"
       JUMP            L0202
L0201: PRINT           "But it isn't"
L0202: PRINT_RET       " there now."
L0203: JE              Gef,#03 [FALSE] L0204
       PRINT_RET       "Removed."
L0204: RTRUE           
L0205: JE              Ge9,#12 [FALSE] L0214
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0206
       PRINT           "You need to be holding "
       CALL_2N         R0117 (L01)
       PRINT           " before you can put "
       CALL_2N         R0010 (L01)
       PRINT_RET       " on top of something else."
L0206: JE              Gef,#02 [FALSE] L0207
       PRINT_PADDR     S077
       NEW_LINE        
       RTRUE           
L0207: JE              Gef,#03 [FALSE] L0208
       PRINT           "Putting things on "
       CALL_2N         R0117 (L01)
       PRINT_RET       " would achieve nothing."
L0208: JE              Gef,#04 [FALSE] L0209
       PRINT_RET       "You lack the dexterity."
L0209: JE              Gef,#05 [FALSE] L0210
       PRINT           "(first taking "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off)
"
L0210: JE              Gef,#06 [FALSE] L0211
       PRINT           "There is no more room on "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0211: JE              Gef,#07 [FALSE] L0212
       PRINT_RET       "Done."
L0212: JE              Gef,#08 [FALSE] L0213
       PRINT           "You put "
       CALL_2N         R0117 (L01)
       PRINT           " on "
       CALL_2N         R0117 (G2f)
       PRINT_RET       "."
L0213: RTRUE           
L0214: JE              Ge9,#13 [FALSE] L0224
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0215
       PRINT           "You need to be holding "
       CALL_2N         R0117 (L01)
       PRINT           " before you can put "
       CALL_2N         R0010 (L01)
       PRINT_RET       " into something else."
L0215: JE              Gef,#02 [FALSE] L0216
       CALL_2N         R0012 (L01)
       PRINT_RET       " can't contain things."
L0216: JE              Gef,#03 [FALSE] L0217
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0217: JE              Gef,#04 [FALSE] L0218
       PRINT           "You'll need to take "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off first."
L0218: JE              Gef,#05 [FALSE] L0219
       PRINT_PADDR     S078
       NEW_LINE        
       RTRUE           
L0219: JE              Gef,#06 [FALSE] L0220
       PRINT           "(first taking "
       CALL_2N         R0010 (L01)
       PRINT_RET       " off)
"
L0220: JE              Gef,#07 [FALSE] L0221
       PRINT           "There is no more room in "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0221: JE              Gef,#08 [FALSE] L0222
       PRINT_RET       "Done."
L0222: JE              Gef,#09 [FALSE] L0223
       PRINT           "You put "
       CALL_2N         R0117 (L01)
       PRINT           " into "
       CALL_2N         R0117 (G2f)
       PRINT_RET       "."
L0223: RTRUE           
L0224: JE              Ge9,#14 [FALSE] L0229
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0225
       CALL_2N         R0118 (L01)
       PRINT_RET       " can't contain things."
L0225: JE              Gef,#02 [FALSE] L0226
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0226: JE              Gef,#03 [FALSE] L0227
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " empty already."
L0227: JE              Gef,#04 [FALSE] L0228
       PRINT_PADDR     S079
       NEW_LINE        
       RTRUE           
L0228: RTRUE           
L0229: JE              Ge9,#15 [FALSE] L0237
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0230
       PRINT           "You aren't holding "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0230: JE              Gef,#02 [FALSE] L0231
       PRINT           "You juggle "
       CALL_2N         R0117 (L01)
       PRINT_PADDR     S080
       NEW_LINE        
       RTRUE           
L0231: JE              Gef,#03 [FALSE] L0236
       CALL_2N         R0118 (L01)
       JG              #01,L01 [TRUE] L0232
       JG              L01,#0082 [FALSE] L0233
L0232: CALL_VN         R0471 (#03,L01)
       JUMP            L0234
L0233: TEST_ATTR       L01,#20 [FALSE] L0234
       PRINT           " don't"
       JUMP            L0235
L0234: PRINT           " doesn't"
L0235: PRINT_RET       " seem interested."
L0236: RTRUE           
L0237: JE              Ge9,#16 [FALSE] L0240
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0238
       PRINT           "You aren't holding "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0238: JE              Gef,#02 [FALSE] L0239
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " unimpressed."
L0239: RTRUE           
L0240: JE              Ge9,#17 [FALSE] L0273
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0245
       PRINT           "But you're already "
       JG              #01,L01 [TRUE] L0241
       JG              L01,#0082 [FALSE] L0242
L0241: CALL_VN         R0471 (#03,L01)
       JUMP            L0243
L0242: TEST_ATTR       L01,#16 [FALSE] L0243
       PRINT           "on "
       JUMP            L0244
L0243: PRINT           "in "
L0244: CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0245: JE              Gef,#02 [FALSE] L0253
       JG              #01,L01 [TRUE] L0246
       JG              L01,#0082 [FALSE] L0247
L0246: CALL_VN         R0471 (#03,L01)
       JUMP            L0248
L0247: TEST_ATTR       L01,#20 [FALSE] L0248
       PRINT           "They're"
       JUMP            L0249
L0248: PRINT           "That's"
L0249: PRINT           " not something you can "
       STORE           Gef,G7b
       JE              Gef,"stand" [FALSE] L0250
       PRINT_RET       "stand on."
L0250: JE              Gef,"sit" [FALSE] L0251
       PRINT_RET       "sit down on."
L0251: JE              Gef,"lie" [FALSE] L0252
       PRINT_RET       "lie down on."
L0252: PRINT_RET       "enter."
       JUMP            L0272
L0253: JE              Gef,#03 [FALSE] L0254
       PRINT           "You can't get into the closed "
       CALL_2N         R0119 (L01)
       PRINT_RET       "."
L0254: JE              Gef,#04 [FALSE] L0255
       PRINT_PADDR     S081
       NEW_LINE        
       RTRUE           
L0255: JE              Gef,#05 [FALSE] L0260
       PRINT           "You get "
       JG              #01,L01 [TRUE] L0256
       JG              L01,#0082 [FALSE] L0257
L0256: CALL_VN         R0471 (#03,L01)
       JUMP            L0258
L0257: TEST_ATTR       L01,#16 [FALSE] L0258
       PRINT           "onto "
       JUMP            L0259
L0258: PRINT           "into "
L0259: CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0260: JE              Gef,#06 [FALSE] L0265
       PRINT           "(getting "
       JG              #01,L01 [TRUE] L0261
       JG              L01,#0082 [FALSE] L0262
L0261: CALL_VN         R0471 (#03,L01)
       JUMP            L0263
L0262: TEST_ATTR       L01,#16 [FALSE] L0263
       PRINT           "off "
       JUMP            L0264
L0263: PRINT           "out of "
L0264: CALL_2N         R0117 (L01)
       PRINT_RET       ")"
L0265: JE              Gef,#07 [FALSE] L0272
       JG              #01,L01 [TRUE] L0266
       JG              L01,#0082 [FALSE] L0267
L0266: CALL_VN         R0471 (#03,L01)
       JUMP            L0268
L0267: TEST_ATTR       L01,#16 [FALSE] L0268
       PRINT           "(getting onto "
       CALL_2N         R0117 (L01)
       PRINT_RET       ")
"
L0268: JG              #01,L01 [TRUE] L0269
       JG              L01,#0082 [FALSE] L0270
L0269: CALL_VN         R0471 (#03,L01)
       JUMP            L0271
L0270: TEST_ATTR       L01,#06 [FALSE] L0271
       PRINT           "(getting into "
       CALL_2N         R0117 (L01)
       PRINT_RET       ")
"
L0271: PRINT           "(entering "
       CALL_2N         R0117 (L01)
       PRINT_RET       ")
"
L0272: RTRUE           
L0273: JE              Ge9,#18 [FALSE] L0274
       PRINT           "But you aren't on "
       CALL_2N         R0117 (L01)
       PRINT_RET       " at the moment."
L0274: JE              Ge9,#19 [FALSE] L0282
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0275
       PRINT_PADDR     S082
       NEW_LINE        
       RTRUE           
L0275: JE              Gef,#02 [FALSE] L0276
       PRINT           "You can't get out of the closed "
       CALL_2N         R0119 (L01)
       PRINT_RET       "."
L0276: JE              Gef,#03 [FALSE] L0281
       PRINT           "You get "
       JG              #01,L01 [TRUE] L0277
       JG              L01,#0082 [FALSE] L0278
L0277: CALL_VN         R0471 (#03,L01)
       JUMP            L0279
L0278: TEST_ATTR       L01,#16 [FALSE] L0279
       PRINT           "off "
       JUMP            L0280
L0279: PRINT           "out of "
L0280: CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0281: RTRUE           
L0282: JE              Ge9,#1a [FALSE] L0283
       PRINT_PADDR     S083
       NEW_LINE        
       RTRUE           
L0283: JE              Ge9,#1b [FALSE] L0297
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0288
       PRINT           "You'll have to get "
       JG              #01,L01 [TRUE] L0284
       JG              L01,#0082 [FALSE] L0285
L0284: CALL_VN         R0471 (#03,L01)
       JUMP            L0286
L0285: TEST_ATTR       L01,#16 [FALSE] L0286
       PRINT           "off "
       JUMP            L0287
L0286: PRINT           "out of "
L0287: CALL_2N         R0117 (L01)
       PRINT_RET       " first."
L0288: JE              Gef,#02 [FALSE] L0289
       PRINT_RET       "You can't go that way."
L0289: JE              Gef,#03 [FALSE] L0290
       PRINT           "You are unable to climb "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0290: JE              Gef,#04 [FALSE] L0291
       PRINT           "You are unable to descend by "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0291: JE              Gef,#05 [FALSE] L0292
       PRINT           "You can't, since "
       CALL_2N         R0117 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " in the way."
L0292: JE              Gef,#06 [FALSE] L0296
       PRINT           "You can't, since "
       CALL_2N         R0117 (L01)
       JG              #01,L01 [TRUE] L0293
       JG              L01,#0082 [FALSE] L0294
L0293: CALL_VN         R0471 (#03,L01)
       JUMP            L0295
L0294: TEST_ATTR       L01,#20 [FALSE] L0295
       PRINT_RET       " lead nowhere."
L0295: PRINT_RET       " leads nowhere."
L0296: RTRUE           
L0297: JE              Ge9,#1c [FALSE] L0298
       PRINT_PADDR     S084
       NEW_LINE        
       RTRUE           
L0298: JE              Ge9,#1d [FALSE] L0299
       PRINT_PADDR     S085
       NEW_LINE        
       RTRUE           
L0299: JE              Ge9,#1e [FALSE] L0300
       PRINT_PADDR     S086
       NEW_LINE        
       RTRUE           
L0300: JE              Ge9,#1f [FALSE] L0322
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0301
       PRINT           " (on "
       CALL_2N         R0117 (L01)
       PRINT           ")"
       JUMP            L0321
L0301: JE              Gef,#02 [FALSE] L0302
       PRINT           " (in "
       CALL_2N         R0117 (L01)
       PRINT           ")"
       JUMP            L0321
L0302: JE              Gef,#03 [FALSE] L0303
       PRINT           " (as "
       PRINT_OBJ       L01
       PRINT           ")"
       JUMP            L0321
L0303: JE              Gef,#04 [FALSE] L0308
       PRINT           "
On "
       CALL_2N         R0117 (L01)
       ADD             #0008,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       JG              #05,L01 [TRUE] L0304
       JG              L01,#0082 [TRUE] L0304
       JIN             L01,"Class" [FALSE] L0305
L0304: CALL_VN         R0471 (#06,L01)
       STORE           Gee,#02
       JUMP            L0306
L0305: STORE           Gee,L01
L0306: GET_CHILD       Gee -> -(SP) [FALSE] L0307
L0307: CALL_VN         R0140 ((SP)+,(SP)+)
       PRINT_RET       "."
L0308: JE              L01,G00 [TRUE] L0313
       JG              #01,L01 [TRUE] L0309
       JG              L01,#0082 [FALSE] L0310
L0309: CALL_VN         R0471 (#03,L01)
       JUMP            L0311
L0310: TEST_ATTR       L01,#16 [FALSE] L0311
       PRINT           "
On "
       JUMP            L0312
L0311: PRINT           "
In "
L0312: CALL_2N         R0117 (L01)
       PRINT           " you"
       JUMP            L0314
L0313: PRINT           "
You"
L0314: PRINT           " can "
       JE              L00,#05 [FALSE] L0315
       PRINT           "also "
L0315: PRINT           "see "
       ADD             #0008,#0200 -> -(SP)
       ADD             (SP)+,#0010 -> -(SP)
       ADD             (SP)+,#0080 -> -(SP)
       ADD             (SP)+,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       JG              #05,L01 [TRUE] L0316
       JG              L01,#0082 [TRUE] L0316
       JIN             L01,"Class" [FALSE] L0317
L0316: CALL_VN         R0471 (#06,L01)
       STORE           Gee,#02
       JUMP            L0318
L0317: STORE           Gee,L01
L0318: GET_CHILD       Gee -> -(SP) [FALSE] L0319
L0319: CALL_VN         R0140 ((SP)+,(SP)+)
       JE              L01,G00 [TRUE] L0320
       PRINT_RET       "."
L0320: PRINT_RET       " here."
L0321: RTRUE           
L0322: JE              Ge9,#20 [FALSE] L0329
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0323
       PRINT_PADDR     S087
       NEW_LINE        
       RTRUE           
L0323: JE              Gef,#02 [FALSE] L0324
       PRINT           "You see nothing special about "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0324: JE              Gef,#03 [FALSE] L0328
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT           " currently switched "
       JG              #01,L01 [TRUE] L0325
       JG              L01,#0082 [FALSE] L0326
L0325: CALL_VN         R0471 (#03,L01)
       JUMP            L0327
L0326: TEST_ATTR       L01,#0f [FALSE] L0327
       PRINT_RET       "on."
L0327: PRINT_RET       "off."
L0328: RTRUE           
L0329: JE              Ge9,#21 [FALSE] L0332
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0330
       PRINT_RET       "But it's dark."
L0330: JE              Gef,#02 [FALSE] L0331
       PRINT_RET       "You find nothing of interest."
L0331: RTRUE           
L0332: JE              Ge9,#22 [FALSE] L0348
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0333
       PRINT_RET       "But it's dark."
L0333: JE              Gef,#02 [FALSE] L0334
       PRINT           "There is nothing on "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0334: JE              Gef,#03 [FALSE] L0339
       PRINT           "On "
       CALL_2N         R0117 (L01)
       ADD             #0040,#0008 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       JG              #05,L01 [TRUE] L0335
       JG              L01,#0082 [TRUE] L0335
       JIN             L01,"Class" [FALSE] L0336
L0335: CALL_VN         R0471 (#06,L01)
       STORE           Gee,#02
       JUMP            L0337
L0336: STORE           Gee,L01
L0337: GET_CHILD       Gee -> -(SP) [FALSE] L0338
L0338: CALL_VN         R0140 ((SP)+,(SP)+)
       PRINT_RET       "."
L0339: JE              Gef,#04 [FALSE] L0340
       PRINT_RET       "You find nothing of interest."
L0340: JE              Gef,#05 [FALSE] L0341
       PRINT           "You can't see inside, since "
       CALL_2N         R0117 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " closed."
L0341: JE              Gef,#06 [FALSE] L0342
       CALL_2N         R0118 (L01)
       PRINT           " "
       CALL_2N         R0011 (L01)
       PRINT_RET       " empty."
L0342: JE              Gef,#07 [FALSE] L0347
       PRINT           "In "
       CALL_2N         R0117 (L01)
       ADD             #0040,#0008 -> -(SP)
       ADD             (SP)+,#0400 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       JG              #05,L01 [TRUE] L0343
       JG              L01,#0082 [TRUE] L0343
       JIN             L01,"Class" [FALSE] L0344
L0343: CALL_VN         R0471 (#06,L01)
       STORE           Gee,#02
       JUMP            L0345
L0344: STORE           Gee,L01
L0345: GET_CHILD       Gee -> -(SP) [FALSE] L0346
L0346: CALL_VN         R0140 ((SP)+,(SP)+)
       PRINT_RET       "."
L0347: RTRUE           
L0348: JE              Ge9,#23 [FALSE] L0361
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0353
       JG              #01,L01 [TRUE] L0349
       JG              L01,#0082 [FALSE] L0350
L0349: CALL_VN         R0471 (#03,L01)
       JUMP            L0351
L0350: TEST_ATTR       L01,#20 [FALSE] L0351
       PRINT           "They don't "
       JUMP            L0352
L0351: PRINT           "That doesn't "
L0352: PRINT_PADDR     S088
       NEW_LINE        
       RTRUE           
L0353: JE              Gef,#02 [FALSE] L0354
       CALL_2N         R0013 (L01)
       PRINT_RET       " unlocked at the moment."
L0354: JE              Gef,#03 [FALSE] L0359
       JG              #01,L01 [TRUE] L0355
       JG              L01,#0082 [FALSE] L0356
L0355: CALL_VN         R0471 (#03,L01)
       JUMP            L0357
L0356: TEST_ATTR       L01,#20 [FALSE] L0357
       PRINT           "Those don't "
       JUMP            L0358
L0357: PRINT           "That doesn't "
L0358: PRINT_RET       "seem to fit the lock."
L0359: JE              Gef,#04 [FALSE] L0360
       PRINT           "You unlock "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0360: RTRUE           
L0361: JE              Ge9,#24 [FALSE] L0375
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0366
       JG              #01,L01 [TRUE] L0362
       JG              L01,#0082 [FALSE] L0363
L0362: CALL_VN         R0471 (#03,L01)
       JUMP            L0364
L0363: TEST_ATTR       L01,#20 [FALSE] L0364
       PRINT           "They don't "
       JUMP            L0365
L0364: PRINT           "That doesn't "
L0365: PRINT_PADDR     S089
       NEW_LINE        
       RTRUE           
L0366: JE              Gef,#02 [FALSE] L0367
       CALL_2N         R0013 (L01)
       PRINT_RET       " locked at the moment."
L0367: JE              Gef,#03 [FALSE] L0368
       PRINT           "First you'll have to close "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0368: JE              Gef,#04 [FALSE] L0373
       JG              #01,L01 [TRUE] L0369
       JG              L01,#0082 [FALSE] L0370
L0369: CALL_VN         R0471 (#03,L01)
       JUMP            L0371
L0370: TEST_ATTR       L01,#20 [FALSE] L0371
       PRINT           "Those don't "
       JUMP            L0372
L0371: PRINT           "That doesn't "
L0372: PRINT_RET       "seem to fit the lock."
L0373: JE              Gef,#05 [FALSE] L0374
       PRINT           "You lock "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0374: RTRUE           
L0375: JE              Ge9,#25 [FALSE] L0379
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0376
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can switch."
L0376: JE              Gef,#02 [FALSE] L0377
       CALL_2N         R0013 (L01)
       PRINT_RET       " already on."
L0377: JE              Gef,#03 [FALSE] L0378
       PRINT           "You switch "
       CALL_2N         R0117 (L01)
       PRINT_RET       " on."
L0378: RTRUE           
L0379: JE              Ge9,#26 [FALSE] L0383
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0380
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can switch."
L0380: JE              Gef,#02 [FALSE] L0381
       CALL_2N         R0013 (L01)
       PRINT_RET       " already off."
L0381: JE              Gef,#03 [FALSE] L0382
       PRINT           "You switch "
       CALL_2N         R0117 (L01)
       PRINT_RET       " off."
L0382: RTRUE           
L0383: JE              Ge9,#27 [FALSE] L0398
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0384
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can open."
L0384: JE              Gef,#02 [FALSE] L0389
       JG              #01,L01 [TRUE] L0385
       JG              L01,#0082 [FALSE] L0386
L0385: CALL_VN         R0471 (#03,L01)
       JUMP            L0387
L0386: TEST_ATTR       L01,#20 [FALSE] L0387
       PRINT           "They seem "
       JUMP            L0388
L0387: PRINT           "It seems "
L0388: PRINT_RET       "to be locked."
L0389: JE              Gef,#03 [FALSE] L0390
       CALL_2N         R0013 (L01)
       PRINT_RET       " already open."
L0390: JE              Gef,#04 [FALSE] L0396
       PRINT           "You open "
       CALL_2N         R0117 (L01)
       PRINT           ", revealing "
       ADD             #0008,#0040 -> -(SP)
       ADD             (SP)+,#0800 -> -(SP)
       JG              #05,L01 [TRUE] L0391
       JG              L01,#0082 [TRUE] L0391
       JIN             L01,"Class" [FALSE] L0392
L0391: CALL_VN         R0471 (#06,L01)
       STORE           Gee,#02
       JUMP            L0393
L0392: STORE           Gee,L01
L0393: GET_CHILD       Gee -> -(SP) [FALSE] L0394
L0394: CALL_VS         R0140 ((SP)+,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0395
       PRINT_RET       "nothing."
L0395: PRINT_RET       "."
L0396: JE              Gef,#05 [FALSE] L0397
       PRINT           "You open "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0397: RTRUE           
L0398: JE              Ge9,#28 [FALSE] L0402
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0399
       CALL_2N         R0013 (L01)
       PRINT_RET       " not something you can close."
L0399: JE              Gef,#02 [FALSE] L0400
       CALL_2N         R0013 (L01)
       PRINT_RET       " already closed."
L0400: JE              Gef,#03 [FALSE] L0401
       PRINT           "You close "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0401: RTRUE           
L0402: JE              Ge9,#29 [FALSE] L0405
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0403
       PRINT           "You're not wearing "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0403: JE              Gef,#02 [FALSE] L0404
       PRINT           "You take off "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0404: RTRUE           
L0405: JE              Ge9,#2a [FALSE] L0410
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0406
       PRINT           "You can't wear "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0406: JE              Gef,#02 [FALSE] L0407
       PRINT           "You're not holding "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0407: JE              Gef,#03 [FALSE] L0408
       PRINT           "You're already wearing "
       CALL_2N         R0009 (L01)
       PRINT_RET       "!"
L0408: JE              Gef,#04 [FALSE] L0409
       PRINT           "You put on "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0409: RTRUE           
L0410: JE              Ge9,#2b [FALSE] L0413
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0411
       CALL_2N         R0013 (L01)
       PRINT_RET       " plainly inedible."
L0411: JE              Gef,#02 [FALSE] L0412
       PRINT           "You eat "
       CALL_2N         R0117 (L01)
       PRINT_RET       ". Not bad."
L0412: RTRUE           
L0413: JE              Ge9,#2c,#2d [FALSE] L0414
       PRINT_RET       "That was a rhetorical question."
L0414: JE              Ge9,#2e [FALSE] L0415
       PRINT_PADDR     S090
       NEW_LINE        
       RTRUE           
L0415: JE              Ge9,#2f [FALSE] L0416
       PRINT_PADDR     S091
       NEW_LINE        
       RTRUE           
L0416: JE              Ge9,#30 [FALSE] L0417
       PRINT_PADDR     S092
       NEW_LINE        
       RTRUE           
L0417: JE              Ge9,#31 [FALSE] L0418
       PRINT_RET       "That seems unnecessary."
L0418: JE              Ge9,#32 [FALSE] L0419
       PRINT_RET       "Keep your mind on the game."
L0419: JE              Ge9,#33 [FALSE] L0420
       PRINT_RET       "What a good idea."
L0420: JE              Ge9,#34 [FALSE] L0421
       PRINT_RET       "You smell nothing unexpected."
L0421: JE              Ge9,#35 [FALSE] L0422
       PRINT_RET       "You hear nothing unexpected."
L0422: JE              Ge9,#36 [FALSE] L0423
       PRINT_RET       "You taste nothing unexpected."
L0423: JE              Ge9,#37 [FALSE] L0427
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0424
       PRINT_RET       "Keep your hands to yourself!"
L0424: JE              Gef,#02 [FALSE] L0425
       PRINT_RET       "You feel nothing unexpected."
L0425: JE              Gef,#03 [FALSE] L0426
       PRINT_RET       "If you think that'll help."
L0426: RTRUE           
L0427: JE              Ge9,#38 [FALSE] L0428
       PRINT_PADDR     S093
       NEW_LINE        
       RTRUE           
L0428: JE              Ge9,#39 [FALSE] L0429
       PRINT           "Cutting "
       CALL_2N         R0009 (L01)
       PRINT_RET       " up would achieve little."
L0429: JE              Ge9,#3a [FALSE] L0430
       PRINT_PADDR     S094
       NEW_LINE        
       RTRUE           
L0430: JE              Ge9,#3b,#3c [FALSE] L0431
       PRINT_PADDR     S095
       NEW_LINE        
       RTRUE           
L0431: JE              Ge9,#3d [FALSE] L0432
       PRINT_PADDR     S096
       NEW_LINE        
       RTRUE           
L0432: JE              Ge9,#3e [FALSE] L0433
       PRINT_PADDR     S097
       NEW_LINE        
       RTRUE           
L0433: JE              Ge9,#3f [FALSE] L0434
       PRINT_RET       "Oh, don't apologise."
L0434: JE              Ge9,#40 [FALSE] L0435
       PRINT_PADDR     S098
       NEW_LINE        
       RTRUE           
L0435: JE              Ge9,#41 [FALSE] L0436
       PRINT_RET       "Quite."
L0436: JE              Ge9,#42 [FALSE] L0437
       PRINT_PADDR     S099
       NEW_LINE        
       RTRUE           
L0437: JE              Ge9,#43 [FALSE] L0438
       PRINT_PADDR     S100
       NEW_LINE        
       RTRUE           
L0438: JE              Ge9,#44 [FALSE] L0439
       PRINT_PADDR     S101
       NEW_LINE        
       RTRUE           
L0439: JE              Ge9,#45 [FALSE] L0440
       PRINT           "You can't usefully blow "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0440: JE              Ge9,#46 [FALSE] L0441
       PRINT_RET       "You achieve nothing by this."
L0441: JE              Ge9,#47 [FALSE] L0442
       PRINT           "No, you can't set "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0442: JE              Ge9,#48 [FALSE] L0443
       PRINT           "No, you can't set "
       CALL_2N         R0009 (L01)
       PRINT_RET       " to anything."
L0443: JE              Ge9,#49 [FALSE] L0444
       PRINT_RET       "You wave, feeling foolish."
L0444: JE              Ge9,#4a [FALSE] L0447
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0445
       PRINT           "But you aren't holding "
       CALL_2N         R0009 (L01)
       PRINT_RET       "."
L0445: JE              Gef,#02 [FALSE] L0446
       PRINT           "You look ridiculous waving "
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0446: RTRUE           
L0447: JE              Ge9,#4b,#4c,#4d [FALSE] L0456
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0452
       JG              #01,L01 [TRUE] L0448
       JG              L01,#0082 [FALSE] L0449
L0448: CALL_VN         R0471 (#03,L01)
       JUMP            L0450
L0449: TEST_ATTR       L01,#20 [FALSE] L0450
       PRINT           "Those are "
       JUMP            L0451
L0450: PRINT           "It is "
L0451: PRINT_RET       "fixed in place."
L0452: JE              Gef,#02 [FALSE] L0453
       PRINT_RET       "You are unable to."
L0453: JE              Gef,#03 [FALSE] L0454
       PRINT_RET       "Nothing obvious happens."
L0454: JE              Gef,#04 [FALSE] L0455
       PRINT_PADDR     S102
       NEW_LINE        
       RTRUE           
L0455: RTRUE           
L0456: JE              Ge9,#4e [FALSE] L0460
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0457
       PRINT_PADDR     S103
       NEW_LINE        
       RTRUE           
L0457: JE              Gef,#02 [FALSE] L0458
       PRINT_RET       "That's not a direction."
L0458: JE              Gef,#03 [FALSE] L0459
       PRINT_RET       "Not that way you can't."
L0459: RTRUE           
L0460: JE              Ge9,#4f [FALSE] L0463
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0461
       PRINT_RET       "Keep your hands to yourself."
L0461: JE              Gef,#02 [FALSE] L0462
       PRINT_RET       "You achieve nothing by this."
L0462: RTRUE           
L0463: JE              Ge9,#50 [FALSE] L0466
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0464
       PRINT_RET       "Futile."
L0464: JE              Gef,#02 [FALSE] L0465
       PRINT_PADDR     S104
       NEW_LINE        
       RTRUE           
L0465: RTRUE           
L0466: JE              Ge9,#51 [FALSE] L0469
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0467
       PRINT_RET       "You talk to yourself a while."
L0467: JE              Gef,#02 [FALSE] L0468
       PRINT_RET       "This provokes no reaction."
L0468: RTRUE           
L0469: JE              Ge9,#52,#53 [FALSE] L0470
       PRINT_RET       "There is no reply."
L0470: JE              Ge9,#54 [FALSE] L0471
       PRINT_RET       "Nothing is on sale."
L0471: JE              Ge9,#55 [FALSE] L0472
       PRINT_RET       "Your singing is abominable."
L0472: JE              Ge9,#56 [FALSE] L0473
       PRINT_PADDR     S105
       NEW_LINE        
       RTRUE           
L0473: JE              Ge9,#57 [FALSE] L0474
       PRINT_RET       "Time passes."
L0474: JE              Ge9,#58 [FALSE] L0475
       PRINT_PADDR     S106
       NEW_LINE        
       RTRUE           
L0475: JE              Ge9,#59 [FALSE] L0476
       PRINT_PADDR     S107
       CALL_2N         R0117 (L01)
       PRINT_RET       "."
L0476: RTRUE           

Routine R0015, 0 locals

       CALL_VS         R0285 (#1007,#11) -> -(SP)
       RET_POPPED      

Routine R0016, 0 locals

       CALL_VS         R0285 (#1007,#12) -> -(SP)
       RET_POPPED      

Routine R0017, 0 locals

       CALL_VS         R0285 (#1007,#13) -> -(SP)
       RET_POPPED      

Routine R0018, 1 local

       JE              L00,#0f [FALSE] L0001
       STORE           G55,#01
       STORE           G56,#0f
       RTRUE           
L0001: CALL_VS         R0483 (L00,#00) -> -(SP)
       AND             (SP)+,#0f -> G55
       ADD             L00,#01 -> -(SP)
       CALL_VS         R0484 ((SP)+,#00) -> G56
       RTRUE           

Routine R0019, 2 locals

       STORE           L01,#00
L0001: JL              L01,#20 [FALSE] L0011
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1f,L01,#1f,#01,#09)
       JUMP            L0004
L0003: STOREW          #1e22,L01,#0f
L0004: JL              L01,#00 [TRUE] L0005
       JL              L01,#20 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1f,L01,#1f,#01,#07)
       JUMP            L0007
L0006: STOREW          #1da2,L01,#01
L0007: JL              L01,#00 [TRUE] L0008
       JL              L01,#20 [TRUE] L0009
L0008: CALL_VN2        R0471 (#1f,L01,#1f,#01,#08)
       JUMP            L0010
L0009: STOREW          #1de2,L01,#0f
L0010: INC             L01
       JUMP            L0001
L0011: CALL_VS         R0483 (L00,#01) -> -(SP)
       CALL_VS         R0483 (L00,#00) -> -(SP)
       MUL             #0100,(SP)+ -> -(SP)
       ADD             (SP)+,(SP)+ -> G52
       AND             G52,#0400 -> -(SP)
       JZ              (SP)+ [FALSE] L0012
       PUSH            #00
       JUMP            L0013
L0012: PUSH            #01
L0013: PULL            G53
       AND             G52,#03ff -> G52
       DEC             L00
       STORE           G4e,#00
       STORE           L01,#00
L0014: ADD             L00,#03 -> L00
       CALL_VS         R0483 (L00,#00) -> -(SP)
       JE              (SP)+,#0f [FALSE] L0015
       JUMP            L0026
L0015: JL              L01,#00 [TRUE] L0016
       JL              L01,#20 [TRUE] L0017
L0016: CALL_VN2        R0471 (#1f,L01,#1f,#01,#09)
       JUMP            L0018
L0017: STOREW          #1e22,L01,L00
L0018: CALL_2N         R0018 (L00)
       JE              G55,#02 [TRUE] L0019
       INC             G4e
L0019: JL              L01,#00 [TRUE] L0020
       JL              L01,#20 [TRUE] L0021
L0020: CALL_VN2        R0471 (#1f,L01,#1f,#01,#07)
       JUMP            L0022
L0021: STOREW          #1da2,L01,G55
L0022: JL              L01,#00 [TRUE] L0023
       JL              L01,#20 [TRUE] L0024
L0023: CALL_VN2        R0471 (#1f,L01,#1f,#01,#08)
       JUMP            L0025
L0024: STOREW          #1de2,L01,G56
L0025: INC             L01
       JUMP            L0014
L0026: ADD             L00,#01 -> -(SP)
       RET_POPPED      

Routine R0020, 2 locals

       CALL_VS         R0483 (L00,#01) -> -(SP)
       ADD             #02,(SP)+ -> -(SP)
       CALL_VN         R0485 (L00,(SP)+,#00)
       TOKENISE        L00,L01
       RTRUE           

Routine R0021, 1 local

       CALL_2N         R0024 (L00)
       RFALSE          

Routine R0022, 2 locals

       STORE           Gec,L00
       STOREB          Gec,#01,#00
       READ            Gec,L01 -> Gef
       RTRUE           

Routine R0023, 8 locals

       CALL_1N         R0097
L0001: STORE           L03,#00
L0002: JL              L03,#40 [FALSE] L0007
       CALL_VS         R0483 (L00,L03) -> -(SP)
       JL              L03,#00 [TRUE] L0003
       JL              L03,#40 [TRUE] L0005
L0003: CALL_VN2        R0471 (#1e,L03,#3f,#00,#12)
       JZ              (SP)+ [FALSE] L0004
L0004: JUMP            L0006
L0005: STOREB          #21cf,L03,(SP)+
L0006: INC             L03
       JUMP            L0002
L0007: CALL_VN         R0485 (L00,#00,#78)
       CALL_VN         R0485 (L01,#00,#0f)
       CALL_2N         R0285 (#1008)
       CALL_1N         R0452
       CALL_1N         R0113
       CALL_VN         R0022 (L00,L01)
       CALL_VS         R0483 (L01,#01) -> L02
       JZ              L02 [FALSE] L0008
       CALL_VN         R0285 (#1007,#0a)
       JUMP            L0001
L0008: CALL_VS         R0484 (L01,#01) -> L04
       JE              L04,"oops","o","oops" [FALSE] L0009
       JUMP            L0023
L0009: JE              L04,"undo","undo","undo" [FALSE] L0019
       JL              #01,#00 [TRUE] L0010
       JL              #01,#41 [TRUE] L0011
L0010: CALL_VN2        R0471 (#1c,#01,#40,#00,#0e)
       PUSH            #00
       JUMP            L0012
L0011: LOADB           #205b,#01 -> -(SP)
L0012: JE              (SP)+,#01 [FALSE] L0019
       JE              G09,#01 [FALSE] L0013
       CALL_VN         R0285 (#1007,#0b)
       JUMP            L0001
L0013: JZ              G05 [FALSE] L0014
       CALL_VN         R0285 (#1007,#06)
       JUMP            L0001
L0014: JE              G05,#01 [FALSE] L0015
       JUMP            L0017
L0015: JE              G06,#01 [FALSE] L0016
       CALL_VN         R0285 (#1007,#0c)
       JUMP            L0001
L0016: RESTORE_UNDO    -> L03
       JZ              L03 [FALSE] L0018
L0017: CALL_VN         R0285 (#1007,#07)
L0018: JUMP            L0001
L0019: SAVE_UNDO       -> L03
       STORE           G06,#00
       STORE           G05,#02
       JE              L03,#ffff [FALSE] L0020
       STORE           G05,#00
L0020: JZ              L03 [FALSE] L0021
       STORE           G05,#01
L0021: JE              L03,#02 [FALSE] L0022
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0119 (G00)
       PRINT           "
"
       SET_TEXT_STYLE  ROMAN
       CALL_VN         R0285 (#1007,#0d)
       STORE           G06,#01
       JUMP            L0001
L0022: RET             L02
L0023: JZ              G7e [FALSE] L0024
       CALL_VN         R0285 (#1007,#0e)
       JUMP            L0001
L0024: JE              L02,#01 [FALSE] L0025
       CALL_VN         R0285 (#1007,#0f)
       JUMP            L0001
L0025: JG              L02,#02 [FALSE] L0026
       CALL_VN         R0285 (#1007,#10)
       JUMP            L0001
L0026: STORE           L03,#00
L0027: JG              L03,#78 [TRUE] L0032
       CALL_VS         R0483 (L00,L03) -> -(SP)
       JL              L03,#00 [TRUE] L0028
       JL              L03,#79 [TRUE] L0030
L0028: CALL_VN2        R0471 (#1e,L03,#78,#00,#0f)
       JZ              (SP)+ [FALSE] L0029
L0029: JUMP            L0031
L0030: STOREB          #209c,L03,(SP)+
L0031: INC             L03
       JUMP            L0027
L0032: CALL_VS         R0483 (L01,#09) -> L06
       CALL_VS         R0483 (L01,#08) -> L07
       STORE           L03,#00
L0033: JL              L03,#40 [FALSE] L0037
       JL              L03,#00 [TRUE] L0034
       JL              L03,#40 [TRUE] L0035
L0034: CALL_VN2        R0471 (#1c,L03,#3f,#00,#12)
       PUSH            #00
       JUMP            L0036
L0035: LOADB           #21cf,L03 -> -(SP)
L0036: CALL_VN         R0485 (L00,L03,(SP)+)
       INC             L03
       JUMP            L0033
L0037: CALL_VN         R0020 (L00,L01)
       MUL             #04,G7e -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0483 (L01,(SP)+) -> L04
       MUL             #04,G7e -> -(SP)
       CALL_VS         R0483 (L01,(SP)+) -> L05
       STORE           L03,#00
L0038: JL              L03,L05 [FALSE] L0039
       ADD             L03,L04 -> -(SP)
       CALL_VN         R0485 (L00,(SP)+,#20)
       INC             L03
       JUMP            L0038
L0039: JL              L05,L07 [FALSE] L0042
       STORE           L03,#78
L0040: ADD             L04,L07 -> -(SP)
       JL              L03,(SP)+ [TRUE] L0041
       SUB             L03,L07 -> -(SP)
       ADD             (SP)+,L05 -> -(SP)
       CALL_VS         R0483 (L00,(SP)+) -> -(SP)
       CALL_VN         R0485 (L00,L03,(SP)+)
       DEC             L03
       JUMP            L0040
L0041: SUB             L07,L05 -> -(SP)
       CALL_VS         R0483 (L00,#01) -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       CALL_VN         R0485 (L00,#01,(SP)+)
L0042: STORE           L03,#00
L0043: JL              L03,L07 [FALSE] L0048
       ADD             L03,L06 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0044
       JL              Gef,#79 [TRUE] L0046
L0044: CALL_VN2        R0471 (#1c,Gef,#78,#00,#0f)
       JZ              (SP)+ [FALSE] L0045
L0045: PUSH            #00
       JUMP            L0047
L0046: LOADB           #209c,(SP)+ -> -(SP)
L0047: ADD             L03,L04 -> -(SP)
       CALL_VN         R0485 (L00,(SP)+,(SP)+)
       INC             L03
       JUMP            L0043
L0048: CALL_VN         R0020 (L00,L01)
       CALL_VS         R0483 (L01,#01) -> L02
       RET             L02

Routine R0024, 11 locals

       JE              G42,#01 [FALSE] L0006
       STORE           L05,#00
L0001: JL              L05,#08 [FALSE] L0005
       JL              L05,#00 [TRUE] L0002
       JL              L05,#10 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L05,#0f,#01,#04)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1d02,L05 -> -(SP)
L0004: CALL_VN         R0486 (L00,L05,(SP)+)
       INC             L05
       JUMP            L0001
L0005: STORE           G42,#00
       RTRUE           
L0006: JE              G80,#01 [FALSE] L0007
       STORE           G80,#00
       CALL_VN         R0020 (#1fe2,#205b)
       JUMP            L0008
L0007: CALL_VN         R0023 (#1fe2,#205b)
L0008: STORE           G37,#01
       JL              #01,#00 [TRUE] L0009
       JL              #01,#41 [TRUE] L0010
L0009: CALL_VN2        R0471 (#1c,#01,#40,#00,#0e)
       JUMP            L0011
L0010: LOADB           #205b,#01 -> G7a
L0011: STORE           G79,#01
       CALL_1N         R0003
       CALL_VN         R0020 (#1fe2,#205b)
       CALL_1N         R0453
       JL              #01,#00 [TRUE] L0012
       JL              #01,#41 [TRUE] L0013
L0012: CALL_VN2        R0471 (#1c,#01,#40,#00,#0e)
       JUMP            L0014
L0013: LOADB           #205b,#01 -> G7a
L0014: STORE           L07,#00
       JL              G33,#02 [TRUE] L0027
       PRINT           "[ "
       STORE           L05,#00
L0015: JL              L05,G7a [FALSE] L0026
       MUL             L05,#02 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0016
       JL              Gef,#20 [TRUE] L0018
L0016: CALL_VN2        R0471 (#1d,Gef,#40,#08,#0e)
       JZ              (SP)+ [FALSE] L0017
L0017: JUMP            L0019
L0018: LOADW           #205b,(SP)+ -> L06
L0019: ADD             L05,#01 -> -(SP)
       CALL_2S         R0061 ((SP)+) -> L07
       ADD             L05,#01 -> -(SP)
       CALL_2S         R0062 ((SP)+) -> L09
       PRINT           """
       STORE           L0a,#00
L0020: JL              L0a,L09 [FALSE] L0021
       CALL_VS         R0483 (L07,L0a) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       INC             L0a
       JUMP            L0020
L0021: PRINT           "" "
       JZ              L06 [FALSE] L0022
       PRINT           "?"
       JUMP            L0024
L0022: CALL_VS         R0484 (#00,#04) -> -(SP)
       CALL_VS         R0123 (L06,(SP)+) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0023
       CALL_VS         R0484 (#00,#02) -> -(SP)
       CALL_VS         R0123 (L06,(SP)+) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0023
       CALL_2N         R0488 (L06)
       JUMP            L0024
L0023: PRINT_NUM       L06
L0024: SUB             G7a,#01 -> -(SP)
       JE              L05,(SP)+ [TRUE] L0025
       PRINT           " / "
L0025: INC             L05
       JUMP            L0015
L0026: PRINT           " ]
"
L0027: STORE           G7c,#01
       STORE           G38,G13
       CALL_2S         R0025 (G13) -> G39
       STORE           G7d,#00
L0028: STORE           G6e,#00
       STORE           G52,#ffff
L0029: STORE           G79,G7c
       CALL_1S         R0060 -> G7b
       JE              G7b,#ffff [FALSE] L0030
       STORE           G46,#01
       JUMP            L0222
L0030: JE              G7b,"g","again" [FALSE] L0031
       STORE           G7b,"again"
L0031: JE              G7b,"again" [FALSE] L0046
       JE              G38,G13 [TRUE] L0032
       CALL_VN         R0285 (#1007,#14)
       JUMP            L0007
L0032: JL              #01,#00 [TRUE] L0033
       JL              #01,#79 [TRUE] L0034
L0033: CALL_VN2        R0471 (#1c,#01,#78,#00,#11)
       PUSH            #00
       JUMP            L0035
L0034: LOADB           #2156,#01 -> -(SP)
L0035: JZ              (SP)+ [FALSE] L0036
       CALL_VN         R0285 (#1007,#15)
       JUMP            L0007
L0036: STORE           L05,#00
L0037: JL              L05,#78 [FALSE] L0045
       JL              L05,#00 [TRUE] L0038
       JL              L05,#79 [TRUE] L0039
L0038: CALL_VN2        R0471 (#1c,L05,#78,#00,#11)
       PUSH            #00
       JUMP            L0040
L0039: LOADB           #2156,L05 -> -(SP)
L0040: JL              L05,#00 [TRUE] L0041
       JL              L05,#79 [TRUE] L0043
L0041: CALL_VN2        R0471 (#1e,L05,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0042
L0042: JUMP            L0044
L0043: STOREB          #1fe2,L05,(SP)+
L0044: INC             L05
       JUMP            L0037
L0045: JUMP            L0008
L0046: JE              G7b,"again" [TRUE] L0055
       STORE           L05,#00
L0047: JL              L05,#78 [FALSE] L0055
       JL              L05,#00 [TRUE] L0048
       JL              L05,#79 [TRUE] L0049
L0048: CALL_VN2        R0471 (#1c,L05,#78,#00,#0d)
       PUSH            #00
       JUMP            L0050
L0049: LOADB           #1fe2,L05 -> -(SP)
L0050: JL              L05,#00 [TRUE] L0051
       JL              L05,#79 [TRUE] L0053
L0051: CALL_VN2        R0471 (#1e,L05,#78,#00,#11)
       JZ              (SP)+ [FALSE] L0052
L0052: JUMP            L0054
L0053: STOREB          #2156,L05,(SP)+
L0054: INC             L05
       JUMP            L0047
L0055: JZ              G7d [FALSE] L0064
       CALL_VS         R0091 (G38,#1c) -> L05
       JL              G33,#02 [TRUE] L0059
       JG              #01,G38 [TRUE] L0056
       JG              G38,#0082 [FALSE] L0057
L0056: CALL_VN         R0471 (#17,G38)
       STORE           Gee,#02
       JUMP            L0058
L0057: STORE           Gee,G38
L0058: GET_PROP        Gee,#1c -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [TRUE] L0059
       PRINT           " [Grammar property returned "
       PRINT_NUM       L05
       PRINT           "]
"
L0059: JL              L05,#00 [FALSE] L0060
       STORE           G7d,G7c
       SUB             #00,L05 -> L05
L0060: JE              L05,#01 [FALSE] L0061
       CALL_VN         R0486 (L00,#00,G2b)
       CALL_VN         R0486 (L00,#01,G2e)
       CALL_VN         R0486 (L00,#02,G2f)
       RTRUE           
L0061: JZ              L05 [TRUE] L0062
       STORE           G7b,L05
       DEC             G79
       DEC             G7c
       JUMP            L0063
L0062: STORE           G79,G7c
       CALL_1S         R0059 -> G7b
L0063: JUMP            L0065
L0064: STORE           G7d,#00
L0065: JZ              G7b [TRUE] L0066
       CALL_VS         R0483 (G7b,#06) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0087
L0066: STORE           G79,G7c
       STORE           G5e,#00
       STORE           G57,#00
       CALL_VS         R0032 (#08,#00,#00) -> L09
       JE              L09,#2710 [FALSE] L0067
       JUMP            L0008
L0067: JZ              L09 [TRUE] L0068
       CALL_VN         R0486 (L00,#00,#1b)
       STORE           G52,#1b
       CALL_VN         R0486 (L00,#01,#01)
       CALL_VN         R0486 (L00,#02,L09)
       JUMP            L0256
L0068: JE              G38,G13 [FALSE] L0072
       STORE           L06,#02
L0069: JG              L06,G7a [TRUE] L0071
       CALL_1S         R0059 -> L05
       JE              L05,"comma," [FALSE] L0070
       JUMP            L0073
L0070: INC             L06
       JUMP            L0069
L0071: CALL_2S         R0455 (G7b) -> G7b
       JZ              G7b [TRUE] L0072
       JUMP            L0087
L0072: STORE           G46,#0c
       JUMP            L0222
L0073: SUB             G79,#01 -> L06
       JE              L06,#01 [FALSE] L0074
       CALL_VN         R0285 (#1007,#16)
       JUMP            L0007
L0074: STORE           G79,#01
       STORE           G59,#01
       STORE           G6d,#01
       CALL_VS         R0032 (G13,G39,#06) -> L09
       STORE           G6d,#00
       JE              L09,#2710 [FALSE] L0075
       JUMP            L0008
L0075: JZ              L09 [FALSE] L0076
       CALL_VN         R0285 (#1007,#17)
       JUMP            L0007
L0076: JG              #01,L09 [TRUE] L0077
       JG              L09,#0082 [FALSE] L0078
L0077: CALL_VN         R0471 (#03,L09)
       JUMP            L0079
L0078: TEST_ATTR       L09,#02 [TRUE] L0083
L0079: JG              #01,L09 [TRUE] L0080
       JG              L09,#0082 [FALSE] L0081
L0080: CALL_VN         R0471 (#03,L09)
       JUMP            L0082
L0081: TEST_ATTR       L09,#18 [TRUE] L0083
L0082: CALL_VN         R0285 (#1007,#18,L09)
       JUMP            L0007
L0083: JE              G79,L06 [TRUE] L0084
       CALL_VN         R0285 (#1007,#19)
       JUMP            L0007
L0084: CALL_2N         R0075 (L09)
       ADD             L06,#01 -> G7c
       JE              L09,G13 [FALSE] L0085
       STORE           G79,G7c
       CALL_1S         R0060 -> -(SP)
       JE              (SP)+,"again","g","again" [FALSE] L0085
       CALL_VN         R0285 (#1007,#14)
       JUMP            L0007
L0085: STORE           G38,L09
       CALL_2S         R0025 (L09) -> G39
       JL              G33,#01 [TRUE] L0086
       PRINT           "[Actor is "
       CALL_2N         R0117 (G38)
       PRINT           " in "
       CALL_2N         R0119 (G39)
       PRINT           "]
"
L0086: JUMP            L0029
L0087: CALL_VS         R0483 (G7b,#06) -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> G3a
       JE              G3a,#01 [FALSE] L0088
       JE              G38,G13 [TRUE] L0088
       STORE           G46,#0c
       STORE           G3a,#00
       JUMP            L0222
L0088: CALL_VS         R0483 (G7b,#07) -> -(SP)
       SUB             #ff,(SP)+ -> L05
       CALL_VS         R0484 (#00,#07) -> -(SP)
       CALL_VS         R0484 ((SP)+,L05) -> L01
       CALL_VS         R0483 (L01,#00) -> -(SP)
       SUB             (SP)+,#01 -> L03
       STORE           G69,#ffff
       STORE           G6a,#ffff
       JL              G33,#01 [TRUE] L0089
       PRINT           "[Parsing for the verb '"
       CALL_2N         R0488 (G7b)
       PRINT           "' ("
       ADD             L03,#01 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " lines)]
"
L0089: STORE           G46,#01
       STORE           G47,#01
       ADD             L01,#01 -> L04
       STORE           L02,#00
L0090: JG              L02,L03 [TRUE] L0222
       STORE           L05,#00
L0091: JL              L05,#20 [FALSE] L0101
       JL              L05,#00 [TRUE] L0092
       JL              L05,#20 [TRUE] L0093
L0092: CALL_VN2        R0471 (#1f,L05,#1f,#01,#09)
       JUMP            L0094
L0093: STOREW          #1e22,L05,#0f
L0094: JL              L05,#00 [TRUE] L0095
       JL              L05,#20 [TRUE] L0096
L0095: CALL_VN2        R0471 (#1f,L05,#1f,#01,#07)
       JUMP            L0097
L0096: STOREW          #1da2,L05,#01
L0097: JL              L05,#00 [TRUE] L0098
       JL              L05,#20 [TRUE] L0099
L0098: CALL_VN2        R0471 (#1f,L05,#1f,#01,#08)
       JUMP            L0100
L0099: STOREW          #1de2,L05,#0f
L0100: INC             L05
       JUMP            L0091
L0101: CALL_2S         R0019 (L04) -> L04
       JL              G33,#01 [TRUE] L0103
       JL              G33,#02 [TRUE] L0102
       NEW_LINE        
L0102: PRINT           "[line "
       PRINT_NUM       L02
       CALL_1N         R0110
       PRINT           "]
"
L0103: STORE           G44,#00
       STORE           G4f,#00
       STORE           G4a,#00
       STORE           G4b,#00
       STORE           G3d,#00
       STORE           G3e,#00
       JL              #00,#00 [TRUE] L0104
       JL              #00,#40 [TRUE] L0105
L0104: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0106
L0105: STOREW          #1c82,#00,#00
L0106: STORE           G5d,#00
       STORE           G45,#01
       ADD             G7c,#01 -> G79
       STORE           G54,#ffff
       STORE           G5e,#00
       STORE           L05,#00
       STORE           L0a,#00
       STORE           G48,#00
L0107: JL              G48,#00 [TRUE] L0108
       JL              G48,#20 [TRUE] L0109
L0108: CALL_VN2        R0471 (#1d,G48,#1f,#01,#09)
       PUSH            #00
       JUMP            L0110
L0109: LOADW           #1e22,G48 -> -(SP)
L0110: JE              (SP)+,#0f [TRUE] L0153
       STORE           G6e,#00
       JL              G48,#00 [TRUE] L0111
       JL              G48,#20 [TRUE] L0112
L0111: CALL_VN2        R0471 (#1d,G48,#1f,#01,#07)
       PUSH            #00
       JUMP            L0113
L0112: LOADW           #1da2,G48 -> -(SP)
L0113: JE              (SP)+,#02 [TRUE] L0114
       INC             L05
L0114: JL              G48,#00 [TRUE] L0115
       JL              G48,#20 [TRUE] L0116
L0115: CALL_VN2        R0471 (#1d,G48,#1f,#01,#07)
       PUSH            #00
       JUMP            L0117
L0116: LOADW           #1da2,G48 -> -(SP)
L0117: JE              (SP)+,#01 [FALSE] L0152
       JL              G48,#00 [TRUE] L0118
       JL              G48,#20 [TRUE] L0119
L0118: CALL_VN2        R0471 (#1d,G48,#1f,#01,#08)
       PUSH            #00
       JUMP            L0120
L0119: LOADW           #1de2,G48 -> -(SP)
L0120: JE              (SP)+,#02 [FALSE] L0121
       STORE           L0a,#01
L0121: JL              G48,#00 [TRUE] L0122
       JL              G48,#20 [TRUE] L0123
L0122: CALL_VN2        R0471 (#1d,G48,#1f,#01,#08)
       PUSH            #00
       JUMP            L0124
L0123: LOADW           #1de2,G48 -> -(SP)
L0124: JE              (SP)+,#04,#05 [FALSE] L0152
       JE              L05,#01 [FALSE] L0152
       JL              G33,#02 [TRUE] L0125
       PRINT           " [Trying look-ahead]
"
L0125: INC             G48
       JL              G48,#00 [TRUE] L0126
       JL              G48,#20 [TRUE] L0127
L0126: CALL_VN2        R0471 (#1d,G48,#1f,#01,#07)
       PUSH            #00
       JUMP            L0128
L0127: LOADW           #1da2,G48 -> -(SP)
L0128: JE              (SP)+,#02 [FALSE] L0151
L0129: JL              G48,#00 [TRUE] L0130
       JL              G48,#20 [TRUE] L0131
L0130: CALL_VN2        R0471 (#1d,G48,#1f,#01,#07)
       PUSH            #00
       JUMP            L0132
L0131: LOADW           #1da2,G48 -> -(SP)
L0132: JE              (SP)+,#02 [FALSE] L0133
       INC             G48
       JUMP            L0129
L0133: JL              G48,#00 [TRUE] L0134
       JL              G48,#20 [TRUE] L0135
L0134: CALL_VN2        R0471 (#1d,G48,#1f,#01,#07)
       PUSH            #00
       JUMP            L0136
L0135: LOADW           #1da2,G48 -> -(SP)
L0136: JE              (SP)+,#01 [FALSE] L0151
       JL              G48,#00 [TRUE] L0137
       JL              G48,#20 [TRUE] L0138
L0137: CALL_VN2        R0471 (#1d,G48,#1f,#01,#08)
       PUSH            #00
       JUMP            L0139
L0138: LOADW           #1de2,G48 -> -(SP)
L0139: JZ              (SP)+ [FALSE] L0151
L0140: JG              G79,G7a [TRUE] L0151
       SUB             G48,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0141
       JL              Gef,#20 [TRUE] L0143
L0141: CALL_VN2        R0471 (#1d,Gef,#1f,#01,#08)
       JZ              (SP)+ [FALSE] L0142
L0142: PUSH            #00
       JUMP            L0144
L0143: LOADW           #1de2,(SP)+ -> -(SP)
L0144: CALL_1S         R0059 -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0150
       CALL_VS         R0032 (G39,G38,#00) -> L09
       JL              G33,#02 [TRUE] L0148
       PRINT           " [Advanced to "noun" token: "
       JE              L09,#2710 [FALSE] L0145
       PRINT           "re-parse request]
"
L0145: JE              L09,#01 [FALSE] L0146
       PRINT           "but multiple found]
"
L0146: JZ              L09 [FALSE] L0147
       PRINT           "error "
       PRINT_NUM       G45
       PRINT           "]
"
L0147: JL              L09,#02 [TRUE] L0148
       CALL_2N         R0117 (L09)
       PRINT           "]
"
L0148: JE              L09,#2710 [FALSE] L0149
       JUMP            L0008
L0149: JL              L09,#02 [TRUE] L0150
       STORE           G54,L09
L0150: JUMP            L0140
L0151: JUMP            L0153
L0152: INC             G48
       JUMP            L0107
L0153: STORE           G67,#00
       JZ              L0a [TRUE] L0154
       JE              G4e,#01 [FALSE] L0154
       JE              G52,#0f [FALSE] L0154
       STORE           G67,#01
L0154: STORE           G44,#00
       STORE           G4f,#00
       STORE           G4a,#00
       STORE           G4b,#00
       STORE           G3d,#00
       STORE           G3e,#00
       JL              #00,#00 [TRUE] L0155
       JL              #00,#40 [TRUE] L0156
L0155: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0157
L0156: STOREW          #1c82,#00,#00
L0157: STORE           G45,#01
       ADD             G7c,#01 -> G79
       STORE           G48,#01
L0158: JL              G48,#00 [TRUE] L0159
       JL              G48,#20 [TRUE] L0160
L0159: CALL_VN2        R0471 (#1f,G48,#1f,#01,#05)
       JUMP            L0161
L0160: STOREW          #1d22,G48,#ffff
L0161: STORE           G6e,#00
       SUB             G48,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0162
       JL              Gef,#20 [TRUE] L0164
L0162: CALL_VN2        R0471 (#1d,Gef,#1f,#01,#09)
       JZ              (SP)+ [FALSE] L0163
L0163: JUMP            L0165
L0164: LOADW           #1e22,(SP)+ -> L08
L0165: JL              G48,#00 [TRUE] L0166
       JL              G48,#20 [TRUE] L0167
L0166: CALL_VN2        R0471 (#1d,G48,#1f,#01,#09)
       JUMP            L0168
L0167: LOADW           #1e22,G48 -> G59
L0168: JL              G33,#02 [TRUE] L0169
       PRINT           " [line "
       PRINT_NUM       L02
       PRINT           " token "
       PRINT_NUM       G48
       PRINT           " word "
       PRINT_NUM       G79
       PRINT           " : "
       CALL_2N         R0109 (L08)
       PRINT           "]
"
L0169: JE              L08,#0f [TRUE] L0189
       STORE           G6d,#00
       STORE           G37,#01
       CALL_2N         R0018 (L08)
       SUB             G48,#01 -> -(SP)
       CALL_VS2        R0031 (G55,G56,(SP)+,L08) -> L09
L0170: JL              L09,#ff38 [FALSE] L0171
       ADD             L09,#0100 -> -(SP)
       CALL_VS         R0031 (#01,(SP)+) -> L09
       JUMP            L0170
L0171: STORE           G6d,#00
       JZ              L09 [FALSE] L0174
       JE              G55,#02 [TRUE] L0173
       JE              G55,#01 [FALSE] L0172
       JE              G56,#09 [TRUE] L0173
L0172: DEC             G4e
L0173: STORE           L09,#01
       JUMP            L0183
L0174: JL              L09,#00 [FALSE] L0175
       STORE           L09,#00
       JUMP            L0183
L0175: JE              L09,#2710 [TRUE] L0183
       JE              L09,#01 [FALSE] L0178
       JZ              G4b [FALSE] L0176
       STORE           G4c,G3f
       JUMP            L0177
L0176: STORE           G4d,G3f
L0177: INC             G4b
       STORE           L09,#01
L0178: JE              L09,#02 [FALSE] L0179
       STORE           L09,#00
L0179: ADD             G4a,#02 -> -(SP)
       CALL_VN         R0486 (L00,(SP)+,L09)
       INC             G4a
       JL              G48,#00 [TRUE] L0180
       JL              G48,#20 [TRUE] L0181
L0180: CALL_VN2        R0471 (#1f,G48,#1f,#01,#05)
       JUMP            L0182
L0181: STOREW          #1d22,G48,L09
L0182: STORE           L09,#01
L0183: JL              G33,#03 [TRUE] L0186
       PRINT           "  [token resulted in "
       JE              L09,#2710 [FALSE] L0184
       PRINT           "re-parse request]
"
L0184: JZ              L09 [FALSE] L0185
       PRINT           "failure with error type "
       PRINT_NUM       G45
       PRINT           "]
"
L0185: JE              L09,#01 [FALSE] L0186
       PRINT           "success]
"
L0186: JE              L09,#2710 [FALSE] L0187
       JUMP            L0008
L0187: JZ              L09 [FALSE] L0188
       JUMP            L0218
L0188: JUMP            L0217
L0189: JG              G79,G7a [TRUE] L0201
       CALL_1S         R0059 -> L09
       JE              L09,"then","then","then" [TRUE] L0190
       JE              L09,"comma," [FALSE] L0191
L0190: STORE           G80,#01
       SUB             G79,#01 -> G81
       JUMP            L0201
L0191: STORE           L0a,#00
L0192: JL              L0a,#20 [FALSE] L0200
       JL              L0a,#00 [TRUE] L0193
       JL              L0a,#20 [TRUE] L0194
L0193: CALL_VN2        R0471 (#1d,L0a,#1f,#01,#05)
       PUSH            #00
       JUMP            L0195
L0194: LOADW           #1d22,L0a -> -(SP)
L0195: JL              L0a,#00 [TRUE] L0196
       JL              L0a,#20 [TRUE] L0198
L0196: CALL_VN2        R0471 (#1f,L0a,#1f,#01,#06)
       JZ              (SP)+ [FALSE] L0197
L0197: JUMP            L0199
L0198: STOREW          #1d62,L0a,(SP)+
L0199: INC             L0a
       JUMP            L0192
L0200: STORE           G49,G48
       STORE           G45,#02
       JUMP            L0218
L0201: JL              G4a,#01 [TRUE] L0202
       CALL_VS         R0484 (L00,#02) -> -(SP)
       JZ              (SP)+ [FALSE] L0202
       CALL_VS         R0484 (L00,#03) -> -(SP)
       CALL_2S         R0034 ((SP)+) -> L09
       JZ              L09 [TRUE] L0202
       STORE           G45,L09
       JUMP            L0218
L0202: JL              G4a,#02 [TRUE] L0203
       CALL_VS         R0484 (L00,#03) -> -(SP)
       JZ              (SP)+ [FALSE] L0203
       CALL_VS         R0484 (L00,#02) -> -(SP)
       CALL_2S         R0034 ((SP)+) -> L09
       JZ              L09 [TRUE] L0203
       STORE           G45,L09
       JUMP            L0218
L0203: JE              G67,#02 [FALSE] L0204
       CALL_VS         R0484 (L00,#02) -> -(SP)
       JE              (SP)+,G38 [FALSE] L0204
       STORE           G46,#11
       JUMP            L0222
L0204: JL              G33,#01 [TRUE] L0205
       PRINT           "[Line successfully parsed]
"
L0205: STORE           G7e,#00
       JZ              G4f [TRUE] L0206
       PRINT           "("
       CALL_2N         R0039 (G4f)
       PRINT           ")
"
L0206: CALL_VN         R0486 (L00,#00,G52)
       CALL_VN         R0486 (L00,#01,G4a)
       JZ              G53 [TRUE] L0207
       JE              G4a,#02 [FALSE] L0207
       CALL_VS         R0484 (L00,#02) -> L05
       CALL_VS         R0484 (L00,#03) -> -(SP)
       CALL_VN         R0486 (L00,#02,(SP)+)
       CALL_VN         R0486 (L00,#03,L05)
       JE              G4b,#02 [FALSE] L0207
       STORE           L05,G4c
       STORE           G4c,G4d
       STORE           G4d,L05
L0207: JG              G4a,#00 [FALSE] L0208
       CALL_VS         R0484 (L00,#02) -> -(SP)
       JL              (SP)+,#02 [TRUE] L0208
       CALL_VS         R0484 (L00,#02) -> -(SP)
       CALL_2N         R0075 ((SP)+)
L0208: JZ              G44 [TRUE] L0215
       JE              G38,G13 [FALSE] L0215
       STORE           G42,#01
       STORE           L05,#00
L0209: JL              L05,#08 [FALSE] L0214
       CALL_VS         R0484 (L00,L05) -> -(SP)
       JL              L05,#00 [TRUE] L0210
       JL              L05,#10 [TRUE] L0212
L0210: CALL_VN2        R0471 (#1f,L05,#0f,#01,#04)
       JZ              (SP)+ [FALSE] L0211
L0211: JUMP            L0213
L0212: STOREW          #1d02,L05,(SP)+
L0213: INC             L05
       JUMP            L0209
L0214: CALL_VN         R0486 (L00,#00,#0f)
       CALL_VN         R0486 (L00,#01,#01)
       CALL_VN         R0486 (L00,#02,G44)
       CALL_VN         R0285 (#1007,#1a,G44)
L0215: JE              G80,#01 [FALSE] L0216
       STORE           G79,G81
       JUMP            L0256
L0216: RTRUE           
L0217: INC             G48
       JUMP            L0158
L0218: JG              G45,G46 [FALSE] L0219
       STORE           G46,G45
L0219: JE              G45,#12 [TRUE] L0220
       JG              G45,G47 [FALSE] L0220
       STORE           G47,G45
L0220: JE              G67,#02 [FALSE] L0221
       JE              G45,#11 [FALSE] L0221
       JUMP            L0222
L0221: INC             L02
       JUMP            L0090
L0222: STORE           G45,G46
       JE              G38,G13 [TRUE] L0225
       JG              G7d,#00 [FALSE] L0223
       STORE           G7c,G7d
       JUMP            L0028
L0223: STORE           G79,G7c
       CALL_1S         R0059 -> G3d
       JE              G3d,"comma," [FALSE] L0224
       CALL_1S         R0059 -> G3d
       INC             G7c
L0224: CALL_2S         R0063 (G7c) -> G3e
       CALL_VN         R0486 (L00,#00,#1009)
       CALL_VN         R0486 (L00,#01,#02)
       CALL_VN         R0486 (L00,#02,#01)
       STORE           G4c,G3d
       CALL_VN         R0486 (L00,#03,G38)
       STORE           G40,G7c
       SUB             G7a,G40 -> -(SP)
       ADD             (SP)+,#01 -> G41
       RTRUE           
L0225: CALL_2S         R0457 (G45) -> -(SP)
       JZ              (SP)+ [TRUE] L0226
       JUMP            L0007
L0226: STORE           G69,G6b
       STORE           G6a,G6c
       JE              G45,#01 [FALSE] L0227
       CALL_VN         R0285 (#1007,#1b)
       STORE           G7e,#01
L0227: JE              G45,#02 [FALSE] L0237
       CALL_VN         R0285 (#1007,#1c)
       STORE           L0a,#00
L0228: JL              L0a,#20 [FALSE] L0236
       JL              L0a,#00 [TRUE] L0229
       JL              L0a,#20 [TRUE] L0230
L0229: CALL_VN2        R0471 (#1d,L0a,#1f,#01,#06)
       PUSH            #00
       JUMP            L0231
L0230: LOADW           #1d62,L0a -> -(SP)
L0231: JL              L0a,#00 [TRUE] L0232
       JL              L0a,#20 [TRUE] L0234
L0232: CALL_VN2        R0471 (#1f,L0a,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0233
L0233: JUMP            L0235
L0234: STOREW          #1d22,L0a,(SP)+
L0235: INC             L0a
       JUMP            L0228
L0236: STORE           G48,G49
       CALL_2N         R0039 (#00)
       PRINT           ".
"
L0237: JE              G45,#03 [FALSE] L0238
       CALL_VN         R0285 (#1007,#1d)
L0238: JE              G45,#04 [FALSE] L0239
       CALL_VN         R0285 (#1007,#1e)
       STORE           G7e,G7f
L0239: JE              G45,#05 [FALSE] L0240
       CALL_VN         R0285 (#1007,#1f)
L0240: JE              G45,#06 [FALSE] L0241
       CALL_VN         R0285 (#1007,#20)
       STORE           G7e,G7f
L0241: JE              G45,#07 [FALSE] L0242
       CALL_VN         R0285 (#1007,#21)
L0242: JE              G45,#08 [FALSE] L0243
       CALL_VN         R0285 (#1007,#22)
L0243: JE              G45,#09 [FALSE] L0244
       CALL_VN         R0285 (#1007,#23)
L0244: JE              G45,#0a [FALSE] L0245
       CALL_VN         R0285 (#1007,#24)
L0245: JE              G45,#0b [FALSE] L0246
       CALL_VN         R0285 (#1007,#25)
L0246: JE              G45,#0c [FALSE] L0247
       CALL_VN         R0285 (#1007,#26)
L0247: JE              G45,#0d [FALSE] L0248
       CALL_VN         R0285 (#1007,#27)
L0248: JE              G45,#0e [FALSE] L0250
       JE              G6a,#ffff [FALSE] L0249
       CALL_VN         R0285 (#1007,#23)
       JUMP            L0250
L0249: CALL_VN         R0285 (#1007,#28)
L0250: JE              G45,#0f [FALSE] L0251
       CALL_VN         R0285 (#1007,#29)
L0251: JE              G45,#10 [FALSE] L0252
       CALL_VN         R0285 (#1007,#2a,G5c)
L0252: JE              G45,#11 [FALSE] L0254
       JE              G5b,#64 [FALSE] L0253
       CALL_VN         R0285 (#1007,#2b)
       JUMP            L0254
L0253: CALL_VN         R0285 (#1007,#2c)
L0254: JE              G45,#12 [FALSE] L0255
       STORE           G70,#03
       CALL_1S         G6f -> -(SP)
       JE              (SP)+,#ffff [FALSE] L0255
       STORE           G46,G47
       JUMP            L0222
L0255: JUMP            L0007
L0256: JG              G79,G7a [TRUE] RTRUE
       CALL_1S         R0059 -> L05
       JE              L05,"then","then","then" [TRUE] L0257
       JE              L05,"comma," [FALSE] L0267
L0257: JG              G79,G7a [FALSE] L0258
       STORE           G80,#00
       RTRUE           
L0258: CALL_2S         R0061 (G7c) -> L05
       CALL_2S         R0061 (G79) -> L06
L0259: JL              L05,L06 [FALSE] L0260
       CALL_VN         R0485 (L05,#00,#20)
       INC             L05
       JUMP            L0259
L0260: CALL_1S         R0059 -> L05
       JE              L05,"again","g","again" [FALSE] L0266
       SUB             G79,#02 -> -(SP)
       CALL_2S         R0061 ((SP)+) -> -(SP)
       SUB             (SP)+,#1fe2 -> L05
       JG              G79,G7a [FALSE] L0261
       STORE           L06,#77
       JUMP            L0262
L0261: CALL_2S         R0061 (G79) -> -(SP)
       SUB             (SP)+,#1fe2 -> L06
L0262: JL              L05,L06 [FALSE] L0266
       JL              L05,#00 [TRUE] L0263
       JL              L05,#79 [TRUE] L0264
L0263: CALL_VN2        R0471 (#1e,L05,#78,#00,#11)
       JUMP            L0265
L0264: STOREB          #2156,L05,#20
L0265: INC             L05
       JUMP            L0262
L0266: CALL_VN         R0020 (#1fe2,#205b)
       STORE           G80,#01
       RTRUE           
L0267: STORE           G46,#02
       JUMP            L0222

Routine R0025, 2 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> L01
       JZ              L01 [FALSE] L0004
       RET             L00
L0004: JE              L00,G13 [FALSE] L0005
       JE              G00,#15 [FALSE] L0005
       RET             #15
L0005: JG              #05,L01 [TRUE] L0006
       JG              L01,#0082 [TRUE] L0006
       JIN             L01,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L01
L0008: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       JG              #01,L01 [TRUE] L0009
       JG              L01,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L01)
       JUMP            L0011
L0010: TEST_ATTR       L01,#19 [TRUE] L0019
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#16 [TRUE] L0019
L0014: JG              #01,L01 [TRUE] L0015
       JG              L01,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L01)
       JUMP            L0023
L0016: TEST_ATTR       L01,#06 [FALSE] L0023
       JG              #01,L01 [TRUE] L0017
       JG              L01,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#03,L01)
       JUMP            L0023
L0018: TEST_ATTR       L01,#10 [FALSE] L0023
L0019: JG              #05,L01 [TRUE] L0020
       JG              L01,#0082 [TRUE] L0020
       JIN             L01,"Class" [FALSE] L0021
L0020: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L01
L0022: GET_PARENT      Gee -> L01
       JUMP            L0005
L0023: RET             L01

Routine R0026, 0 locals

       STORE           G5e,#00
       STORE           G5f,#00
       STORE           G60,#00
       STORE           G61,#00
       STORE           G64,#00
       STORE           G62,#00
       STORE           G63,#0fff
       STORE           G65,#00
       RTRUE           

Routine R0027, 7 locals

       CALL_1N         R0026
       JG              G79,G7a [FALSE] L0001
       RFALSE          
L0001: STORE           L03,#01
L0002: JZ              L03 [TRUE] L0037
       CALL_1S         R0060 -> L01
       STORE           L03,#00
       STORE           L02,#01
       JUMP            L0004
L0003: ADD             L02,#04 -> L02
L0004: JL              #00,#00 [TRUE] L0005
       JL              #00,#41 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,#00,#40,#03,#15)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #2241,#00 -> -(SP)
L0007: JG              L02,(SP)+ [TRUE] L0029
       JL              L02,#00 [TRUE] L0008
       JL              L02,#41 [TRUE] L0009
L0008: CALL_VN2        R0471 (#1d,L02,#40,#03,#15)
       PUSH            #00
       JUMP            L0010
L0009: LOADW           #2241,L02 -> -(SP)
L0010: JE              L01,(SP)+ [FALSE] L0028
       STORE           L03,#01
       ADD             L02,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0011
       JL              Gef,#41 [TRUE] L0013
L0011: CALL_VN2        R0471 (#1d,Gef,#40,#03,#15)
       JZ              (SP)+ [FALSE] L0012
L0012: JUMP            L0014
L0013: LOADW           #2241,(SP)+ -> L05
L0014: JE              L05,#0101 [TRUE] L0015
       STORE           G5e,#01
L0015: STORE           G64,#01
       ADD             L02,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0016
       JL              Gef,#41 [TRUE] L0018
L0016: CALL_VN2        R0471 (#1d,Gef,#40,#03,#15)
       JZ              (SP)+ [FALSE] L0017
L0017: PUSH            #00
       JUMP            L0019
L0018: LOADW           #2241,(SP)+ -> -(SP)
L0019: AND             G63,(SP)+ -> G63
       JE              L05,#0100 [FALSE] L0026
       ADD             L02,#03 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0020
       JL              Gef,#41 [TRUE] L0022
L0020: CALL_VN2        R0471 (#1d,Gef,#40,#03,#15)
       JZ              (SP)+ [FALSE] L0021
L0021: JUMP            L0023
L0022: LOADW           #2241,(SP)+ -> L04
L0023: STORE           Gef,L04
       JE              Gef,#00 [FALSE] L0024
       OR              G5f,#02 -> G5f
       JUMP            L0026
L0024: JE              Gef,#01 [FALSE] L0025
       OR              G5f,#04 -> G5f
       JUMP            L0026
L0025: CALL_2S         R0072 (L04) -> G62
       JE              G62,#ffff [FALSE] L0026
       STORE           G62,#17
L0026: JE              L05,#0b [FALSE] L0027
       OR              G5f,#10 -> G5f
L0027: JE              L05,#fff5 [FALSE] L0028
       OR              G5f,#20 -> G5f
L0028: JUMP            L0003
L0029: JE              L01,"another","other","other" [FALSE] L0030
       STORE           G5e,#01
       STORE           L03,#01
       OR              G5f,#01 -> G5f
L0030: JE              L01,"all","each","every" [TRUE] L0031
       JE              L01,"everythin","both" [FALSE] L0033
L0031: STORE           G5e,#01
       STORE           L03,#01
       STORE           G60,#64
       JE              G67,#01 [FALSE] L0032
       STORE           G67,#02
L0032: OR              G5f,#08 -> G5f
L0033: JZ              G66 [TRUE] L0035
       JZ              L00 [TRUE] L0035
       SUB             G79,#01 -> -(SP)
       CALL_2S         R0063 ((SP)+) -> L06
       JE              L06,#01 [FALSE] L0034
       STORE           G5e,#01
       STORE           L03,#01
L0034: JG              L06,#01 [FALSE] L0035
       STORE           G61,#01
       STORE           G5e,#01
       STORE           L03,#01
       STORE           G60,L06
       SUB             G79,#01 -> G65
       OR              G5f,#08 -> G5f
L0035: JE              L03,#01 [FALSE] L0036
       CALL_1S         R0060 -> -(SP)
       PULL            Gef
       JE              Gef,"of","of","of" [TRUE] L0036
       JE              Gef,"of" [TRUE] L0036
       DEC             G79
L0036: JUMP            L0002
L0037: DEC             G79
       JG              G60,#00 [FALSE] L0038
       JZ              L00 [FALSE] L0038
       RET             #07
L0038: RFALSE          

Routine R0028, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#02 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       RFALSE          
L0005: TEST_ATTR       L00,#18 [FALSE] RFALSE
       JE              G52,#53,#52,#51 [TRUE] RTRUE
       JE              G52,#5a [TRUE] RTRUE
       RFALSE          

Routine R0029, 2 locals

       JL              L01,#00 [TRUE] L0001
       JL              L01,#20 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1d,L01,#1f,#01,#08)
       PUSH            #00
       JUMP            L0003
L0002: LOADW           #1de2,L01 -> -(SP)
L0003: JE              (SP)+,L00 [FALSE] L0004
       RET             L00
L0004: JL              L01,#00 [TRUE] L0005
       JL              L01,#20 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,L01,#1f,#01,#09)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #1e22,L01 -> -(SP)
L0007: CALL_VS         R0483 ((SP)+,#00) -> -(SP)
       AND             (SP)+,#20 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       RET             #ffff
L0008: JL              L01,#00 [TRUE] L0009
       JL              L01,#20 [TRUE] L0010
L0009: CALL_VN2        R0471 (#1d,L01,#1f,#01,#08)
       PUSH            #00
       JUMP            L0011
L0010: LOADW           #1de2,L01 -> -(SP)
L0011: JE              (SP)+,L00 [FALSE] L0012
       RET             L00
L0012: INC             L01
       JL              L01,#00 [TRUE] L0013
       JL              L01,#20 [TRUE] L0014
L0013: CALL_VN2        R0471 (#1d,L01,#1f,#01,#09)
       PUSH            #00
       JUMP            L0015
L0014: LOADW           #1e22,L01 -> -(SP)
L0015: JE              (SP)+,#0f [TRUE] L0019
       JL              L01,#00 [TRUE] L0016
       JL              L01,#20 [TRUE] L0017
L0016: CALL_VN2        R0471 (#1d,L01,#1f,#01,#09)
       PUSH            #00
       JUMP            L0018
L0017: LOADW           #1e22,L01 -> -(SP)
L0018: CALL_VS         R0483 ((SP)+,#00) -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
L0019: RET             #ffff

Routine R0030, 5 locals

       STORE           L03,G59
       STORE           G59,#00
       CALL_VS         R0031 (L00,L01,L02) -> L04
       JE              L04,#2710 [FALSE] L0001
       CALL_VN         R0020 (#1fe2,#205b)
L0001: STORE           G59,L03
       RET             L04

Routine R0031, 14 locals

       STORE           G57,#00
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0025
       STORE           Gef,L01
       JE              Gef,#07 [FALSE] L0004
       CALL_2S         R0063 (G79) -> L04
       CALL_1S         R0059 -> G3d
       JE              L04,#fc18 [TRUE] L0001
       JL              G33,#03 [TRUE] L0001
       PRINT           "  [Read special as the number "
       PRINT_NUM       L04
       PRINT           "]
"
L0001: JE              L04,#fc18 [FALSE] L0003
       JL              G33,#03 [TRUE] L0002
       PRINT_PADDR     S108
       PRINT_NUM       G79
       PRINT           "]
"
L0002: STORE           L04,G3d
L0003: STORE           G3f,L04
       RTRUE           
L0004: JE              Gef,#08 [FALSE] L0007
       PUSH            G79
       INC             G79
       CALL_2S         R0063 ((SP)+) -> L04
       JE              L04,#fc18 [FALSE] L0005
       STORE           G45,#03
       RET             #ffff
L0005: JL              G33,#03 [TRUE] L0006
       PRINT           "  [Read number as "
       PRINT_NUM       L04
       PRINT           "]
"
L0006: STORE           G3f,L04
       RTRUE           
L0007: JE              Gef,#06 [FALSE] L0010
       JE              G52,#52,#53,#5a [TRUE] L0008
       JE              G52,#51 [FALSE] L0009
L0008: STORE           G6d,#01
L0009: JUMP            L0024
L0010: JE              Gef,#09 [FALSE] L0024
       STORE           G40,G79
       ADD             L02,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0011
       JL              Gef,#20 [TRUE] L0013
L0011: CALL_VN2        R0471 (#1d,Gef,#1f,#01,#07)
       JZ              (SP)+ [FALSE] L0012
L0012: PUSH            #00
       JUMP            L0014
L0013: LOADW           #1da2,(SP)+ -> -(SP)
L0014: JE              (SP)+,#02 [TRUE] L0019
       ADD             L02,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0015
       JL              Gef,#20 [TRUE] L0017
L0015: CALL_VN2        R0471 (#1d,Gef,#1f,#01,#09)
       JZ              (SP)+ [FALSE] L0016
L0016: PUSH            #00
       JUMP            L0018
L0017: LOADW           #1e22,(SP)+ -> -(SP)
L0018: JE              (SP)+,#0f [TRUE] L0019
       CALL_2N         R0133 (#0d)
L0019: CALL_1S         R0060 -> L05
       JE              L05,#ffff [TRUE] L0020
       ADD             L02,#01 -> -(SP)
       CALL_VS         R0029 (L05,(SP)+) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0019
L0020: DEC             G79
       SUB             G79,G40 -> G41
       JZ              G41 [FALSE] L0021
       RET             #ffff
L0021: JE              G52,#53,#52,#51 [FALSE] L0023
       STORE           L05,G79
       STORE           G79,G40
       CALL_1S         R0059 -> G3f
       JE              G3f,"the" [FALSE] L0022
       JG              G41,#01 [FALSE] L0022
       CALL_1S         R0059 -> G3f
L0022: STORE           G79,L05
       RTRUE           
L0023: RFALSE          
L0024: JUMP            L0051
L0025: JE              Gef,#02 [FALSE] L0043
       CALL_VS         R0483 (L03,#00) -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0026
       RFALSE          
L0026: JG              G79,G7a [FALSE] L0036
       JZ              G4f [FALSE] L0030
       JL              G4a,G4e [FALSE] L0030
       STORE           G4f,G48
       STORE           G50,L03
       CALL_2S         R0066 (L01) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       JL              G48,#00 [TRUE] L0027
       JL              G48,#20 [TRUE] L0029
L0027: CALL_VN2        R0471 (#1f,G48,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0028
L0028: JUMP            L0030
L0029: STOREW          #1d22,G48,(SP)+
L0030: JZ              G4f [FALSE] L0031
       RET             #ffff
L0031: CALL_2S         R0066 (L01) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       JL              G48,#00 [TRUE] L0032
       JL              G48,#20 [TRUE] L0034
L0032: CALL_VN2        R0471 (#1f,G48,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0033
L0033: JUMP            L0035
L0034: STOREW          #1d22,G48,(SP)+
L0035: RFALSE          
L0036: CALL_1S         R0059 -> L05
       CALL_2S         R0066 (L05) -> -(SP)
       ADD             #2710,(SP)+ -> -(SP)
       JL              G48,#00 [TRUE] L0037
       JL              G48,#20 [TRUE] L0039
L0037: CALL_VN2        R0471 (#1f,G48,#1f,#01,#05)
       JZ              (SP)+ [FALSE] L0038
L0038: JUMP            L0040
L0039: STOREW          #1d22,G48,(SP)+
L0040: JE              L05,L01 [FALSE] L0041
       RFALSE          
L0041: CALL_VS         R0029 (L05,L02) -> -(SP)
       JE              (SP)+,#ffff [TRUE] L0042
       RFALSE          
L0042: RET             #ffff
L0043: JE              Gef,#06 [FALSE] L0045
       CALL_1S         L01 -> L04
       JL              G33,#03 [TRUE] L0044
       PRINT_PADDR     S109
       PRINT_NUM       L04
       PRINT           "]
"
L0044: RET             L04
L0045: JE              Gef,#05 [FALSE] L0049
       STORE           G6e,L01
       STORE           G70,#01
       CALL_1S         G6e -> L04
       JL              G33,#03 [TRUE] L0046
       PRINT_PADDR     S110
       PRINT_NUM       L04
       PRINT           "]
"
L0046: JE              L04,#01 [FALSE] L0047
       STORE           L01,#02
       JUMP            L0048
L0047: STORE           L01,#00
L0048: JUMP            L0051
L0049: JE              Gef,#04 [FALSE] L0050
       ADD             #01,L01 -> G57
       STORE           L01,#00
       JUMP            L0051
L0050: JE              Gef,#03 [FALSE] L0051
       STORE           G57,L01
       STORE           L01,#00
L0051: STORE           L03,L01
       STORE           L0d,#00
       JE              L03,#02,#03,#04 [TRUE] L0052
       JE              L03,#05 [FALSE] L0053
L0052: STORE           L0d,#01
L0053: STORE           L0c,#00
       STORE           L09,#01
       STORE           G51,#00
L0054: JL              G33,#03 [TRUE] L0055
       PRINT           "  [Object list from word "
       PRINT_NUM       G79
       PRINT           "]
"
L0055: CALL_1S         R0059 -> L05
       DEC             G79
       STORE           G69,#ffff
       STORE           G6a,#ffff
       CALL_2S         R0072 (L05) -> L04
       JZ              L04 [TRUE] L0066
       STORE           G69,L05
       STORE           G6a,L04
       JE              L04,#ffff [FALSE] L0066
       STORE           L04,#01
       JUMP            L0057
L0056: ADD             L04,#04 -> L04
L0057: JL              #00,#00 [TRUE] L0058
       JL              #00,#41 [TRUE] L0059
L0058: CALL_VN2        R0471 (#1d,#00,#40,#03,#15)
       PUSH            #00
       JUMP            L0060
L0059: LOADW           #2241,#00 -> -(SP)
L0060: JG              L04,(SP)+ [TRUE] L0065
       JL              L04,#00 [TRUE] L0061
       JL              L04,#41 [TRUE] L0062
L0061: CALL_VN2        R0471 (#1d,L04,#40,#03,#15)
       PUSH            #00
       JUMP            L0063
L0062: LOADW           #2241,L04 -> -(SP)
L0063: JE              L05,(SP)+ [FALSE] L0064
       JUMP            L0066
L0064: JUMP            L0056
L0065: STORE           G6b,G69
       STORE           G6c,G6a
       STORE           G45,#09
       RET             #ffff
L0066: JE              L05,"me","myself","self" [FALSE] L0067
       STORE           G69,L05
       STORE           G6a,G13
L0067: STORE           G66,#01
       STORE           L0b,G79
L0068: CALL_2S         R0027 (L0d) -> L04
       JZ              L04 [TRUE] L0069
       STORE           G45,L04
       RET             #ffff
L0069: STORE           G7e,G79
       JE              L03,#01 [TRUE] L0115
       JL              #00,#00 [TRUE] L0070
       JL              #00,#40 [TRUE] L0071
L0070: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0072
L0071: LOADW           #1c82,#00 -> L06
L0072: JL              G33,#03 [TRUE] L0073
       PRINT_PADDR     S111
L0073: CALL_VS         R0032 (G39,G38,L03) -> L04
       JE              L04,#2710 [FALSE] L0074
       RET             L04
L0074: JZ              L04 [FALSE] L0076
       JZ              G64 [TRUE] L0075
       CALL_1N         R0026
       STORE           G79,L0b
       JUMP            L0069
L0075: CALL_1S         R0040 -> G45
       JUMP            L0139
L0076: JL              G33,#03 [TRUE] L0089
       JG              L04,#01 [FALSE] L0077
       PRINT           "  [ND returned "
       CALL_2N         R0117 (L04)
       PRINT           "]
"
       JUMP            L0089
L0077: PRINT_PADDR     S112
       JL              #00,#00 [TRUE] L0078
       JL              #00,#40 [TRUE] L0079
L0078: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0080
L0079: LOADW           #1c82,#00 -> L08
L0080: ADD             L06,#01 -> L07
L0081: JG              L07,L08 [TRUE] L0088
       PRINT           "  Entry "
       PRINT_NUM       L07
       PRINT           ": "
       JL              L07,#00 [TRUE] L0082
       JL              L07,#40 [TRUE] L0083
L0082: CALL_VN2        R0471 (#1d,L07,#3f,#01,#03)
       PUSH            #00
       JUMP            L0084
L0083: LOADW           #1c82,L07 -> -(SP)
L0084: CALL_2N         R0118 ((SP)+)
       PRINT           " ("
       JL              L07,#00 [TRUE] L0085
       JL              L07,#40 [TRUE] L0086
L0085: CALL_VN2        R0471 (#1d,L07,#3f,#01,#03)
       PUSH            #00
       JUMP            L0087
L0086: LOADW           #1c82,L07 -> -(SP)
L0087: PRINT_NUM       (SP)+
       PRINT           ")
"
       INC             L07
       JUMP            L0081
L0088: PRINT           "  List now has size "
       PRINT_NUM       L08
       PRINT           "]
"
L0089: JE              L04,#01 [FALSE] L0108
       JZ              L0c [FALSE] L0090
       STORE           L0c,#01
       JUMP            L0107
L0090: JL              #00,#00 [TRUE] L0091
       JL              #00,#40 [TRUE] L0092
L0091: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0093
L0092: LOADW           #1c82,#00 -> L08
L0093: JL              #00,#00 [TRUE] L0094
       JL              #00,#40 [TRUE] L0095
L0094: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0096
L0095: STOREW          #1c82,#00,L06
L0096: ADD             L06,#01 -> L07
L0097: JG              L07,L08 [TRUE] L0106
       JZ              L09 [TRUE] L0101
       JL              L07,#00 [TRUE] L0098
       JL              L07,#40 [TRUE] L0099
L0098: CALL_VN2        R0471 (#1d,L07,#3f,#01,#03)
       PUSH            #00
       JUMP            L0100
L0099: LOADW           #1c82,L07 -> -(SP)
L0100: CALL_2N         R0041 ((SP)+)
       JUMP            L0105
L0101: JL              L07,#00 [TRUE] L0102
       JL              L07,#40 [TRUE] L0103
L0102: CALL_VN2        R0471 (#1d,L07,#3f,#01,#03)
       PUSH            #00
       JUMP            L0104
L0103: LOADW           #1c82,L07 -> -(SP)
L0104: CALL_2N         R0042 ((SP)+)
L0105: INC             L07
       JUMP            L0097
L0106: JL              G33,#03 [TRUE] L0107
       PRINT           "  [Merging "
       SUB             L08,L06 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " new objects to the "
       PRINT_NUM       L06
       PRINT           " old ones]
"
L0107: JUMP            L0114
L0108: JZ              G76 [FALSE] L0109
       JZ              G64 [TRUE] L0109
       CALL_1N         R0026
       STORE           G79,L0b
       JUMP            L0069
L0109: JE              L03,#06 [FALSE] L0110
       CALL_2S         R0028 (L04) -> -(SP)
       JZ              (SP)+ [FALSE] L0110
       STORE           G45,#0b
       JUMP            L0139
L0110: JZ              L0c [FALSE] L0111
       STORE           L0a,L04
       JUMP            L0114
L0111: JZ              L09 [TRUE] L0112
       CALL_2N         R0041 (L04)
       JUMP            L0113
L0112: CALL_2N         R0042 (L04)
L0113: JL              G33,#03 [TRUE] L0114
       PRINT           "  [Combining "
       CALL_2N         R0117 (L04)
       PRINT           " with list]
"
L0114: JUMP            L0124
L0115: CALL_VS         R0032 (G38,G39,L03) -> L04
       JE              L04,#2710 [FALSE] L0116
       RET             #2710
L0116: JZ              L04 [FALSE] L0118
       JZ              G64 [TRUE] L0117
       CALL_1N         R0026
       STORE           G79,L0b
       JUMP            L0069
L0117: CALL_1S         R0040 -> G45
       RET             #ffff
L0118: JG              #05,L04 [TRUE] L0119
       JG              L04,#0082 [TRUE] L0119
       JIN             L04,"Class" [FALSE] L0120
L0119: CALL_VN         R0471 (#04,L04)
       STORE           Gee,#02
       JUMP            L0121
L0120: STORE           Gee,L04
L0121: GET_PARENT      Gee -> L05
       JE              L05,G38 [TRUE] L0123
       JE              G42,#01 [FALSE] L0122
       STORE           G7f,G7e
       STORE           G45,#06
       JUMP            L0139
L0122: STORE           G44,L04
       JL              G33,#03 [TRUE] L0123
       PRINT           "  [Allowing object "
       CALL_2N         R0117 (L04)
       PRINT           " for now]
"
L0123: STORE           L0a,L04
L0124: ADD             G7e,G76 -> G79
       CALL_1S         R0059 -> L05
       JE              L05,"and","and","and" [TRUE] L0125
       JE              L05,"but","except","but" [TRUE] L0125
       JE              L05,"comma," [FALSE] L0136
L0125: JL              G33,#03 [TRUE] L0126
       PRINT           "  [Read connective '"
       CALL_2N         R0488 (L05)
       PRINT           "']
"
L0126: JZ              L0d [FALSE] L0127
       STORE           G45,#07
       JUMP            L0139
L0127: JE              L05,"but","except","but" [FALSE] L0128
       SUB             #01,L09 -> L09
L0128: JZ              L0c [FALSE] L0135
       JL              #00,#00 [TRUE] L0129
       JL              #00,#40 [TRUE] L0130
L0129: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0131
L0130: STOREW          #1c82,#00,#01
L0131: JL              #01,#00 [TRUE] L0132
       JL              #01,#40 [TRUE] L0133
L0132: CALL_VN2        R0471 (#1f,#01,#3f,#01,#03)
       JUMP            L0134
L0133: STOREW          #1c82,#01,L0a
L0134: STORE           L0c,#01
       JL              G33,#03 [TRUE] L0135
       PRINT           "  [Making new list from "
       CALL_2N         R0117 (L0a)
       PRINT           "]
"
L0135: STORE           G51,#01
       STORE           G4f,#00
       JUMP            L0054
L0136: DEC             G79
       JZ              L0c [TRUE] L0137
       STORE           L0a,#02
       STORE           G5d,L03
       JUMP            L0138
L0137: JE              G5e,#01 [FALSE] L0138
       AND             G5f,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0138
       JL              G60,#64 [FALSE] L0138
       JG              G60,#01 [FALSE] L0138
       STORE           G5c,#01
       STORE           G5b,G60
       STORE           G45,#10
       JUMP            L0139
L0138: RET             L0a
L0139: JZ              G66 [TRUE] L0140
       JE              G61,#01 [FALSE] L0140
       STORE           G66,#00
       STORE           G79,L0b
       JUMP            L0068
L0140: RET             #ffff

Routine R0032, 10 locals

       JL              G33,#04 [TRUE] L0011
       PRINT           "   [NounDomain called at word "
       PRINT_NUM       G79
       PRINT           "
"
       PRINT           "   "
       JZ              G5e [TRUE] L0010
       PRINT           "seeking indefinite object: "
       AND             G5f,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           "other "
L0001: AND             G5f,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       PRINT           "my "
L0002: AND             G5f,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT           "that "
L0003: AND             G5f,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT           "plural "
L0004: AND             G5f,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT           "lit "
L0005: AND             G5f,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       PRINT           "unlit "
L0006: JZ              G62 [TRUE] L0007
       PRINT           "owner:"
       CALL_2N         R0119 (G62)
L0007: NEW_LINE        
       PRINT           "   number wanted: "
       JE              G60,#64 [FALSE] L0008
       PRINT           "all"
       JUMP            L0009
L0008: PRINT_NUM       G60
L0009: NEW_LINE        
       PRINT           "   most likely GNAs of names: "
       PRINT_NUM       G63
       PRINT           "
"
       JUMP            L0011
L0010: PRINT           "seeking definite object
"
L0011: STORE           G76,#00
       STORE           G74,#00
       STORE           G77,G79
       STORE           G73,#00
       CALL_VN         R0046 (L00,L01,L02)
       JL              G33,#04 [TRUE] L0012
       PRINT           "   [ND made "
       PRINT_NUM       G74
       PRINT           " matches]
"
L0012: ADD             G77,G76 -> G79
       JZ              G74 [FALSE] L0013
       INC             G79
       RFALSE          
L0013: JG              G77,G7a [TRUE] L0018
       JE              G74,#01 [FALSE] L0017
       JL              #00,#00 [TRUE] L0014
       JL              #00,#40 [TRUE] L0015
L0014: CALL_VN2        R0471 (#1d,#00,#3f,#01,#0a)
       JUMP            L0016
L0015: LOADW           #1e62,#00 -> L04
L0016: RET             L04
L0017: JG              G79,G7a [TRUE] L0018
       CALL_1S         R0059 -> L04
       DEC             G79
       JE              L04,"and","and","and" [TRUE] L0018
       JE              L04,"comma,","then","then" [TRUE] L0018
       JE              L04,"then","but","except" [TRUE] L0018
       JE              L04,"but" [TRUE] L0018
       JE              G59,#0f [TRUE] RFALSE
L0018: STORE           G75,#00
       JE              G74,#01 [FALSE] L0021
       JL              #00,#00 [TRUE] L0019
       JL              #00,#40 [TRUE] L0020
L0019: CALL_VN2        R0471 (#1d,#00,#3f,#01,#0a)
       JUMP            L0021
L0020: LOADW           #1e62,#00 -> L04
L0021: JG              G74,#01 [FALSE] L0022
       CALL_2S         R0033 (L02) -> L04
       JE              L04,#ffff [TRUE] RFALSE
       JE              L04,#01 [TRUE] RTRUE
L0022: JZ              L04 [TRUE] L0028
       JZ              G51 [TRUE] L0023
       RET             L04
L0023: JZ              G4f [FALSE] L0024
       STORE           G4f,G48
L0024: JL              G48,#00 [TRUE] L0025
       JL              G48,#20 [TRUE] L0026
L0025: CALL_VN2        R0471 (#1f,G48,#1f,#01,#05)
       JUMP            L0027
L0026: STOREW          #1d22,G48,L04
L0027: RET             L04
L0028: JG              G77,G7a [FALSE] L0029
       JUMP            L0125
L0029: JE              L02,#06 [FALSE] L0030
       CALL_VN         R0285 (#1007,#2d)
       JUMP            L0031
L0030: CALL_VN         R0285 (#1007,#2e)
L0031: STORE           L05,G75
       STORE           L09,#00
       STORE           L04,#01
L0032: JG              L04,G75 [TRUE] L0051
L0033: JL              L09,#00 [TRUE] L0034
       JL              L09,#40 [TRUE] L0035
L0034: CALL_VN2        R0471 (#1d,L09,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0036
L0035: LOADW           #1ee2,L09 -> -(SP)
L0036: JE              (SP)+,L04 [TRUE] L0040
       SUB             #00,L04 -> -(SP)
       JL              L09,#00 [TRUE] L0037
       JL              L09,#40 [TRUE] L0038
L0037: CALL_VN2        R0471 (#1d,L09,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0039
L0038: LOADW           #1ee2,L09 -> -(SP)
L0039: JE              (SP)+,(SP)+ [TRUE] L0040
       INC             L09
       JUMP            L0033
L0040: JL              L09,#00 [TRUE] L0041
       JL              L09,#40 [TRUE] L0042
L0041: CALL_VN2        R0471 (#1d,L09,#3f,#01,#0a)
       JUMP            L0043
L0042: LOADW           #1e62,L09 -> L06
L0043: JL              L09,#00 [TRUE] L0044
       JL              L09,#40 [TRUE] L0045
L0044: CALL_VN2        R0471 (#1d,L09,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0046
L0045: LOADW           #1ee2,L09 -> -(SP)
L0046: JG              (SP)+,#00 [FALSE] L0047
       CALL_2N         R0117 (L06)
       JUMP            L0048
L0047: CALL_2N         R0116 (L06)
L0048: SUB             L05,#01 -> -(SP)
       JL              L04,(SP)+ [FALSE] L0049
       PRINT           ", "
L0049: SUB             L05,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0050
       CALL_2N         R0489 (S034)
L0050: INC             L04
       JUMP            L0032
L0051: PRINT           "?
"
L0052: STORE           L04,#02
L0053: JL              L04,#78 [FALSE] L0057
       JL              L04,#00 [TRUE] L0054
       JL              L04,#79 [TRUE] L0055
L0054: CALL_VN2        R0471 (#1e,L04,#78,#00,#0f)
       JUMP            L0056
L0055: STOREB          #209c,L04,#20
L0056: INC             L04
       JUMP            L0053
L0057: CALL_VS         R0023 (#209c,#2115) -> L08
       JL              #01,#00 [TRUE] L0058
       JL              #01,#20 [TRUE] L0059
L0058: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       JUMP            L0060
L0059: LOADW           #2115,#01 -> L03
L0060: JE              L03,"all","each","every" [TRUE] L0061
       JE              L03,"everythin","both" [FALSE] L0080
L0061: JE              L02,#02,#03,#04 [TRUE] L0062
       JE              L02,#05 [FALSE] L0079
L0062: JL              #00,#00 [TRUE] L0063
       JL              #00,#40 [TRUE] L0064
L0063: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0065
L0064: LOADW           #1c82,#00 -> L07
L0065: STORE           L04,#00
L0066: JL              L04,G74 [FALSE] L0074
       ADD             L07,L04 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0074
       JL              L04,#00 [TRUE] L0067
       JL              L04,#40 [TRUE] L0068
L0067: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       JUMP            L0069
L0068: LOADW           #1e62,L04 -> L06
L0069: ADD             L04,#01 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0070
       JL              Gef,#40 [TRUE] L0072
L0070: CALL_VN2        R0471 (#1f,Gef,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0071
L0071: JUMP            L0073
L0072: STOREW          #1c82,(SP)+,L06
L0073: INC             L04
       JUMP            L0066
L0074: ADD             L04,L07 -> -(SP)
       JL              #00,#00 [TRUE] L0075
       JL              #00,#40 [TRUE] L0077
L0075: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0076
L0076: JUMP            L0078
L0077: STOREW          #1c82,#00,(SP)+
L0078: RTRUE           
L0079: CALL_VN         R0285 (#1007,#2f)
       JUMP            L0052
L0080: JZ              L03 [TRUE] L0081
       CALL_VS         R0483 (L03,#06) -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0081
       JE              L03,"long","short","normal" [TRUE] L0081
       JE              L03,"brief","full","verbose" [TRUE] L0081
       CALL_VN         R0068 (#1fe2,#209c)
       RET             #2710
L0081: CALL_2S         R0061 (G77) -> -(SP)
       SUB             (SP)+,#1fe2 -> L06
       JL              #01,#00 [TRUE] L0082
       JL              #01,#79 [TRUE] L0083
L0082: CALL_VN2        R0471 (#1c,#01,#78,#00,#0f)
       PUSH            #00
       JUMP            L0084
L0083: LOADB           #209c,#01 -> -(SP)
L0084: ADD             (SP)+,#01 -> L07
       JL              #00,#00 [TRUE] L0085
       JL              #00,#79 [TRUE] L0086
L0085: CALL_VN2        R0471 (#1c,#00,#78,#00,#0d)
       PUSH            #00
       JUMP            L0087
L0086: LOADB           #1fe2,#00 -> -(SP)
L0087: ADD             #1fe2,(SP)+ -> -(SP)
       SUB             (SP)+,#01 -> L05
L0088: ADD             #1fe2,L06 -> -(SP)
       ADD             (SP)+,L07 -> -(SP)
       JL              L05,(SP)+ [TRUE] L0089
       SUB             L05,L07 -> -(SP)
       CALL_VS         R0483 (#00,(SP)+) -> -(SP)
       CALL_VN         R0485 (L05,#00,(SP)+)
       DEC             L05
       JUMP            L0088
L0089: STORE           L04,#00
L0090: JL              L04,L07 [FALSE] L0100
       ADD             #02,L04 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0091
       JL              Gef,#79 [TRUE] L0093
L0091: CALL_VN2        R0471 (#1c,Gef,#78,#00,#0f)
       JZ              (SP)+ [FALSE] L0092
L0092: PUSH            #00
       JUMP            L0094
L0093: LOADB           #209c,(SP)+ -> -(SP)
L0094: ADD             L06,L04 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0095
       JL              Gef,#79 [TRUE] L0098
L0095: CALL_VN2        R0471 (#1e,Gef,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0096
L0096: JZ              (SP)+ [FALSE] L0097
L0097: JUMP            L0099
L0098: STOREB          #1fe2,(SP)+,(SP)+
L0099: INC             L04
       JUMP            L0090
L0100: ADD             L06,L07 -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0101
       JL              Gef,#79 [TRUE] L0103
L0101: CALL_VN2        R0471 (#1e,Gef,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0102
L0102: JUMP            L0104
L0103: STOREB          #1fe2,(SP)+,#20
L0104: JL              #01,#00 [TRUE] L0105
       JL              #01,#79 [TRUE] L0106
L0105: CALL_VN2        R0471 (#1c,#01,#78,#00,#0d)
       PUSH            #00
       JUMP            L0107
L0106: LOADB           #1fe2,#01 -> -(SP)
L0107: ADD             (SP)+,L07 -> -(SP)
       JL              #01,#00 [TRUE] L0108
       JL              #01,#79 [TRUE] L0110
L0108: CALL_VN2        R0471 (#1e,#01,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0109
L0109: JUMP            L0111
L0110: STOREB          #1fe2,#01,(SP)+
L0111: JL              #00,#00 [TRUE] L0112
       JL              #00,#79 [TRUE] L0113
L0112: CALL_VN2        R0471 (#1c,#00,#78,#00,#0d)
       PUSH            #00
       JUMP            L0114
L0113: LOADB           #1fe2,#00 -> -(SP)
L0114: SUB             (SP)+,#01 -> -(SP)
       JL              #01,#00 [TRUE] L0115
       JL              #01,#79 [TRUE] L0116
L0115: CALL_VN2        R0471 (#1c,#01,#78,#00,#0d)
       PUSH            #00
       JUMP            L0117
L0116: LOADB           #1fe2,#01 -> -(SP)
L0117: JL              (SP)+,(SP)+ [TRUE] L0124
       JL              #00,#00 [TRUE] L0118
       JL              #00,#79 [TRUE] L0119
L0118: CALL_VN2        R0471 (#1c,#00,#78,#00,#0d)
       PUSH            #00
       JUMP            L0120
L0119: LOADB           #1fe2,#00 -> -(SP)
L0120: JL              #01,#00 [TRUE] L0121
       JL              #01,#79 [TRUE] L0123
L0121: CALL_VN2        R0471 (#1e,#01,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0122
L0122: JUMP            L0124
L0123: STOREB          #1fe2,#01,(SP)+
L0124: RET             #2710
L0125: JE              L02,#06 [FALSE] L0126
       CALL_VN         R0285 (#1007,#30)
       JUMP            L0127
L0126: CALL_VN         R0285 (#1007,#31)
L0127: STORE           L04,#02
L0128: JL              L04,#78 [FALSE] L0132
       JL              L04,#00 [TRUE] L0129
       JL              L04,#79 [TRUE] L0130
L0129: CALL_VN2        R0471 (#1e,L04,#78,#00,#0f)
       JUMP            L0131
L0130: STOREB          #209c,L04,#20
L0131: INC             L04
       JUMP            L0128
L0132: CALL_VS         R0023 (#209c,#2115) -> L08
       JL              #01,#00 [TRUE] L0133
       JL              #01,#20 [TRUE] L0134
L0133: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       JUMP            L0135
L0134: LOADW           #2115,#01 -> L03
L0135: JZ              L03 [TRUE] L0136
       CALL_VS         R0483 (L03,#06) -> L05
       AND             L05,#01 -> -(SP)
       JE              #00,(SP)+ [TRUE] L0136
       CALL_VN         R0068 (#1fe2,#209c)
       RET             #2710
L0136: JZ              G4f [TRUE] L0222
       STORE           L05,G4f
L0137: JL              L05,G48 [FALSE] L0222
       JL              L05,#00 [TRUE] L0138
       JL              L05,#20 [TRUE] L0139
L0138: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0140
L0139: LOADW           #1d22,L05 -> -(SP)
L0140: JE              (SP)+,#ffff [FALSE] L0141
       JUMP            L0221
L0141: JL              #01,#00 [TRUE] L0142
       JL              #01,#79 [TRUE] L0143
L0142: CALL_VN2        R0471 (#1c,#01,#78,#00,#0d)
       PUSH            #00
       JUMP            L0144
L0143: LOADB           #1fe2,#01 -> -(SP)
L0144: ADD             #02,(SP)+ -> L04
       STORE           Gef,#1fe2
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
       PUSH            L04
       INC             L04
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0145
       JL              Gef,#79 [TRUE] L0147
L0145: CALL_VN2        R0471 (#1e,Gef,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0146
L0146: JUMP            L0148
L0147: STOREB          #1fe2,(SP)+,#20
L0148: JL              G33,#05 [TRUE] L0152
       PRINT_PADDR     S113
       JL              L05,#00 [TRUE] L0149
       JL              L05,#20 [TRUE] L0150
L0149: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0151
L0150: LOADW           #1d22,L05 -> -(SP)
L0151: PRINT_NUM       (SP)+
       PRINT           "]
"
L0152: JL              #01,#00 [TRUE] L0153
       JL              #01,#20 [TRUE] L0154
L0153: CALL_VN2        R0471 (#1f,#01,#40,#08,#10)
       JUMP            L0155
L0154: STOREW          #2115,#01,#00
L0155: JL              L05,#00 [TRUE] L0156
       JL              L05,#20 [TRUE] L0157
L0156: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0158
L0157: LOADW           #1d22,L05 -> -(SP)
L0158: JL              (SP)+,#02 [TRUE] L0190
       JL              L05,#00 [TRUE] L0159
       JL              L05,#20 [TRUE] L0160
L0159: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0161
L0160: LOADW           #1d22,L05 -> -(SP)
L0161: JL              (SP)+,#2710 [FALSE] L0190
       JL              L05,#00 [TRUE] L0162
       JL              L05,#20 [TRUE] L0163
L0162: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0164
L0163: LOADW           #1d22,L05 -> -(SP)
L0164: CALL_2N         R0075 ((SP)+)
       STORE           L06,#01
       JUMP            L0166
L0165: ADD             L06,#03 -> L06
L0166: JL              #00,#00 [TRUE] L0167
       JL              #00,#0d [TRUE] L0168
L0167: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0169
L0168: LOADW           #2227,#00 -> -(SP)
L0169: JG              L06,(SP)+ [TRUE] L0189
       ADD             L06,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0170
       JL              Gef,#0d [TRUE] L0172
L0170: CALL_VN2        R0471 (#1d,Gef,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0171
L0171: PUSH            #00
       JUMP            L0173
L0172: LOADW           #2227,(SP)+ -> -(SP)
L0173: JL              L05,#00 [TRUE] L0174
       JL              L05,#20 [TRUE] L0175
L0174: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0176
L0175: LOADW           #1d22,L05 -> -(SP)
L0176: JE              (SP)+,(SP)+ [FALSE] L0188
       JL              L06,#00 [TRUE] L0177
       JL              L06,#0d [TRUE] L0178
L0177: CALL_VN2        R0471 (#1d,L06,#0c,#03,#14)
       PUSH            #00
       JUMP            L0179
L0178: LOADW           #2227,L06 -> -(SP)
L0179: JL              #01,#00 [TRUE] L0180
       JL              #01,#20 [TRUE] L0182
L0180: CALL_VN2        R0471 (#1f,#01,#40,#08,#10)
       JZ              (SP)+ [FALSE] L0181
L0181: JUMP            L0183
L0182: STOREW          #2115,#01,(SP)+
L0183: JL              G33,#05 [TRUE] L0187
       PRINT           "[Using pronoun '"
       JL              #01,#00 [TRUE] L0184
       JL              #01,#20 [TRUE] L0185
L0184: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       PUSH            #00
       JUMP            L0186
L0185: LOADW           #2115,#01 -> -(SP)
L0186: CALL_2N         R0488 ((SP)+)
       PRINT           "']
"
L0187: JUMP            L0189
L0188: JUMP            L0165
L0189: JUMP            L0201
L0190: JL              L05,#00 [TRUE] L0191
       JL              L05,#20 [TRUE] L0192
L0191: CALL_VN2        R0471 (#1d,L05,#1f,#01,#05)
       PUSH            #00
       JUMP            L0193
L0192: LOADW           #1d22,L05 -> -(SP)
L0193: SUB             (SP)+,#2710 -> -(SP)
       CALL_2S         R0067 ((SP)+) -> -(SP)
       JL              #01,#00 [TRUE] L0194
       JL              #01,#20 [TRUE] L0196
L0194: CALL_VN2        R0471 (#1f,#01,#40,#08,#10)
       JZ              (SP)+ [FALSE] L0195
L0195: JUMP            L0197
L0196: STOREW          #2115,#01,(SP)+
L0197: JL              G33,#05 [TRUE] L0201
       PRINT           "[Using preposition '"
       JL              #01,#00 [TRUE] L0198
       JL              #01,#20 [TRUE] L0199
L0198: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       PUSH            #00
       JUMP            L0200
L0199: LOADW           #2115,#01 -> -(SP)
L0200: CALL_2N         R0488 ((SP)+)
       PRINT           "']
"
L0201: JL              #01,#00 [TRUE] L0202
       JL              #01,#20 [TRUE] L0203
L0202: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       PUSH            #00
       JUMP            L0204
L0203: LOADW           #2115,#01 -> -(SP)
L0204: JZ              (SP)+ [TRUE] L0221
       ADD             #1fe2,L04 -> L06
       OUTPUT_STREAM   REDIRECT_ENABLE,L06
       JL              #01,#00 [TRUE] L0205
       JL              #01,#20 [TRUE] L0206
L0205: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       PUSH            #00
       JUMP            L0207
L0206: LOADW           #2115,#01 -> -(SP)
L0207: CALL_2N         R0488 ((SP)+)
       OUTPUT_STREAM   #fffd
       CALL_VS         R0484 (L06,#00) -> L06
       STORE           L07,L04
L0208: ADD             L04,L06 -> -(SP)
       JL              L07,(SP)+ [FALSE] L0217
       ADD             L07,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0209
       JL              Gef,#79 [TRUE] L0211
L0209: CALL_VN2        R0471 (#1c,Gef,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0210
L0210: PUSH            #00
       JUMP            L0212
L0211: LOADB           #1fe2,(SP)+ -> -(SP)
L0212: JL              L07,#00 [TRUE] L0213
       JL              L07,#79 [TRUE] L0215
L0213: CALL_VN2        R0471 (#1e,L07,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0214
L0214: JUMP            L0216
L0215: STOREB          #1fe2,L07,(SP)+
L0216: INC             L07
       JUMP            L0208
L0217: ADD             L04,L06 -> L04
       SUB             L04,#02 -> -(SP)
       JL              #01,#00 [TRUE] L0218
       JL              #01,#79 [TRUE] L0220
L0218: CALL_VN2        R0471 (#1e,#01,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0219
L0219: JUMP            L0221
L0220: STOREB          #1fe2,#01,(SP)+
L0221: INC             L05
       JUMP            L0137
L0222: JL              #01,#00 [TRUE] L0223
       JL              #01,#79 [TRUE] L0224
L0223: CALL_VN2        R0471 (#1c,#01,#78,#00,#0d)
       PUSH            #00
       JUMP            L0225
L0224: LOADB           #1fe2,#01 -> -(SP)
L0225: ADD             #02,(SP)+ -> L04
       STORE           Gef,#1fe2
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
       PUSH            L04
       INC             L04
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0226
       JL              Gef,#79 [TRUE] L0228
L0226: CALL_VN2        R0471 (#1e,Gef,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0227
L0227: JUMP            L0229
L0228: STOREB          #1fe2,(SP)+,#20
L0229: STORE           L05,#00
       JUMP            L0231
L0230: INC             L04
       INC             L05
L0231: JL              #01,#00 [TRUE] L0232
       JL              #01,#79 [TRUE] L0233
L0232: CALL_VN2        R0471 (#1c,#01,#78,#00,#0f)
       PUSH            #00
       JUMP            L0234
L0233: LOADB           #209c,#01 -> -(SP)
L0234: JL              L05,(SP)+ [FALSE] L0247
       ADD             L05,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0235
       JL              Gef,#79 [TRUE] L0237
L0235: CALL_VN2        R0471 (#1c,Gef,#78,#00,#0f)
       JZ              (SP)+ [FALSE] L0236
L0236: PUSH            #00
       JUMP            L0238
L0237: LOADB           #209c,(SP)+ -> -(SP)
L0238: JL              L04,#00 [TRUE] L0239
       JL              L04,#79 [TRUE] L0241
L0239: CALL_VN2        R0471 (#1e,L04,#78,#00,#0d)
       JZ              (SP)+ [FALSE] L0240
L0240: JUMP            L0242
L0241: STOREB          #1fe2,L04,(SP)+
L0242: STORE           Gef,#1fe2
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
       JL              #01,#00 [TRUE] L0243
       JL              #01,#79 [TRUE] L0244
L0243: CALL_VN2        R0471 (#1c,#01,#78,#00,#0d)
       PUSH            #00
       JUMP            L0245
L0244: LOADB           #1fe2,#01 -> -(SP)
L0245: JE              (SP)+,#78 [FALSE] L0246
       JUMP            L0247
L0246: JUMP            L0230
L0247: JL              L04,#78 [FALSE] L0251
       JL              L04,#00 [TRUE] L0248
       JL              L04,#79 [TRUE] L0249
L0248: CALL_VN2        R0471 (#1e,L04,#78,#00,#0d)
       JUMP            L0250
L0249: STOREB          #1fe2,L04,#20
L0250: INC             L04
       JUMP            L0247
L0251: RET             #2710

Routine R0033, 11 locals

       JL              G33,#04 [TRUE] L0011
       PRINT_PADDR     S114
       PRINT_NUM       G74
       PRINT           " in context "
       PRINT_NUM       L00
       PRINT           "
"
       PRINT           "   "
       JZ              G5e [TRUE] L0010
       PRINT           "indefinite type: "
       AND             G5f,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       PRINT           "other "
L0001: AND             G5f,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       PRINT           "my "
L0002: AND             G5f,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT           "that "
L0003: AND             G5f,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       PRINT           "plural "
L0004: AND             G5f,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       PRINT           "lit "
L0005: AND             G5f,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       PRINT           "unlit "
L0006: JZ              G62 [TRUE] L0007
       PRINT           "owner:"
       CALL_2N         R0119 (G62)
L0007: NEW_LINE        
       PRINT           "   number wanted: "
       JE              G60,#64 [FALSE] L0008
       PRINT           "all"
       JUMP            L0009
L0008: PRINT_NUM       G60
L0009: NEW_LINE        
       PRINT           "   most likely GNAs of names: "
       PRINT_NUM       G63
       PRINT           "
"
       JUMP            L0011
L0010: PRINT           "definite object
"
L0011: SUB             G74,#01 -> L02
       STORE           L05,#00
       JL              #00,#00 [TRUE] L0012
       JL              #00,#40 [TRUE] L0013
L0012: CALL_VN2        R0471 (#1d,#00,#3f,#01,#0a)
       JUMP            L0014
L0013: LOADW           #1e62,#00 -> L06
L0014: STORE           L01,#00
L0015: JG              L01,L02 [TRUE] L0046
       JL              L01,#00 [TRUE] L0016
       JL              L01,#40 [TRUE] L0017
L0016: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0a)
       JUMP            L0018
L0017: LOADW           #1e62,L01 -> L07
L0018: JL              L01,#00 [TRUE] L0019
       JL              L01,#40 [TRUE] L0020
L0019: CALL_VN2        R0471 (#1f,L01,#3f,#01,#0c)
       JUMP            L0021
L0020: STOREW          #1f62,L01,#00
L0021: STORE           L04,#00
       STORE           Gef,L00
       JE              Gef,#01,#03 [FALSE] L0026
       JG              #05,L07 [TRUE] L0022
       JG              L07,#0082 [TRUE] L0022
       JIN             L07,"Class" [FALSE] L0023
L0022: CALL_VN         R0471 (#04,L07)
       STORE           Gee,#02
       JUMP            L0024
L0023: STORE           Gee,L07
L0024: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G38 [FALSE] L0025
       STORE           L04,#01
L0025: JUMP            L0041
L0026: JE              Gef,#04 [FALSE] L0029
       JE              G54,#ffff [FALSE] L0027
       STORE           L04,#01
       JUMP            L0028
L0027: JE              L07,G54 [TRUE] L0028
       STORE           L04,#01
L0028: JUMP            L0041
L0029: JE              Gef,#05 [FALSE] L0038
       JE              G54,#ffff [FALSE] L0034
       JG              #05,L07 [TRUE] L0030
       JG              L07,#0082 [TRUE] L0030
       JIN             L07,"Class" [FALSE] L0031
L0030: CALL_VN         R0471 (#04,L07)
       STORE           Gee,#02
       JUMP            L0032
L0031: STORE           Gee,L07
L0032: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G38 [TRUE] L0033
       STORE           L04,#01
L0033: JUMP            L0037
L0034: JG              #01,L07 [TRUE] L0035
       JG              L07,#0082 [FALSE] L0036
L0035: CALL_VN         R0471 (#02,L07)
       JUMP            L0037
L0036: JIN             L07,G54 [FALSE] L0037
       STORE           L04,#01
L0037: JUMP            L0041
L0038: JE              Gef,#06 [FALSE] L0040
       CALL_2S         R0028 (L07) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0039
       STORE           L04,#01
L0039: JUMP            L0041
L0040: STORE           L04,#01
L0041: JZ              L04 [TRUE] L0045
       JL              L01,#00 [TRUE] L0042
       JL              L01,#40 [TRUE] L0043
L0042: CALL_VN2        R0471 (#1f,L01,#3f,#01,#0c)
       JUMP            L0044
L0043: STOREW          #1f62,L01,#01f4
L0044: INC             L05
       STORE           L06,L07
L0045: INC             L01
       JUMP            L0015
L0046: JE              L05,#01 [FALSE] L0047
       RET             L06
L0047: JE              L00,#06 [FALSE] L0051
       JZ              L05 [FALSE] L0051
       JL              #00,#00 [TRUE] L0048
       JL              #00,#40 [TRUE] L0049
L0048: CALL_VN2        R0471 (#1d,#00,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0050
L0049: LOADW           #1e62,#00 -> -(SP)
L0050: RET_POPPED      
L0051: JZ              G5e [FALSE] L0052
       STORE           G5f,#00
L0052: CALL_2N         R0035 (L00)
       JZ              G74 [FALSE] L0053
       RET             #ffff
L0053: JZ              G5e [FALSE] L0055
       CALL_1S         R0037 -> L01
       JL              L01,#00 [TRUE] L0055
       JL              G33,#04 [TRUE] L0054
       PRINT_PADDR     S115
L0054: RET             L01
L0055: JE              G5e,#01 [FALSE] L0095
       AND             G5f,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0095
       JE              L00,#02,#03,#04 [TRUE] L0056
       JE              L00,#05 [TRUE] L0056
       STORE           G45,#07
       RET             #ffff
L0056: STORE           L01,#00
       JL              #00,#00 [TRUE] L0057
       JL              #00,#40 [TRUE] L0058
L0057: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0059
L0058: LOADW           #1c82,#00 -> L09
L0059: STORE           L0a,#ffff
       CALL_1S         R0036 -> L02
       JUMP            L0061
L0060: CALL_1S         R0036 -> L02
L0061: JE              L02,#ffff [TRUE] L0088
       JL              L01,G60 [FALSE] L0088
       ADD             L01,L09 -> -(SP)
       JL              (SP)+,#3f [FALSE] L0088
       STORE           L08,#00
       JG              #01,L02 [TRUE] L0062
       JG              L02,#0082 [FALSE] L0063
L0062: CALL_VN         R0471 (#03,L02)
       JUMP            L0064
L0063: TEST_ATTR       L02,#05 [TRUE] L0068
L0064: JG              #01,L02 [TRUE] L0065
       JG              L02,#0082 [FALSE] L0066
L0065: CALL_VN         R0471 (#03,L02)
       JUMP            L0067
L0066: TEST_ATTR       L02,#1c [TRUE] L0068
L0067: STORE           L08,#01
L0068: JE              L0a,#ffff [FALSE] L0069
       DIV             G78,#14 -> L0a
       JUMP            L0070
L0069: JE              G60,#64 [FALSE] L0070
       DIV             G78,#14 -> -(SP)
       JL              (SP)+,L0a [FALSE] L0070
       STORE           L08,#00
L0070: JE              L00,#03,#04 [FALSE] L0074
       JG              #05,L02 [TRUE] L0071
       JG              L02,#0082 [TRUE] L0071
       JIN             L02,"Class" [FALSE] L0072
L0071: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0073
L0072: STORE           Gee,L02
L0073: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G38 [TRUE] L0074
       STORE           L08,#00
L0074: JE              G52,#0f,#11 [FALSE] L0078
       JG              #05,L02 [TRUE] L0075
       JG              L02,#0082 [TRUE] L0075
       JIN             L02,"Class" [FALSE] L0076
L0075: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0077
L0076: STORE           Gee,L02
L0077: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G38 [FALSE] L0078
       STORE           L08,#00
L0078: CALL_VS         R0459 (L02,L08) -> L03
       JE              L03,#01 [FALSE] L0079
       STORE           L08,#01
       JUMP            L0080
L0079: JE              L03,#02 [FALSE] L0080
       STORE           L08,#00
L0080: JE              L08,#01 [FALSE] L0086
       INC             L01
       ADD             L01,L09 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0081
       JL              Gef,#40 [TRUE] L0083
L0081: CALL_VN2        R0471 (#1f,Gef,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0082
L0082: JUMP            L0084
L0083: STOREW          #1c82,(SP)+,L02
L0084: JL              G33,#04 [TRUE] L0085
       PRINT           "   Accepting it
"
L0085: JUMP            L0087
L0086: STORE           L01,L01
       JL              G33,#04 [TRUE] L0087
       PRINT           "   Rejecting it
"
L0087: JUMP            L0060
L0088: JL              L01,G60 [FALSE] L0089
       JL              G60,#64 [FALSE] L0089
       STORE           G45,#10
       STORE           G5b,G60
       STORE           G5c,L01
       RET             #ffff
L0089: ADD             L01,L09 -> -(SP)
       JL              #00,#00 [TRUE] L0090
       JL              #00,#40 [TRUE] L0092
L0090: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0091
L0091: JUMP            L0093
L0092: STOREW          #1c82,#00,(SP)+
L0093: STORE           G5d,L00
       JL              G33,#04 [TRUE] L0094
       PRINT           "   Made multiple object of size "
       PRINT_NUM       L01
       PRINT           "]
"
L0094: RTRUE           
L0095: STORE           L01,#00
L0096: JL              L01,G74 [FALSE] L0100
       JL              L01,#00 [TRUE] L0097
       JL              L01,#40 [TRUE] L0098
L0097: CALL_VN2        R0471 (#1f,L01,#3f,#01,#0b)
       JUMP            L0099
L0098: STOREW          #1ee2,L01,#00
L0099: INC             L01
       JUMP            L0096
L0100: STORE           L07,#01
       STORE           L01,#00
L0101: JL              L01,G74 [FALSE] L0131
       JL              L01,#00 [TRUE] L0102
       JL              L01,#40 [TRUE] L0103
L0102: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0104
L0103: LOADW           #1ee2,L01 -> -(SP)
L0104: JZ              (SP)+ [FALSE] L0130
       PUSH            L07
       INC             L07
       JL              L01,#00 [TRUE] L0105
       JL              L01,#40 [TRUE] L0107
L0105: CALL_VN2        R0471 (#1f,L01,#3f,#01,#0b)
       JZ              (SP)+ [FALSE] L0106
L0106: JUMP            L0108
L0107: STOREW          #1ee2,L01,(SP)+
L0108: STORE           L08,#00
       ADD             L01,#01 -> L02
L0109: JL              L02,G74 [FALSE] L0126
       JL              L02,#00 [TRUE] L0110
       JL              L02,#40 [TRUE] L0111
L0110: CALL_VN2        R0471 (#1d,L02,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0112
L0111: LOADW           #1ee2,L02 -> -(SP)
L0112: JZ              (SP)+ [FALSE] L0125
       JL              L02,#00 [TRUE] L0113
       JL              L02,#40 [TRUE] L0114
L0113: CALL_VN2        R0471 (#1d,L02,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0115
L0114: LOADW           #1e62,L02 -> -(SP)
L0115: JL              L01,#00 [TRUE] L0116
       JL              L01,#40 [TRUE] L0117
L0116: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0118
L0117: LOADW           #1e62,L01 -> -(SP)
L0118: CALL_VS         R0038 ((SP)+,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0125
       STORE           L08,#01
       JL              L01,#00 [TRUE] L0119
       JL              L01,#40 [TRUE] L0120
L0119: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0121
L0120: LOADW           #1ee2,L01 -> -(SP)
L0121: JL              L02,#00 [TRUE] L0122
       JL              L02,#40 [TRUE] L0124
L0122: CALL_VN2        R0471 (#1f,L02,#3f,#01,#0b)
       JZ              (SP)+ [FALSE] L0123
L0123: JUMP            L0125
L0124: STOREW          #1ee2,L02,(SP)+
L0125: INC             L02
       JUMP            L0109
L0126: JE              L08,#01 [FALSE] L0130
       SUB             #01,L07 -> -(SP)
       JL              L01,#00 [TRUE] L0127
       JL              L01,#40 [TRUE] L0129
L0127: CALL_VN2        R0471 (#1f,L01,#3f,#01,#0b)
       JZ              (SP)+ [FALSE] L0128
L0128: JUMP            L0130
L0129: STOREW          #1ee2,L01,(SP)+
L0130: INC             L01
       JUMP            L0101
L0131: DEC             L07
       STORE           G75,L07
       JL              G33,#04 [TRUE] L0146
       PRINT           "   Grouped into "
       PRINT_NUM       L07
       PRINT           " possibilities by name:
"
       STORE           L01,#00
L0132: JL              L01,G74 [FALSE] L0146
       JL              L01,#00 [TRUE] L0133
       JL              L01,#40 [TRUE] L0134
L0133: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0135
L0134: LOADW           #1ee2,L01 -> -(SP)
L0135: JG              (SP)+,#00 [FALSE] L0145
       PRINT           "   "
       JL              L01,#00 [TRUE] L0136
       JL              L01,#40 [TRUE] L0137
L0136: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0138
L0137: LOADW           #1e62,L01 -> -(SP)
L0138: CALL_2N         R0118 ((SP)+)
       PRINT           " ("
       JL              L01,#00 [TRUE] L0139
       JL              L01,#40 [TRUE] L0140
L0139: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0141
L0140: LOADW           #1e62,L01 -> -(SP)
L0141: PRINT_NUM       (SP)+
       PRINT           ")  ---  group "
       JL              L01,#00 [TRUE] L0142
       JL              L01,#40 [TRUE] L0143
L0142: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0144
L0143: LOADW           #1ee2,L01 -> -(SP)
L0144: PRINT_NUM       (SP)+
       PRINT           "
"
L0145: INC             L01
       JUMP            L0132
L0146: JZ              G5e [FALSE] L0171
       JG              L07,#01 [FALSE] L0171
       STORE           L03,#ffff
       STORE           L01,#00
L0147: JL              L01,G74 [FALSE] L0168
       JL              L01,#00 [TRUE] L0148
       JL              L01,#40 [TRUE] L0149
L0148: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0150
L0149: LOADW           #1f62,L01 -> -(SP)
L0150: JG              (SP)+,L03 [FALSE] L0157
       JL              L01,#00 [TRUE] L0151
       JL              L01,#40 [TRUE] L0152
L0151: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0c)
       JUMP            L0153
L0152: LOADW           #1f62,L01 -> L03
L0153: JL              L01,#00 [TRUE] L0154
       JL              L01,#40 [TRUE] L0155
L0154: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       JUMP            L0156
L0155: LOADW           #1ee2,L01 -> L02
L0156: MUL             L02,L02 -> L02
       STORE           L08,#00
       JUMP            L0167
L0157: JL              L01,#00 [TRUE] L0158
       JL              L01,#40 [TRUE] L0159
L0158: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0160
L0159: LOADW           #1f62,L01 -> -(SP)
L0160: JE              (SP)+,L03 [FALSE] L0167
       JL              L01,#00 [TRUE] L0161
       JL              L01,#40 [TRUE] L0162
L0161: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0163
L0162: LOADW           #1ee2,L01 -> -(SP)
L0163: JL              L01,#00 [TRUE] L0164
       JL              L01,#40 [TRUE] L0165
L0164: CALL_VN2        R0471 (#1d,L01,#3f,#01,#0b)
       PUSH            #00
       JUMP            L0166
L0165: LOADW           #1ee2,L01 -> -(SP)
L0166: MUL             (SP)+,(SP)+ -> -(SP)
       JE              (SP)+,L02 [TRUE] L0167
       STORE           L08,#01
L0167: INC             L01
       JUMP            L0147
L0168: JZ              L08 [TRUE] L0170
       JL              G33,#04 [TRUE] L0169
       PRINT_PADDR     S116
L0169: RFALSE          
L0170: JL              G33,#04 [TRUE] L0171
       PRINT_PADDR     S117
L0171: JE              L07,#01 [FALSE] L0172
       STORE           G51,#01
L0172: CALL_1S         R0036 -> -(SP)
       RET_POPPED      

Routine R0034, 3 locals

       JL              G33,#04 [TRUE] L0004
       PRINT_PADDR     S118
       JL              #00,#00 [TRUE] L0001
       JL              #00,#40 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0003
L0002: LOADW           #1c82,#00 -> -(SP)
L0003: PRINT_NUM       (SP)+
       PRINT           " with 2nd "
       CALL_2N         R0119 (L00)
       PRINT           "
"
L0004: JE              G5d,#04,#05 [FALSE] L0029
       STORE           L01,#01
       STORE           L02,#00
L0005: JL              #00,#00 [TRUE] L0006
       JL              #00,#40 [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #1c82,#00 -> -(SP)
L0008: JG              L01,(SP)+ [TRUE] L0026
       JE              G5d,#04 [FALSE] L0012
       JL              L01,#00 [TRUE] L0009
       JL              L01,#40 [TRUE] L0010
L0009: CALL_VN2        R0471 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0011
L0010: LOADW           #1c82,L01 -> -(SP)
L0011: JE              (SP)+,L00 [FALSE] L0018
L0012: JE              G5d,#05 [FALSE] L0025
       JL              L01,#00 [TRUE] L0013
       JL              L01,#40 [TRUE] L0014
L0013: CALL_VN2        R0471 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0015
L0014: LOADW           #1c82,L01 -> -(SP)
L0015: PULL            Gee
       PUSH            Gee
       JG              #01,Gee [TRUE] L0016
       JG              Gee,#0082 [FALSE] L0017
L0016: CALL_VN         R0471 (#02,(SP)+)
       JUMP            L0025
L0017: JIN             (SP)+,L00 [FALSE] L0025
L0018: INC             L02
       JL              L01,#00 [TRUE] L0019
       JL              L01,#40 [TRUE] L0020
L0019: CALL_VN2        R0471 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0021
L0020: LOADW           #1c82,L01 -> -(SP)
L0021: JL              L02,#00 [TRUE] L0022
       JL              L02,#40 [TRUE] L0024
L0022: CALL_VN2        R0471 (#1f,L02,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0023
L0023: JUMP            L0025
L0024: STOREW          #1c82,L02,(SP)+
L0025: INC             L01
       JUMP            L0005
L0026: JL              #00,#00 [TRUE] L0027
       JL              #00,#40 [TRUE] L0028
L0027: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0029
L0028: STOREW          #1c82,#00,L02
L0029: JE              G5d,#02 [FALSE] L0058
       JE              G52,#0f [FALSE] L0058
       STORE           L01,#01
       STORE           L02,#00
L0030: JL              #00,#00 [TRUE] L0031
       JL              #00,#40 [TRUE] L0032
L0031: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0033
L0032: LOADW           #1c82,#00 -> -(SP)
L0033: JG              L01,(SP)+ [TRUE] L0038
       CALL_2S         R0025 (G38) -> -(SP)
       JL              L01,#00 [TRUE] L0034
       JL              L01,#40 [TRUE] L0035
L0034: CALL_VN2        R0471 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0036
L0035: LOADW           #1c82,L01 -> -(SP)
L0036: CALL_2S         R0025 ((SP)+) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0037
       INC             L02
L0037: INC             L01
       JUMP            L0030
L0038: JL              G33,#04 [TRUE] L0039
       PRINT_PADDR     S119
       PRINT_NUM       L02
       PRINT           "
"
L0039: JE              G67,#02 [TRUE] L0040
       JG              L02,#00 [FALSE] L0058
L0040: STORE           L01,#01
       STORE           L02,#00
L0041: JL              #00,#00 [TRUE] L0042
       JL              #00,#40 [TRUE] L0043
L0042: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       PUSH            #00
       JUMP            L0044
L0043: LOADW           #1c82,#00 -> -(SP)
L0044: JG              L01,(SP)+ [TRUE] L0055
       CALL_2S         R0025 (G38) -> -(SP)
       JL              L01,#00 [TRUE] L0045
       JL              L01,#40 [TRUE] L0046
L0045: CALL_VN2        R0471 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0047
L0046: LOADW           #1c82,L01 -> -(SP)
L0047: CALL_2S         R0025 ((SP)+) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0054
       INC             L02
       JL              L01,#00 [TRUE] L0048
       JL              L01,#40 [TRUE] L0049
L0048: CALL_VN2        R0471 (#1d,L01,#3f,#01,#03)
       PUSH            #00
       JUMP            L0050
L0049: LOADW           #1c82,L01 -> -(SP)
L0050: JL              L02,#00 [TRUE] L0051
       JL              L02,#40 [TRUE] L0053
L0051: CALL_VN2        R0471 (#1f,L02,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0052
L0052: JUMP            L0054
L0053: STOREW          #1c82,L02,(SP)+
L0054: INC             L01
       JUMP            L0041
L0055: JL              #00,#00 [TRUE] L0056
       JL              #00,#40 [TRUE] L0057
L0056: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0058
L0057: STOREW          #1c82,#00,L02
L0058: JL              #00,#00 [TRUE] L0059
       JL              #00,#40 [TRUE] L0060
L0059: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0061
L0060: LOADW           #1c82,#00 -> L01
L0061: JL              G33,#04 [TRUE] L0062
       PRINT           "   Done: new size "
       PRINT_NUM       L01
       PRINT           "
"
L0062: JZ              L01 [FALSE] L0063
       RET             #11
L0063: RFALSE          

Routine R0035, 10 locals

       AND             G5f,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       INC             L06
L0001: AND             G5f,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L06
L0002: AND             G5f,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L06
L0003: AND             G5f,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       INC             L06
L0004: JZ              G62 [TRUE] L0005
       INC             L06
L0005: JL              G33,#04 [TRUE] L0006
       PRINT_PADDR     S120
       PRINT_NUM       G5e
       PRINT           " type "
       PRINT_NUM       G5f
       PRINT           ", satisfying "
       PRINT_NUM       L06
       PRINT           " requirements:
"
L0006: STORE           L08,#28
       STORE           L09,#3c
       JE              L00,#01,#03,#04 [FALSE] L0007
       STORE           L08,#3c
       STORE           L09,#28
L0007: STORE           L04,#00
L0008: JL              L04,G74 [FALSE] L0070
       JL              L04,#00 [TRUE] L0009
       JL              L04,#40 [TRUE] L0010
L0009: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       JUMP            L0011
L0010: LOADW           #1e62,L04 -> L03
L0011: JG              #05,L03 [TRUE] L0012
       JG              L03,#0082 [TRUE] L0012
       JIN             L03,"Class" [FALSE] L0013
L0012: CALL_VN         R0471 (#04,L03)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L03
L0014: GET_PARENT      Gee -> L01
       STORE           L02,#00
       AND             G5f,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       JE              L01,G38 [FALSE] L0015
       INC             L07
L0015: AND             G5f,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JE              L01,G39 [FALSE] L0016
       INC             L07
L0016: AND             G5f,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       JG              #01,L03 [TRUE] L0017
       JG              L03,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#03,L03)
       JUMP            L0019
L0018: TEST_ATTR       L03,#0b [FALSE] L0019
       INC             L07
L0019: AND             G5f,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       JG              #01,L03 [TRUE] L0020
       JG              L03,#0082 [FALSE] L0021
L0020: CALL_VN         R0471 (#03,L03)
       JUMP            L0022
L0021: TEST_ATTR       L03,#0b [TRUE] L0023
L0022: INC             L07
L0023: JZ              G62 [TRUE] L0024
       JE              L01,G62 [FALSE] L0024
       INC             L07
L0024: JL              L07,L06 [FALSE] L0035
       JL              G33,#04 [TRUE] L0031
       PRINT           "   "
       JL              L04,#00 [TRUE] L0025
       JL              L04,#40 [TRUE] L0026
L0025: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0027
L0026: LOADW           #1e62,L04 -> -(SP)
L0027: CALL_2N         R0118 ((SP)+)
       PRINT           " ("
       JL              L04,#00 [TRUE] L0028
       JL              L04,#40 [TRUE] L0029
L0028: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0030
L0029: LOADW           #1e62,L04 -> -(SP)
L0030: PRINT_NUM       (SP)+
       PRINT           ") in "
       CALL_2N         R0117 (L01)
       PRINT_PADDR     S121
L0031: JL              L04,#00 [TRUE] L0032
       JL              L04,#40 [TRUE] L0033
L0032: CALL_VN2        R0471 (#1f,L04,#3f,#01,#0a)
       JUMP            L0034
L0033: STOREW          #1e62,L04,#ffff
L0034: JUMP            L0069
L0035: STORE           L02,#00
       JG              #01,L03 [TRUE] L0036
       JG              L03,#0082 [FALSE] L0037
L0036: CALL_VN         R0471 (#03,L03)
       JUMP            L0038
L0037: TEST_ATTR       L03,#05 [TRUE] L0039
L0038: STORE           L02,#64
L0039: JE              L01,G38 [FALSE] L0040
       ADD             L02,L08 -> L02
       JUMP            L0042
L0040: JE              L01,G39 [FALSE] L0041
       ADD             L02,L09 -> L02
       JUMP            L0042
L0041: JE              L01,#08 [TRUE] L0042
       ADD             L02,#14 -> L02
L0042: CALL_VS         R0459 (L03,#02) -> -(SP)
       MUL             #03e8,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> L02
       JG              #01,L03 [TRUE] L0043
       JG              L03,#0082 [FALSE] L0044
L0043: CALL_VN         R0471 (#03,L03)
       JUMP            L0045
L0044: TEST_ATTR       L03,#13 [TRUE] L0046
L0045: ADD             L02,#0a -> L02
L0046: JE              L03,G38 [TRUE] L0047
       ADD             L02,#05 -> L02
L0047: CALL_2S         R0065 (L03) -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0048
       JL              Gef,#0c [TRUE] L0050
L0048: CALL_VN2        R0471 (#1d,Gef,#0b,#01,#13)
       JZ              (SP)+ [FALSE] L0049
L0049: PUSH            #00
       JUMP            L0051
L0050: LOADW           #220f,(SP)+ -> -(SP)
L0051: AND             G63,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0052
       ADD             L02,#01 -> L02
L0052: JL              L04,#00 [TRUE] L0053
       JL              L04,#40 [TRUE] L0054
L0053: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0055
L0054: LOADW           #1f62,L04 -> -(SP)
L0055: ADD             (SP)+,L02 -> -(SP)
       JL              L04,#00 [TRUE] L0056
       JL              L04,#40 [TRUE] L0058
L0056: CALL_VN2        R0471 (#1f,L04,#3f,#01,#0c)
       JZ              (SP)+ [FALSE] L0057
L0057: JUMP            L0059
L0058: STOREW          #1f62,L04,(SP)+
L0059: JL              G33,#04 [TRUE] L0069
       PRINT           "     "
       JL              L04,#00 [TRUE] L0060
       JL              L04,#40 [TRUE] L0061
L0060: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0062
L0061: LOADW           #1e62,L04 -> -(SP)
L0062: CALL_2N         R0118 ((SP)+)
       PRINT           " ("
       JL              L04,#00 [TRUE] L0063
       JL              L04,#40 [TRUE] L0064
L0063: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0065
L0064: LOADW           #1e62,L04 -> -(SP)
L0065: PRINT_NUM       (SP)+
       PRINT           ") in "
       CALL_2N         R0117 (L01)
       PRINT           " : "
       JL              L04,#00 [TRUE] L0066
       JL              L04,#40 [TRUE] L0067
L0066: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0c)
       PUSH            #00
       JUMP            L0068
L0067: LOADW           #1f62,L04 -> -(SP)
L0068: PRINT_NUM       (SP)+
       PRINT           " points
"
L0069: INC             L04
       JUMP            L0008
L0070: STORE           L04,#00
L0071: JL              L04,G74 [FALSE] L0096
L0072: JL              L04,#00 [TRUE] L0073
       JL              L04,#40 [TRUE] L0074
L0073: CALL_VN2        R0471 (#1d,L04,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0075
L0074: LOADW           #1e62,L04 -> -(SP)
L0075: JE              (SP)+,#ffff [FALSE] L0095
       SUB             G74,#01 -> -(SP)
       JE              L04,(SP)+ [FALSE] L0076
       DEC             G74
       JUMP            L0095
L0076: STORE           L05,L04
L0077: JL              L05,G74 [FALSE] L0094
       ADD             L05,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0078
       JL              Gef,#40 [TRUE] L0080
L0078: CALL_VN2        R0471 (#1d,Gef,#3f,#01,#0a)
       JZ              (SP)+ [FALSE] L0079
L0079: PUSH            #00
       JUMP            L0081
L0080: LOADW           #1e62,(SP)+ -> -(SP)
L0081: JL              L05,#00 [TRUE] L0082
       JL              L05,#40 [TRUE] L0084
L0082: CALL_VN2        R0471 (#1f,L05,#3f,#01,#0a)
       JZ              (SP)+ [FALSE] L0083
L0083: JUMP            L0085
L0084: STOREW          #1e62,L05,(SP)+
L0085: ADD             L05,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0086
       JL              Gef,#40 [TRUE] L0088
L0086: CALL_VN2        R0471 (#1d,Gef,#3f,#01,#0c)
       JZ              (SP)+ [FALSE] L0087
L0087: PUSH            #00
       JUMP            L0089
L0088: LOADW           #1f62,(SP)+ -> -(SP)
L0089: JL              L05,#00 [TRUE] L0090
       JL              L05,#40 [TRUE] L0092
L0090: CALL_VN2        R0471 (#1f,L05,#3f,#01,#0c)
       JZ              (SP)+ [FALSE] L0091
L0091: JUMP            L0093
L0092: STOREW          #1f62,L05,(SP)+
L0093: INC             L05
       JUMP            L0077
L0094: DEC             G74
       JUMP            L0072
L0095: INC             L04
       JUMP            L0071
L0096: RTRUE           

Routine R0036, 4 locals

       STORE           L00,#00
       STORE           L02,#ffff
       STORE           L03,#00
L0001: JL              L03,G74 [FALSE] L0009
       JL              L03,#00 [TRUE] L0002
       JL              L03,#40 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L03,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1e62,L03 -> -(SP)
L0004: JL              (SP)+,#00 [TRUE] L0008
       JL              L03,#00 [TRUE] L0005
       JL              L03,#40 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,L03,#3f,#01,#0c)
       JUMP            L0007
L0006: LOADW           #1f62,L03 -> L01
L0007: JG              L01,L02 [FALSE] L0008
       STORE           L02,L01
       STORE           L00,L03
L0008: INC             L03
       JUMP            L0001
L0009: JL              G33,#04 [TRUE] L0017
       JL              L02,#00 [FALSE] L0010
       PRINT_PADDR     S122
       JUMP            L0017
L0010: PRINT           "   Best guess "
       JL              L00,#00 [TRUE] L0011
       JL              L00,#40 [TRUE] L0012
L0011: CALL_VN2        R0471 (#1d,L00,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0013
L0012: LOADW           #1e62,L00 -> -(SP)
L0013: CALL_2N         R0117 ((SP)+)
       PRINT           " ("
       JL              L00,#00 [TRUE] L0014
       JL              L00,#40 [TRUE] L0015
L0014: CALL_VN2        R0471 (#1d,L00,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0016
L0015: LOADW           #1e62,L00 -> -(SP)
L0016: PRINT_NUM       (SP)+
       PRINT           ")
"
L0017: JL              L02,#00 [FALSE] L0018
       RET             #ffff
L0018: JL              L00,#00 [TRUE] L0019
       JL              L00,#40 [TRUE] L0020
L0019: CALL_VN2        R0471 (#1d,L00,#3f,#01,#0a)
       JUMP            L0021
L0020: LOADW           #1e62,L00 -> L03
L0021: JL              L00,#00 [TRUE] L0022
       JL              L00,#40 [TRUE] L0023
L0022: CALL_VN2        R0471 (#1f,L00,#3f,#01,#0a)
       JUMP            L0024
L0023: STOREW          #1e62,L00,#ffff
L0024: STORE           G78,L02
       RET             L03

Routine R0037, 4 locals

       STORE           L00,#ffff
       STORE           L02,#fc18
       STORE           L03,#00
L0001: JL              L03,G74 [FALSE] L0009
       JL              L03,#00 [TRUE] L0002
       JL              L03,#40 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L03,#3f,#01,#0c)
       JUMP            L0004
L0003: LOADW           #1f62,L03 -> L01
L0004: JE              L01,L02 [FALSE] L0005
       STORE           L00,#ffff
L0005: JG              L01,L02 [FALSE] L0008
       STORE           L02,L01
       JL              L03,#00 [TRUE] L0006
       JL              L03,#40 [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L03,#3f,#01,#0a)
       JUMP            L0008
L0007: LOADW           #1e62,L03 -> L00
L0008: INC             L03
       JUMP            L0001
L0009: STORE           G78,L02
       RET             L00

Routine R0038, 9 locals

       JE              L00,L01 [TRUE] RTRUE
       JZ              L00 [TRUE] RFALSE
       JZ              L01 [TRUE] RFALSE
       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#08 [TRUE] RFALSE
       JG              #05,L01 [TRUE] L0004
       JG              L01,#0082 [TRUE] L0004
       JIN             L01,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L01
L0006: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#08 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PROP        Gee,#30 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0013
       JG              #01,L01 [TRUE] L0010
       JG              L01,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L01
L0012: GET_PROP        Gee,#30 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0020
L0013: JG              #01,L01 [TRUE] L0014
       JG              L01,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,L01
L0016: GET_PROP        Gee,#30 -> Gef
       PUSH            Gef
       JG              #01,L00 [TRUE] L0017
       JG              L00,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,L00
L0019: GET_PROP        Gee,#30 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] RFALSE
       STORE           G34,#1004
       STORE           G35,L00
       STORE           G36,L01
       STORE           L07,G79
       CALL_VS         R0091 (L00,#30) -> L06
       STORE           G79,L07
       JE              L06,#ffff [TRUE] RTRUE
       JE              L06,#fffe [TRUE] RFALSE
L0020: JG              #01,L00 [TRUE] L0021
       JG              L00,#0082 [FALSE] L0022
L0021: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,L00
L0023: GET_PROP_ADDR   Gee,#01 -> Gef
       STORE           L02,Gef
       JG              #01,L00 [TRUE] L0024
       JG              L00,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#16,L00)
       STORE           Gee,#02
       JUMP            L0026
L0025: STORE           Gee,L00
L0026: GET_PROP_ADDR   Gee,#01 -> Gef
       JZ              Gef [TRUE] L0027
       GET_PROP_LEN    Gef -> Gef
L0027: PUSH            Gef
       DIV             (SP)+,#02 -> L04
       JG              #01,L01 [TRUE] L0028
       JG              L01,#0082 [FALSE] L0029
L0028: CALL_VN         R0471 (#15,L01)
       STORE           Gee,#02
       JUMP            L0030
L0029: STORE           Gee,L01
L0030: GET_PROP_ADDR   Gee,#01 -> Gef
       STORE           L03,Gef
       JG              #01,L01 [TRUE] L0031
       JG              L01,#0082 [FALSE] L0032
L0031: CALL_VN         R0471 (#16,L01)
       STORE           Gee,#02
       JUMP            L0033
L0032: STORE           Gee,L01
L0033: GET_PROP_ADDR   Gee,#01 -> Gef
       JZ              Gef [TRUE] L0034
       GET_PROP_LEN    Gef -> Gef
L0034: PUSH            Gef
       DIV             (SP)+,#02 -> L05
       STORE           L06,#00
L0035: JL              L06,L04 [FALSE] L0039
       STORE           L08,#00
       STORE           L07,#00
L0036: JL              L07,L05 [FALSE] L0038
       CALL_VS         R0484 (L03,L07) -> -(SP)
       CALL_VS         R0484 (L02,L06) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0037
       STORE           L08,#01
L0037: INC             L07
       JUMP            L0036
L0038: JZ              L08 [TRUE] RFALSE
       INC             L06
       JUMP            L0035
L0039: STORE           L07,#00
L0040: JL              L07,L05 [FALSE] L0044
       STORE           L08,#00
       STORE           L06,#00
L0041: JL              L06,L04 [FALSE] L0043
       CALL_VS         R0484 (L03,L07) -> -(SP)
       CALL_VS         R0484 (L02,L06) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0042
       STORE           L08,#01
L0042: INC             L06
       JUMP            L0041
L0043: JZ              L08 [TRUE] RFALSE
       INC             L07
       JUMP            L0040
L0044: RTRUE           

Routine R0039, 4 locals

       JZ              L00 [FALSE] L0002
       STORE           L01,G7b
       CALL_2S         R0008 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0456 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2N         R0488 (L01)
L0001: INC             L00
       STORE           L03,#01
L0002: STORE           L02,L00
L0003: JL              L02,G48 [FALSE] L0014
       JL              L02,#00 [TRUE] L0004
       JL              L02,#20 [TRUE] L0005
L0004: CALL_VN2        R0471 (#1d,L02,#1f,#01,#05)
       JUMP            L0006
L0005: LOADW           #1d22,L02 -> L01
L0006: JE              L01,#ffff [FALSE] L0007
       JUMP            L0013
L0007: JZ              L03 [TRUE] L0008
       CALL_2N         R0487 (#20)
L0008: JZ              L01 [FALSE] L0009
       CALL_2N         R0489 (S032)
       JUMP            L0012
L0009: JE              L01,#01 [FALSE] L0010
       CALL_2N         R0489 (S033)
       JUMP            L0012
L0010: JL              L01,#2710 [TRUE] L0011
       SUB             L01,#2710 -> -(SP)
       CALL_2S         R0067 ((SP)+) -> -(SP)
       CALL_2N         R0488 ((SP)+)
       JUMP            L0012
L0011: CALL_2N         R0117 (L01)
L0012: STORE           L03,#01
L0013: INC             L02
       JUMP            L0003
L0014: RTRUE           

Routine R0040, 3 locals

       STORE           G7f,G7e
       JZ              G6e [TRUE] L0001
       STORE           G6f,G6e
       RET             #12
L0001: DEC             G79
       CALL_1S         R0059 -> L01
       STORE           L02,#04
       JE              L01,G69 [FALSE] L0002
       STORE           G6b,G69
       STORE           G6c,G6a
       STORE           L02,#0e
L0002: STORE           L00,G38
L0003: JG              #05,L00 [TRUE] L0004
       JG              L00,#0082 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       JG              #05,L00 [TRUE] L0007
       JG              L00,#0082 [TRUE] L0007
       JIN             L00,"Class" [FALSE] L0008
L0007: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PARENT      Gee -> L00
       JUMP            L0003
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#1a [FALSE] L0013
       SUB             G79,#01 -> -(SP)
       CALL_VS         R0055 (L00,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0013
       STORE           L02,#0d
L0013: JG              G45,L02 [FALSE] L0014
       RET             G45
L0014: RET             L02

Routine R0041, 3 locals

       JL              #00,#00 [TRUE] L0001
       JL              #00,#40 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0003
L0002: LOADW           #1c82,#00 -> L01
L0003: JE              L01,#3f [FALSE] L0004
       STORE           G3c,#01
       RTRUE           
L0004: STORE           L02,#01
L0005: JG              L02,L01 [TRUE] L0009
       JL              L02,#00 [TRUE] L0006
       JL              L02,#40 [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L02,#3f,#01,#03)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #1c82,L02 -> -(SP)
L0008: JE              L00,(SP)+ [TRUE] RTRUE
       INC             L02
       JUMP            L0005
L0009: INC             L01
       JL              L01,#00 [TRUE] L0010
       JL              L01,#40 [TRUE] L0011
L0010: CALL_VN2        R0471 (#1f,L01,#3f,#01,#03)
       JUMP            L0012
L0011: STOREW          #1c82,L01,L00
L0012: JL              #00,#00 [TRUE] L0013
       JL              #00,#40 [TRUE] L0014
L0013: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JUMP            L0015
L0014: STOREW          #1c82,#00,L01
L0015: RTRUE           

Routine R0042, 5 locals

       JL              #00,#00 [TRUE] L0001
       JL              #00,#40 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0003
L0002: LOADW           #1c82,#00 -> L01
L0003: STORE           L04,#00
       STORE           L02,#01
L0004: JG              L02,L01 [TRUE] L0023
       JL              L02,#00 [TRUE] L0005
       JL              L02,#40 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,L02,#3f,#01,#03)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #1c82,L02 -> -(SP)
L0007: JE              L00,(SP)+ [FALSE] L0022
       STORE           L03,L02
L0008: JG              L03,L01 [TRUE] L0017
       ADD             L03,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0009
       JL              Gef,#40 [TRUE] L0011
L0009: CALL_VN2        R0471 (#1d,Gef,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0010
L0010: PUSH            #00
       JUMP            L0012
L0011: LOADW           #1c82,(SP)+ -> -(SP)
L0012: JL              L03,#00 [TRUE] L0013
       JL              L03,#40 [TRUE] L0015
L0013: CALL_VN2        R0471 (#1f,L03,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0014
L0014: JUMP            L0016
L0015: STOREW          #1c82,L03,(SP)+
L0016: INC             L03
       JUMP            L0008
L0017: DEC             L01
       PUSH            L01
       JL              #00,#00 [TRUE] L0018
       JL              #00,#40 [TRUE] L0020
L0018: CALL_VN2        R0471 (#1f,#00,#3f,#01,#03)
       JZ              (SP)+ [FALSE] L0019
L0019: JUMP            L0021
L0020: STOREW          #1c82,#00,(SP)+
L0021: RET             L04
L0022: INC             L02
       JUMP            L0004
L0023: STORE           L04,#09
       RET             L04

Routine R0043, 4 locals

L0001: JL              #00,#00 [TRUE] L0002
       JL              #00,#40 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0004
L0003: LOADW           #1c82,#00 -> L01
L0004: STORE           L02,#01
L0005: JG              L02,L01 [TRUE] L0015
       JL              L02,#00 [TRUE] L0006
       JL              L02,#40 [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L02,#3f,#01,#03)
       JUMP            L0008
L0007: LOADW           #1c82,L02 -> L03
L0008: JG              #01,L03 [TRUE] L0009
       JG              L03,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L03)
       JUMP            L0013
L0010: STORE           Gef,L03
       STORE           Gee,L00
       JL              Gee,#00 [TRUE] L0011
       JL              Gee,#30 [TRUE] L0012
L0011: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0013
L0012: TEST_ATTR       L03,L00 [TRUE] L0014
L0013: CALL_2N         R0042 (L03)
       JUMP            L0001
L0014: INC             L02
       JUMP            L0005
L0015: RTRUE           

Routine R0044, 1 local

       JG              G57,#00 [FALSE] L0006
       JL              G57,#31 [FALSE] L0006
       SUB             G57,#01 -> -(SP)
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0005
L0002: STORE           Gef,L00
       PULL            Gee
       PUSH            Gee
       JL              Gee,#00 [TRUE] L0003
       JL              Gee,#30 [TRUE] L0004
L0003: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0005
L0004: TEST_ATTR       L00,(SP)+ [TRUE] RTRUE
L0005: RFALSE          
L0006: STORE           G2e,L00
       CALL_1S         G57 -> -(SP)
       RET_POPPED      

Routine R0045, 5 locals

       MUL             L00,#02 -> -(SP)
       SUB             (SP)+,#01 -> L03
       MUL             L02,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       PUSH            L04
       INC             L04
       CALL_VS         R0484 (L01,(SP)+) -> -(SP)
       PUSH            L03
       INC             L03
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0001
       JL              Gef,#20 [TRUE] L0004
L0001: CALL_VN2        R0471 (#1f,Gef,#40,#08,#0e)
       JZ              (SP)+ [FALSE] L0002
L0002: JZ              (SP)+ [FALSE] L0003
L0003: JUMP            L0005
L0004: STOREW          #205b,(SP)+,(SP)+
L0005: CALL_VS         R0484 (L01,L04) -> -(SP)
       JL              L03,#00 [TRUE] L0006
       JL              L03,#20 [TRUE] L0008
L0006: CALL_VN2        R0471 (#1f,L03,#40,#08,#0e)
       JZ              (SP)+ [FALSE] L0007
L0007: JUMP            L0009
L0008: STOREW          #205b,L03,(SP)+
L0009: RTRUE           

Routine R0046, 4 locals

       STORE           L03,#00
       JZ              G6d [FALSE] L0012
       JE              G7b,"purloin","tree","abstract" [TRUE] L0001
       JE              G7b,"gonear","scope","showobj" [FALSE] L0012
L0001: STORE           L03,#16
L0002: JG              L03,G03 [TRUE] L0011
       CALL_VS         R0469 (L03,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       JG              #05,L03 [TRUE] L0003
       JG              L03,#0082 [TRUE] L0003
       JIN             L03,"Class" [FALSE] L0004
L0003: CALL_VN         R0471 (#04,L03)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,L03
L0005: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       JG              #05,L03 [TRUE] L0006
       JG              L03,#0082 [TRUE] L0006
       JIN             L03,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#04,L03)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L03
L0008: GET_PARENT      Gee -> -(SP)
       CALL_VS         R0469 ((SP)+,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
L0009: CALL_2N         R0048 (L03)
L0010: INC             L03
       JUMP            L0002
L0011: RTRUE           
L0012: JZ              G6e [TRUE] L0013
       STORE           G70,#02
       CALL_1S         G6e -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0013: JE              G38,L00,L01 [FALSE] L0014
       CALL_2S         R0454 (G38) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0014: JE              L02,#05 [FALSE] L0016
       JE              G54,#ffff [TRUE] L0016
       CALL_2S         R0047 (G54) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0015
       CALL_VN         R0050 (G54,#00,L02)
L0015: JUMP            L0031
L0016: JZ              L00 [TRUE] L0023
       JG              #01,L00 [TRUE] L0017
       JG              L00,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#03,L00)
       JUMP            L0019
L0018: TEST_ATTR       L00,#16 [TRUE] L0022
L0019: JG              #01,L00 [TRUE] L0020
       JG              L00,#0082 [FALSE] L0021
L0020: CALL_VN         R0471 (#03,L00)
       JUMP            L0023
L0021: TEST_ATTR       L00,#06 [FALSE] L0023
L0022: CALL_VN         R0051 (L00,L00,L02)
L0023: CALL_VN         R0050 (L00,L01,L02)
       JZ              L01 [TRUE] L0030
       JG              #01,L01 [TRUE] L0024
       JG              L01,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#03,L01)
       JUMP            L0026
L0025: TEST_ATTR       L01,#16 [TRUE] L0029
L0026: JG              #01,L01 [TRUE] L0027
       JG              L01,#0082 [FALSE] L0028
L0027: CALL_VN         R0471 (#03,L01)
       JUMP            L0030
L0028: TEST_ATTR       L01,#06 [FALSE] L0030
L0029: CALL_VN         R0051 (L01,L01,L02)
L0030: CALL_VN         R0050 (L01,#00,L02)
L0031: JE              #15,L00,L01 [FALSE] L0047
       CALL_VN         R0051 (G38,G38,L02)
       JG              #05,G38 [TRUE] L0032
       JG              G38,#0082 [TRUE] L0032
       JIN             G38,"Class" [FALSE] L0033
L0032: CALL_VN         R0471 (#04,G38)
       STORE           Gee,#02
       JUMP            L0034
L0033: STORE           Gee,G38
L0034: GET_PARENT      Gee -> -(SP)
       PULL            Gef
       JG              #01,Gef [TRUE] L0035
       JG              Gef,#0082 [FALSE] L0036
L0035: CALL_VN         R0471 (#03,Gef)
       JUMP            L0037
L0036: TEST_ATTR       Gef,#16 [TRUE] L0040
L0037: JG              #01,Gef [TRUE] L0038
       JG              Gef,#0082 [FALSE] L0039
L0038: CALL_VN         R0471 (#03,Gef)
       JUMP            L0047
L0039: TEST_ATTR       Gef,#06 [FALSE] L0047
L0040: JG              #05,G38 [TRUE] L0041
       JG              G38,#0082 [TRUE] L0041
       JIN             G38,"Class" [FALSE] L0042
L0041: CALL_VN         R0471 (#04,G38)
       STORE           Gee,#02
       JUMP            L0043
L0042: STORE           Gee,G38
L0043: GET_PARENT      Gee -> -(SP)
       JG              #05,G38 [TRUE] L0044
       JG              G38,#0082 [TRUE] L0044
       JIN             G38,"Class" [FALSE] L0045
L0044: CALL_VN         R0471 (#04,G38)
       STORE           Gee,#02
       JUMP            L0046
L0045: STORE           Gee,G38
L0046: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0051 ((SP)+,(SP)+,L02)
L0047: RTRUE           

Routine R0047, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#16 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#19 [TRUE] RTRUE
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0008: TEST_ATTR       L00,#06 [FALSE] L0011
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#10 [TRUE] RTRUE
L0011: RFALSE          

Routine R0048, 1 local

       JE              G6d,#00,#01 [TRUE] L0001
       CALL_2N         R0049 (L00)
       RTRUE           
L0001: STORE           G79,G77
       CALL_2N         R0054 (L00)
       STORE           G73,#01
       RTRUE           

Routine R0049, 3 locals

       STORE           L01,G6d
       STORE           L02,G35
       JL              G33,#06 [TRUE] L0001
       PRINT           "[DSA on "
       CALL_2N         R0117 (L00)
       PRINT           " with reason = "
       PRINT_NUM       G6d
       PRINT           " p1 = "
       PRINT_NUM       G35
       PRINT           " p2 = "
       PRINT_NUM       G36
       PRINT           "]
"
L0001: STORE           Gef,G6d
       JE              Gef,#03 [FALSE] L0008
       JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PROP        Gee,#1a -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [FALSE] L0005
       RTRUE           
L0005: JL              G33,#02 [TRUE] L0006
       PRINT           "[Considering react_before for "
       CALL_2N         R0117 (L00)
       PRINT           "]
"
L0006: JZ              G35 [FALSE] L0007
       CALL_VS         R0091 (L00,#1a) -> G35
L0007: JUMP            L0024
L0008: JE              Gef,#04 [FALSE] L0015
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L00
L0011: GET_PROP        Gee,#1b -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [FALSE] L0012
       RTRUE           
L0012: JL              G33,#02 [TRUE] L0013
       PRINT           "[Considering react_after for "
       CALL_2N         R0117 (L00)
       PRINT           "]
"
L0013: JZ              G35 [FALSE] L0014
       CALL_VS         R0091 (L00,#1b) -> G35
L0014: JUMP            L0024
L0015: JE              Gef,#02 [FALSE] L0021
       JG              #01,L00 [TRUE] L0016
       JG              L00,#0082 [FALSE] L0017
L0016: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L00
L0018: GET_PROP        Gee,#2c -> Gef
       PUSH            Gef
       JE              (SP)+,#00,#ffff [FALSE] L0019
       RTRUE           
L0019: JL              G33,#02 [TRUE] L0020
       PRINT           "[Considering each_turn for "
       CALL_2N         R0117 (L00)
       PRINT           "]
"
L0020: CALL_VN         R0089 (L00,#2c)
       JUMP            L0024
L0021: JE              Gef,#06 [FALSE] L0023
       JE              L00,G35 [FALSE] L0022
       STORE           G36,#01
L0022: JUMP            L0024
L0023: JE              Gef,#05 [FALSE] L0024
       CALL_2N         G35 (L00)
       STORE           G35,L02
L0024: STORE           G6d,L01
       RTRUE           

Routine R0050, 5 locals

       JZ              L00 [TRUE] RTRUE
       JZ              G5e [FALSE] L0001
       JE              L00,G39 [FALSE] L0001
       JZ              G6d [FALSE] L0001
       JE              L02,#06 [TRUE] L0001
       CALL_2N         R0050 (#08)
L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0082 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_CHILD       Gee -> L03 [FALSE] L0005
L0005: JZ              L03 [TRUE] L0010
       JG              #05,L03 [TRUE] L0006
       JG              L03,#0082 [TRUE] L0006
       JIN             L03,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#08,L03)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L03
L0008: GET_SIBLING     Gee -> L04 [FALSE] L0009
L0009: CALL_VN         R0051 (L03,L01,L02)
       STORE           L03,L04
       JUMP            L0005
L0010: RTRUE           

Routine R0051, 6 locals

       JE              L02,#04 [FALSE] L0001
       JE              L00,G54 [FALSE] L0001
       JUMP            L0009
L0001: JE              G6d,#00,#01 [TRUE] L0002
       CALL_2N         R0049 (L00)
       JUMP            L0009
L0002: JG              G77,G7a [TRUE] L0007
       STORE           G79,G77
       CALL_1S         R0058 -> L03
       JE              L03,#01 [FALSE] L0003
       JE              G13,L00 [FALSE] L0003
       CALL_VN         R0053 (L00,#01)
L0003: JL              L03,#02 [TRUE] L0007
       JL              L03,#80 [FALSE] L0007
       JL              L03,#00 [TRUE] L0004
       JL              L03,#0d [TRUE] L0005
L0004: CALL_VN2        R0471 (#1d,L03,#0c,#03,#14)
       PUSH            #00
       JUMP            L0006
L0005: LOADW           #2227,L03 -> -(SP)
L0006: JE              (SP)+,L00 [FALSE] L0007
       CALL_VN         R0053 (L00,#01)
L0007: STORE           G79,G77
       CALL_2S         R0054 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0009
       JG              G65,#00 [FALSE] L0009
       JE              G77,G65 [TRUE] L0009
       STORE           G79,G65
       CALL_2S         R0054 (L00) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0008
       STORE           G77,G65
       CALL_1N         R0026
L0008: STORE           G79,G77
L0009: JG              #05,L00 [TRUE] L0010
       JG              L00,#0082 [TRUE] L0010
       JIN             L00,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L00
L0012: GET_CHILD       Gee -> -(SP) [FALSE] L0013
L0013: JZ              (SP)+ [TRUE] L0014
       JE              L00,L01 [TRUE] L0014
       CALL_2S         R0047 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0014
       CALL_VN         R0050 (L00,L01,L02)
L0014: JG              #01,L00 [TRUE] L0015
       JG              L00,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0017
L0016: STORE           Gee,L00
L0017: GET_PROP_ADDR   Gee,#18 -> Gef
       STORE           L04,Gef
       JZ              L04 [TRUE] L0024
       CALL_VS         R0484 (L04,#00) -> -(SP)
       CALL_VS         R0123 ((SP)+,G03) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0018
       ADD             #02,L02 -> G71
       CALL_VN         R0091 (L00,#18)
       STORE           G71,#00
       JUMP            L0024
L0018: JG              #01,L00 [TRUE] L0019
       JG              L00,#0082 [FALSE] L0020
L0019: CALL_VN         R0471 (#16,L00)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,L00
L0021: GET_PROP_ADDR   Gee,#18 -> Gef
       JZ              Gef [TRUE] L0022
       GET_PROP_LEN    Gef -> Gef
L0022: STORE           L05,Gef
       STORE           L03,#00
L0023: MUL             #02,L03 -> -(SP)
       JL              (SP)+,L05 [FALSE] L0024
       CALL_VS         R0484 (L04,L03) -> -(SP)
       CALL_VN         R0051 ((SP)+,#00,L02)
       INC             L03
       JUMP            L0023
L0024: RTRUE           

Routine R0052, 1 local

       JL              G71,#02 [TRUE] L0001
       SUB             G71,#02 -> -(SP)
       CALL_VN         R0051 (L00,#00,(SP)+)
L0001: JE              G71,#01 [FALSE] L0002
       CALL_2S         R0103 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       STORE           G72,#01
L0002: RTRUE           

Routine R0053, 3 locals

       JL              G33,#06 [TRUE] L0001
       PRINT           "    Match with quality "
       PRINT_NUM       L01
       PRINT           "
"
L0001: JZ              G57 [TRUE] L0003
       CALL_2S         R0044 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       JL              G33,#06 [TRUE] L0002
       PRINT_PADDR     S123
       PRINT_NUM       G57
       PRINT           "
"
L0002: RTRUE           
L0003: JL              L01,G76 [TRUE] RTRUE
       JG              L01,G76 [FALSE] L0004
       STORE           G76,L01
       STORE           G74,#00
       JUMP            L0009
L0004: MUL             #02,G74 -> -(SP)
       JL              (SP)+,#80 [FALSE] RTRUE
       STORE           L02,#00
L0005: JL              L02,G74 [FALSE] L0009
       JL              L02,#00 [TRUE] L0006
       JL              L02,#40 [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L02,#3f,#01,#0a)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #1e62,L02 -> -(SP)
L0008: JE              (SP)+,L00 [TRUE] RTRUE
       INC             L02
       JUMP            L0005
L0009: PUSH            G74
       INC             G74
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0010
       JL              Gef,#40 [TRUE] L0012
L0010: CALL_VN2        R0471 (#1f,Gef,#3f,#01,#0a)
       JZ              (SP)+ [FALSE] L0011
L0011: JUMP            L0013
L0012: STOREW          #1e62,(SP)+,L00
L0013: JL              G33,#06 [TRUE] L0014
       PRINT           "    Match added to list
"
L0014: RTRUE           

Routine R0054, 5 locals

       JL              G33,#05 [TRUE] L0001
       PRINT           "    Trying "
       CALL_2N         R0117 (L00)
       PRINT           " ("
       PRINT_NUM       L00
       PRINT           ") at word "
       PRINT_NUM       G79
       PRINT           "
"
L0001: STORE           G68,#00
       JG              G79,G7a [FALSE] L0004
       JZ              G5e [TRUE] L0002
       STORE           G68,#70
L0002: CALL_VN         R0053 (L00,#00)
       JL              G33,#05 [TRUE] L0003
       PRINT           "    Matched (0)
"
L0003: RTRUE           
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L00
L0007: GET_PROP        Gee,#30 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0015
       STORE           G34,#ffff
       STORE           L04,G79
       CALL_VS         R0091 (L00,#30) -> L02
       JG              L02,#00 [FALSE] L0014
       ADD             L04,L02 -> G79
L0008: JE              G34,#1005 [FALSE] L0009
       OR              G68,#04 -> G68
L0009: AND             G68,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       JZ              G66 [FALSE] L0010
       STORE           L02,#00
       JUMP            L0012
L0010: JZ              G5e [FALSE] L0011
       STORE           G5e,#01
       STORE           G5f,#00
       STORE           G60,#00
L0011: OR              G5f,#08 -> G5f
       JZ              G60 [FALSE] L0012
       STORE           G60,#64
L0012: JL              G33,#05 [TRUE] L0013
       PRINT           "    Matched ("
       PRINT_NUM       L02
       PRINT           ")
"
L0013: CALL_VN         R0053 (L00,L02)
       RET             L02
L0014: JZ              L02 [FALSE] L0015
       JUMP            L0024
L0015: STORE           G34,#ffff
       CALL_1S         R0058 -> L03
       JE              L03,#01 [FALSE] L0016
       JE              G13,L00 [FALSE] L0016
       STORE           L02,#01
       JUMP            L0008
L0016: JL              L03,#02 [TRUE] L0020
       JL              L03,#80 [FALSE] L0020
       JL              L03,#00 [TRUE] L0017
       JL              L03,#0d [TRUE] L0018
L0017: CALL_VN2        R0471 (#1d,L03,#0c,#03,#14)
       PUSH            #00
       JUMP            L0019
L0018: LOADW           #2227,L03 -> -(SP)
L0019: JE              (SP)+,L00 [FALSE] L0020
       STORE           L02,#01
       JUMP            L0008
L0020: DEC             G79
       STORE           L04,G79
       CALL_2S         R0461 (L00) -> L01
       JL              L01,#00 [TRUE] L0021
       JL              G33,#05 [TRUE] L0021
       PRINT           "    ParseNoun returned "
       PRINT_NUM       L01
       PRINT           "
"
L0021: JL              L01,#00 [FALSE] L0022
       INC             G79
L0022: JG              L01,#00 [FALSE] L0023
       STORE           L02,L01
       JUMP            L0008
L0023: JZ              L01 [TRUE] L0024
       SUB             G79,#01 -> -(SP)
       CALL_VS         R0055 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [FALSE] L0026
L0024: JZ              G5e [TRUE] L0025
       STORE           L02,#00
       STORE           G34,#ffff
       JUMP            L0008
L0025: RFALSE          
L0026: JL              L01,#00 [FALSE] L0029
       STORE           L01,#01
       CALL_VS         R0483 (L03,#06) -> -(SP)
       AND             (SP)+,#74 -> G68
       CALL_1S         R0059 -> L03
L0027: SUB             G79,#01 -> -(SP)
       CALL_VS         R0055 (L00,(SP)+) -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       INC             L01
       JZ              L03 [TRUE] L0028
       CALL_VS         R0483 (L03,#06) -> -(SP)
       AND             (SP)+,#74 -> -(SP)
       OR              G68,(SP)+ -> G68
L0028: CALL_1S         R0059 -> L03
       JUMP            L0027
L0029: STORE           L02,L01
       JUMP            L0008

Routine R0055, 6 locals

       JZ              L00 [TRUE] RFALSE
       STORE           L03,G79
       STORE           G79,L01
       CALL_1S         R0060 -> L02
       STORE           G79,L03
       JL              G37,#0100 [TRUE] L0002
       CALL_VS         G37 (L00,L02) -> L03
       JL              L03,#00 [TRUE] L0001
       RET             L03
L0001: SUB             #00,L03 -> L05
       JUMP            L0003
L0002: STORE           L05,G37
L0003: CALL_VS         R0466 (L00,L05) -> L03
       CALL_VS         R0467 (L00,L05) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0004: JG              L05,L04 [TRUE] L0005
       CALL_VS         R0484 (L03,L05) -> -(SP)
       JE              L02,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0004
L0005: RFALSE          

Routine R0056, 6 locals

       CALL_VS         R0466 (L01,L02) -> L03
       CALL_VS         R0467 (L01,L02) -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       SUB             (SP)+,#01 -> L04
       STORE           L05,#00
L0001: JG              L05,L04 [TRUE] L0002
       CALL_VS         R0484 (L03,L05) -> -(SP)
       JE              L00,(SP)+ [TRUE] RTRUE
       INC             L05
       JUMP            L0001
L0002: RFALSE          

Routine R0057, 3 locals

       STORE           L02,#00
L0001: JL              L02,L01 [FALSE] L0007
       CALL_VS         R0483 (L00,L02) -> -(SP)
       ADD             #02,L02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0002
       JL              Gef,#79 [TRUE] L0005
L0002: CALL_VN2        R0471 (#1e,Gef,#78,#00,#0f)
       JZ              (SP)+ [FALSE] L0003
L0003: JZ              (SP)+ [FALSE] L0004
L0004: JUMP            L0006
L0005: STOREB          #209c,(SP)+,(SP)+
L0006: INC             L02
       JUMP            L0001
L0007: JL              #01,#00 [TRUE] L0008
       JL              #01,#79 [TRUE] L0009
L0008: CALL_VN2        R0471 (#1e,#01,#78,#00,#0f)
       JUMP            L0010
L0009: STOREB          #209c,#01,L01
L0010: CALL_VN         R0020 (#209c,#2115)
       JL              #01,#00 [TRUE] L0011
       JL              #01,#20 [TRUE] L0012
L0011: CALL_VN2        R0471 (#1d,#01,#40,#08,#10)
       PUSH            #00
       JUMP            L0013
L0012: LOADW           #2115,#01 -> -(SP)
L0013: RET_POPPED      

Routine R0058, 3 locals

       CALL_1S         R0059 -> L00
       JZ              L00 [TRUE] RFALSE
       JE              L00,"me","myself","self" [FALSE] L0001
       RTRUE           
L0001: JL              #00,#00 [TRUE] L0002
       JL              #00,#0d [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       JUMP            L0004
L0003: LOADW           #2227,#00 -> L02
L0004: STORE           L01,#01
       JUMP            L0006
L0005: ADD             L01,#03 -> L01
L0006: JG              L01,L02 [TRUE] L0011
       JL              L01,#00 [TRUE] L0007
       JL              L01,#0d [TRUE] L0008
L0007: CALL_VN2        R0471 (#1d,L01,#0c,#03,#14)
       PUSH            #00
       JUMP            L0009
L0008: LOADW           #2227,L01 -> -(SP)
L0009: JE              L00,(SP)+ [FALSE] L0010
       ADD             L01,#02 -> -(SP)
       RET_POPPED      
L0010: JUMP            L0005
L0011: CALL_VS         R0483 (L00,#06) -> -(SP)
       AND             (SP)+,#80 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       RET             L00

Routine R0059, 2 locals

       JL              #01,#00 [TRUE] L0001
       JL              #01,#41 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1c,#01,#40,#00,#0e)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #205b,#01 -> -(SP)
L0003: JG              G79,(SP)+ [FALSE] L0004
       INC             G79
       RFALSE          
L0004: MUL             G79,#02 -> -(SP)
       SUB             (SP)+,#01 -> L00
       INC             G79
       JL              L00,#00 [TRUE] L0005
       JL              L00,#20 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,L00,#40,#08,#0e)
       JUMP            L0007
L0006: LOADW           #205b,L00 -> L01
L0007: JE              L01,"," [FALSE] L0008
       STORE           L01,"comma,"
L0008: JE              L01,"." [FALSE] L0009
       STORE           L01,"then"
L0009: RET             L01

Routine R0060, 0 locals

       JL              #01,#00 [TRUE] L0001
       JL              #01,#41 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1c,#01,#40,#00,#0e)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #205b,#01 -> -(SP)
L0003: JG              G79,(SP)+ [FALSE] L0004
       INC             G79
       RET             #ffff
L0004: CALL_1S         R0059 -> -(SP)
       RET_POPPED      

Routine R0061, 1 local

       MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0001
       JL              Gef,#41 [TRUE] L0003
L0001: CALL_VN2        R0471 (#1c,Gef,#40,#00,#0e)
       JZ              (SP)+ [FALSE] L0002
L0002: PUSH            #00
       JUMP            L0004
L0003: LOADB           #205b,(SP)+ -> -(SP)
L0004: ADD             #1fe2,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0062, 1 local

       MUL             L00,#04 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0001
       JL              Gef,#41 [TRUE] L0003
L0001: CALL_VN2        R0471 (#1c,Gef,#40,#00,#0e)
       JZ              (SP)+ [FALSE] L0002
L0002: PUSH            #00
       JUMP            L0004
L0003: LOADB           #205b,(SP)+ -> -(SP)
L0004: RET_POPPED      

Routine R0063, 10 locals

       STORE           L01,G79
       STORE           G79,L00
       CALL_1S         R0059 -> L02
       STORE           G79,L01
       CALL_2S         R0121 (L02) -> L02
       JL              L02,#01 [TRUE] L0001
       RET             L02
L0001: MUL             L00,#04 -> -(SP)
       ADD             (SP)+,#01 -> L01
       JL              L01,#00 [TRUE] L0002
       JL              L01,#41 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1c,L01,#40,#00,#0e)
       JUMP            L0004
L0003: LOADB           #205b,L01 -> L02
L0004: ADD             L02,#1fe2 -> L04
       SUB             L01,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0005
       JL              Gef,#41 [TRUE] L0007
L0005: CALL_VN2        R0471 (#1c,Gef,#40,#00,#0e)
       JZ              (SP)+ [FALSE] L0006
L0006: JUMP            L0008
L0007: LOADB           #205b,(SP)+ -> L05
L0008: CALL_VS         R0458 (L04,L05) -> L07
       JZ              L07 [TRUE] L0009
       RET             L07
L0009: JL              L05,#04 [TRUE] L0010
       STORE           L06,#03e8
L0010: JE              L05,#03 [FALSE] L0011
       STORE           L06,#64
L0011: JE              L05,#02 [FALSE] L0012
       STORE           L06,#0a
L0012: JE              L05,#01 [FALSE] L0013
       STORE           L06,#01
L0013: STORE           L07,#00
       STORE           L03,#00
       SUB             L05,#01 -> L05
       STORE           L03,#00
L0014: JG              L03,L05 [TRUE] L0026
       CALL_VS         R0483 (L04,L03) -> L09
       JE              L09,#30 [FALSE] L0015
       STORE           L08,#00
       JUMP            L0025
L0015: JE              L09,#31 [FALSE] L0016
       STORE           L08,#01
       JUMP            L0025
L0016: JE              L09,#32 [FALSE] L0017
       STORE           L08,#02
       JUMP            L0025
L0017: JE              L09,#33 [FALSE] L0018
       STORE           L08,#03
       JUMP            L0025
L0018: JE              L09,#34 [FALSE] L0019
       STORE           L08,#04
       JUMP            L0025
L0019: JE              L09,#35 [FALSE] L0020
       STORE           L08,#05
       JUMP            L0025
L0020: JE              L09,#36 [FALSE] L0021
       STORE           L08,#06
       JUMP            L0025
L0021: JE              L09,#37 [FALSE] L0022
       STORE           L08,#07
       JUMP            L0025
L0022: JE              L09,#38 [FALSE] L0023
       STORE           L08,#08
       JUMP            L0025
L0023: JE              L09,#39 [FALSE] L0024
       STORE           L08,#09
       JUMP            L0025
L0024: RET             #fc18
L0025: MUL             L06,L08 -> -(SP)
       ADD             L07,(SP)+ -> L07
       DIV             L06,#0a -> L06
       INC             L03
       JUMP            L0014
L0026: JG              L05,#03 [FALSE] L0027
       STORE           L07,#2710
L0027: RET             L07

Routine R0064, 1 local

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       RTRUE           
L0002: TEST_ATTR       L00,#1e [FALSE] RTRUE
       RFALSE          

Routine R0065, 3 locals

       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#02 [TRUE] L0004
L0003: STORE           L01,#06
L0004: JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,L00)
       JUMP            L0007
L0006: TEST_ATTR       L00,#1d [FALSE] L0007
       STORE           L02,#1d
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,L00)
       JUMP            L0010
L0009: TEST_ATTR       L00,#1e [FALSE] L0010
       STORE           L02,#1e
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#1f [FALSE] L0013
       STORE           L02,#1f
L0013: JZ              L02 [FALSE] L0015
       JZ              L01 [FALSE] L0014
       STORE           L02,#1d
       JUMP            L0015
L0014: STORE           L02,#1f
L0015: JE              L02,#1e [FALSE] L0016
       ADD             L01,#01 -> L01
L0016: JE              L02,#1f [FALSE] L0017
       ADD             L01,#02 -> L01
L0017: JG              #01,L00 [TRUE] L0018
       JG              L00,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L00)
       JUMP            L0020
L0019: TEST_ATTR       L00,#20 [FALSE] L0020
       ADD             L01,#03 -> L01
L0020: RET             L01

Routine R0066, 1 local

       CALL_VS         R0484 (#00,#04) -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       SUB             L00,(SP)+ -> -(SP)
       DIV             (SP)+,#09 -> -(SP)
       RET_POPPED      

Routine R0067, 1 local

       MUL             #09,L00 -> -(SP)
       CALL_VS         R0484 (#00,#04) -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       RET_POPPED      

Routine R0068, 4 locals

       CALL_VS         R0483 (L00,#00) -> L03
       STORE           L02,#01
L0001: JG              L02,L03 [TRUE] L0002
       CALL_VS         R0483 (L01,L02) -> -(SP)
       CALL_VN         R0485 (L00,L02,(SP)+)
       INC             L02
       JUMP            L0001
L0002: RTRUE           

Routine R0069, 4 locals

       STORE           L02,#1fe2
       CALL_VS         R0483 (L02,#01) -> L03
       CALL_VS         R0483 (L02,#00) -> -(SP)
       JG              L03,(SP)+ [FALSE] L0001
       CALL_VS         R0483 (L02,#00) -> L03
L0001: ADD             L03,#02 -> L03
L0002: JG              L03,L00 [FALSE] L0003
       SUB             L03,#01 -> -(SP)
       CALL_VS         R0483 (L02,(SP)+) -> -(SP)
       CALL_VN         R0485 (L02,L03,(SP)+)
       DEC             L03
       JUMP            L0002
L0003: CALL_VN         R0485 (L02,L00,L01)
       CALL_VS         R0483 (L02,#00) -> -(SP)
       CALL_VS         R0483 (L02,#01) -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0004
       STORE           Gef,L02
       STORE           Gee,#01
       CALL_VS         R0483 (Gef,Gee) -> Ged
       INC             Ged
       CALL_VN         R0485 (Gef,Gee,Ged)
L0004: RTRUE           

Routine R0070, 4 locals
    Action routine for:
        "nouns"

       CALL_VN         R0285 (#00,#01)
       JL              #00,#00 [TRUE] L0001
       JL              #00,#0d [TRUE] L0002
L0001: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0003
L0002: LOADW           #2227,#00 -> -(SP)
L0003: DIV             (SP)+,#03 -> L02
       JE              G13,#16 [TRUE] L0004
       INC             L02
L0004: JZ              L02 [FALSE] L0005
       CALL_VS         R0285 (#00,#04) -> -(SP)
       RET_POPPED      
L0005: STORE           L00,#01
       STORE           L03,#00
       JUMP            L0007
L0006: ADD             L00,#03 -> L00
L0007: JL              #00,#00 [TRUE] L0008
       JL              #00,#0d [TRUE] L0009
L0008: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0010
L0009: LOADW           #2227,#00 -> -(SP)
L0010: JG              L00,(SP)+ [TRUE] L0022
       PRINT           """
       JL              L00,#00 [TRUE] L0011
       JL              L00,#0d [TRUE] L0012
L0011: CALL_VN2        R0471 (#1d,L00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0013
L0012: LOADW           #2227,L00 -> -(SP)
L0013: CALL_2N         R0488 ((SP)+)
       PRINT           "" "
       ADD             L00,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0014
       JL              Gef,#0d [TRUE] L0016
L0014: CALL_VN2        R0471 (#1d,Gef,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0015
L0015: JUMP            L0017
L0016: LOADW           #2227,(SP)+ -> L01
L0017: JE              L01,#ffff [FALSE] L0018
       CALL_VN         R0285 (#00,#03)
       JUMP            L0019
L0018: CALL_VN         R0285 (#00,#02)
       CALL_2N         R0117 (L01)
L0019: INC             L03
       SUB             L02,#01 -> -(SP)
       JL              L03,(SP)+ [FALSE] L0020
       PRINT           ", "
L0020: SUB             L02,#01 -> -(SP)
       JE              L03,(SP)+ [FALSE] L0021
       CALL_2N         R0489 (S040)
L0021: JUMP            L0006
L0022: JE              G13,#16 [TRUE] L0023
       PRINT           """
       CALL_2N         R0488 ("me")
       PRINT           "" "
       CALL_VN         R0285 (#00,#02)
       STORE           L02,G13
       STORE           G13,#16
       CALL_2N         R0117 (L02)
       STORE           G13,L02
L0023: PRINT_RET       "."

Routine R0071, 3 locals

       STORE           L02,#01
       JUMP            L0002
L0001: ADD             L02,#03 -> L02
L0002: JL              #00,#00 [TRUE] L0003
       JL              #00,#0d [TRUE] L0004
L0003: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0005
L0004: LOADW           #2227,#00 -> -(SP)
L0005: JG              L02,(SP)+ [TRUE] L0014
       JL              L02,#00 [TRUE] L0006
       JL              L02,#0d [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L02,#0c,#03,#14)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #2227,L02 -> -(SP)
L0008: JE              (SP)+,L00 [FALSE] L0013
       ADD             L02,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#01 [TRUE] L0009
       JL              Gef,#0d [TRUE] L0011
L0009: CALL_VN2        R0471 (#1f,Gef,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0010
L0010: JUMP            L0012
L0011: STOREW          #2227,(SP)+,L01
L0012: RTRUE           
L0013: JUMP            L0001
L0014: CALL_2N         R0133 (#0e)
       RTRUE           

Routine R0072, 2 locals

       STORE           L01,#01
       JUMP            L0002
L0001: ADD             L01,#03 -> L01
L0002: JL              #00,#00 [TRUE] L0003
       JL              #00,#0d [TRUE] L0004
L0003: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0005
L0004: LOADW           #2227,#00 -> -(SP)
L0005: JG              L01,(SP)+ [TRUE] L0014
       JL              L01,#00 [TRUE] L0006
       JL              L01,#0d [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L01,#0c,#03,#14)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #2227,L01 -> -(SP)
L0008: JE              (SP)+,L00 [FALSE] L0013
       ADD             L01,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0009
       JL              Gef,#0d [TRUE] L0011
L0009: CALL_VN2        R0471 (#1d,Gef,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0010
L0010: PUSH            #00
       JUMP            L0012
L0011: LOADW           #2227,(SP)+ -> -(SP)
L0012: RET_POPPED      
L0013: JUMP            L0001
L0014: RFALSE          

Routine R0073, 1 local

       CALL_2N         R0075 (L00)
       RTRUE           

Routine R0074, 0 locals

       JE              G83,G86 [TRUE] L0001
       CALL_VN         R0071 ("it",G83)
L0001: JE              G84,G87 [TRUE] L0002
       CALL_VN         R0071 ("him",G84)
L0002: JE              G85,G88 [TRUE] L0003
       CALL_VN         R0071 ("her",G85)
L0003: STORE           G86,G83
       STORE           G87,G84
       STORE           G88,G85
       RTRUE           

Routine R0075, 3 locals

       JE              L00,G13 [FALSE] L0001
       RTRUE           
L0001: CALL_1N         R0074
       CALL_2S         R0065 (L00) -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0002
       JL              Gef,#0c [TRUE] L0004
L0002: CALL_VN2        R0471 (#1d,Gef,#0b,#01,#13)
       JZ              (SP)+ [FALSE] L0003
L0003: JUMP            L0005
L0004: LOADW           #220f,(SP)+ -> L02
L0005: STORE           L01,#01
       JUMP            L0007
L0006: ADD             L01,#03 -> L01
L0007: JL              #00,#00 [TRUE] L0008
       JL              #00,#0d [TRUE] L0009
L0008: CALL_VN2        R0471 (#1d,#00,#0c,#03,#14)
       PUSH            #00
       JUMP            L0010
L0009: LOADW           #2227,#00 -> -(SP)
L0010: JG              L01,(SP)+ [TRUE] L0019
       ADD             L01,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0011
       JL              Gef,#0d [TRUE] L0013
L0011: CALL_VN2        R0471 (#1d,Gef,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0012
L0012: PUSH            #00
       JUMP            L0014
L0013: LOADW           #2227,(SP)+ -> -(SP)
L0014: AND             L02,(SP)+ -> -(SP)
       JZ              (SP)+ [TRUE] L0018
       ADD             L01,#02 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#01 [TRUE] L0015
       JL              Gef,#0d [TRUE] L0017
L0015: CALL_VN2        R0471 (#1f,Gef,#0c,#03,#14)
       JZ              (SP)+ [FALSE] L0016
L0016: JUMP            L0018
L0017: STOREW          #2227,(SP)+,L00
L0018: JUMP            L0006
L0019: CALL_2S         R0072 ("it") -> G83
       STORE           G86,G83
       CALL_2S         R0072 ("him") -> G84
       STORE           G87,G84
       CALL_2S         R0072 ("her") -> G85
       STORE           G88,G85
       RTRUE           

Routine R0076, 4 locals

       CALL_VS         R0484 (#32,#00) -> G04
       CALL_VS         R0484 (#00,#08) -> -(SP)
       AND             (SP)+,#01 -> G07
       CALL_VN         R0092 (#26,S028)
       JL              #00,#00 [TRUE] L0001
       JL              #00,#79 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1e,#00,#78,#00,#0d)
       JUMP            L0003
L0002: STOREB          #1fe2,#00,#78
L0003: JL              #00,#00 [TRUE] L0004
       JL              #00,#79 [TRUE] L0005
L0004: CALL_VN2        R0471 (#1e,#00,#78,#00,#0f)
       JUMP            L0006
L0005: STOREB          #209c,#00,#78
L0006: JL              #00,#00 [TRUE] L0007
       JL              #00,#79 [TRUE] L0008
L0007: CALL_VN2        R0471 (#1e,#00,#78,#00,#11)
       JUMP            L0009
L0008: STOREB          #2156,#00,#78
L0009: JL              #00,#00 [TRUE] L0010
       JL              #00,#41 [TRUE] L0011
L0010: CALL_VN2        R0471 (#1e,#00,#40,#00,#0e)
       JUMP            L0012
L0011: STOREB          #205b,#00,#40
L0012: JL              #00,#00 [TRUE] L0013
       JL              #00,#41 [TRUE] L0014
L0013: CALL_VN2        R0471 (#1e,#00,#40,#00,#10)
       JUMP            L0015
L0014: STOREB          #2115,#00,#40
L0015: STORE           G16,#15
       STORE           G13,#16
       STORE           G38,G13
       SUB             #0181,#ff -> G03
       CALL_VN         R0481 (#16,#2d,#0064)
       NEW_LINE        
       CALL_1S         R0441 -> L01
       STORE           G0f,G0e
       CALL_VN         R0477 (G13,G00)
L0016: JG              #05,G00 [TRUE] L0017
       JG              G00,#0082 [TRUE] L0017
       JIN             G00,"Class" [FALSE] L0018
L0017: CALL_VN         R0471 (#04,G00)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,G00
L0019: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       JG              #05,G00 [TRUE] L0020
       JG              G00,#0082 [TRUE] L0020
       JIN             G00,"Class" [FALSE] L0021
L0020: CALL_VN         R0471 (#04,G00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,G00
L0022: GET_PARENT      Gee -> G00
       JUMP            L0016
L0023: STORE           G16,G00
       JG              #05,G13 [TRUE] L0024
       JG              G13,#0082 [TRUE] L0024
       JIN             G13,"Class" [FALSE] L0025
L0024: CALL_VN         R0471 (#06,G13)
       STORE           Gee,#02
       JUMP            L0026
L0025: STORE           Gee,G13
L0026: GET_CHILD       Gee -> -(SP) [FALSE] L0027
L0027: PULL            L00
       JZ              L00 [TRUE] L0032
L0028: CALL_VN         R0479 (L00,#0e)
       CALL_VN         R0480 (L00,#05)
       JG              #05,L00 [TRUE] L0029
       JG              L00,#0082 [TRUE] L0029
       JIN             L00,"Class" [FALSE] L0030
L0029: CALL_VN         R0471 (#0d,L00)
       JUMP            L0032
L0030: JIN             L00,G13 [TRUE] L0031
       CALL_VN         R0471 (#20,L00)
       JUMP            L0032
L0031: GET_SIBLING     L00 -> L00 [TRUE] L0028
L0032: JE              L01,#02 [TRUE] L0033
       CALL_1N         R0131
L0033: CALL_1N         R0146
       JG              #05,G13 [TRUE] L0034
       JG              G13,#0082 [TRUE] L0034
       JIN             G13,"Class" [FALSE] L0035
L0034: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0036
L0035: STORE           Gee,G13
L0036: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0101 ((SP)+) -> G15
       JZ              G15 [FALSE] L0037
       STORE           G16,G00
       STORE           G00,#15
L0037: CALL_2N         R0081 (#1f)
       STORE           L00,#01
L0038: JG              L00,#64 [TRUE] L0039
       RANDOM          L00 -> L01
       INC             L00
       JUMP            L0038
L0039: STORE           G86,G83
       STORE           G87,G84
       STORE           G88,G85
L0040: JZ              G14 [FALSE] L0141
       CALL_1N         R0074
       CALL_2S         R0072 ("it") -> G86
       CALL_2S         R0072 ("him") -> G87
       CALL_2S         R0072 ("her") -> G88
L0041: JE              G0e,G0f [TRUE] L0043
       JE              G10,#01 [FALSE] L0042
       CALL_1N         R0099
L0042: STORE           G0f,G0e
L0043: JL              #00,#00 [TRUE] L0044
       JL              #00,#10 [TRUE] L0045
L0044: CALL_VN2        R0471 (#1f,#00,#0f,#01,#02)
       JUMP            L0046
L0045: STOREW          #1c62,#00,#00
L0046: JL              #01,#00 [TRUE] L0047
       JL              #01,#10 [TRUE] L0048
L0047: CALL_VN2        R0471 (#1f,#01,#0f,#01,#02)
       JUMP            L0049
L0048: STOREW          #1c62,#01,#00
L0049: JL              #02,#00 [TRUE] L0050
       JL              #02,#10 [TRUE] L0051
L0050: CALL_VN2        R0471 (#1f,#02,#0f,#01,#02)
       JUMP            L0052
L0051: STOREW          #1c62,#02,#00
L0052: JL              #03,#00 [TRUE] L0053
       JL              #03,#10 [TRUE] L0054
L0053: CALL_VN2        R0471 (#1f,#03,#0f,#01,#02)
       JUMP            L0055
L0054: STOREW          #1c62,#03,#00
L0055: STORE           G3a,#00
       CALL_VN         R0465 (#17,#64,#1c62)
       JL              #00,#00 [TRUE] L0056
       JL              #00,#10 [TRUE] L0057
L0056: CALL_VN2        R0471 (#1d,#00,#0f,#01,#02)
       JUMP            L0058
L0057: LOADW           #1c62,#00 -> G2b
L0058: JE              G2b,#5b,#5c [FALSE] L0073
       JL              #02,#00 [TRUE] L0059
       JL              #02,#10 [TRUE] L0060
L0059: CALL_VN2        R0471 (#1d,#02,#0f,#01,#02)
       JUMP            L0061
L0060: LOADW           #1c62,#02 -> L00
L0061: JL              #03,#00 [TRUE] L0062
       JL              #03,#10 [TRUE] L0063
L0062: CALL_VN2        R0471 (#1d,#03,#0f,#01,#02)
       PUSH            #00
       JUMP            L0064
L0063: LOADW           #1c62,#03 -> -(SP)
L0064: JL              #02,#00 [TRUE] L0065
       JL              #02,#10 [TRUE] L0067
L0065: CALL_VN2        R0471 (#1f,#02,#0f,#01,#02)
       JZ              (SP)+ [FALSE] L0066
L0066: JUMP            L0068
L0067: STOREW          #1c62,#02,(SP)+
L0068: JL              #03,#00 [TRUE] L0069
       JL              #03,#10 [TRUE] L0070
L0069: CALL_VN2        R0471 (#1f,#03,#0f,#01,#02)
       JUMP            L0071
L0070: STOREW          #1c62,#03,L00
L0071: JE              G2b,#5b [FALSE] L0072
       STORE           G2b,#15
       JUMP            L0073
L0072: STORE           G2b,#16
L0073: JE              G2b,#51 [FALSE] L0080
       JL              #02,#00 [TRUE] L0074
       JL              #02,#10 [TRUE] L0075
L0074: CALL_VN2        R0471 (#1d,#02,#0f,#01,#02)
       PUSH            #00
       JUMP            L0076
L0075: LOADW           #1c62,#02 -> -(SP)
L0076: JE              (SP)+,G13 [FALSE] L0080
       JE              G38,G13 [TRUE] L0080
       JL              #02,#00 [TRUE] L0077
       JL              #02,#10 [TRUE] L0078
L0077: CALL_VN2        R0471 (#1f,#02,#0f,#01,#02)
       JUMP            L0079
L0078: STOREW          #1c62,#02,G38
L0079: STORE           G38,G13
       STORE           G2b,#53
L0080: JE              G2b,#5a [FALSE] L0097
       JL              #02,#00 [TRUE] L0081
       JL              #02,#10 [TRUE] L0082
L0081: CALL_VN2        R0471 (#1d,#02,#0f,#01,#02)
       PUSH            #00
       JUMP            L0083
L0082: LOADW           #1c62,#02 -> -(SP)
L0083: JE              (SP)+,G13 [TRUE] L0097
       JE              G38,G13 [FALSE] L0097
       JL              #02,#00 [TRUE] L0084
       JL              #02,#10 [TRUE] L0085
L0084: CALL_VN2        R0471 (#1d,#02,#0f,#01,#02)
       JUMP            L0086
L0085: LOADW           #1c62,#02 -> G38
L0086: JL              #03,#00 [TRUE] L0087
       JL              #03,#10 [TRUE] L0088
L0087: CALL_VN2        R0471 (#1d,#03,#0f,#01,#02)
       PUSH            #00
       JUMP            L0089
L0088: LOADW           #1c62,#03 -> -(SP)
L0089: JL              #02,#00 [TRUE] L0090
       JL              #02,#10 [TRUE] L0092
L0090: CALL_VN2        R0471 (#1f,#02,#0f,#01,#02)
       JZ              (SP)+ [FALSE] L0091
L0091: JUMP            L0093
L0092: STOREW          #1c62,#02,(SP)+
L0093: JL              #03,#00 [TRUE] L0094
       JL              #03,#10 [TRUE] L0095
L0094: CALL_VN2        R0471 (#1f,#03,#0f,#01,#02)
       JUMP            L0096
L0095: STOREW          #1c62,#03,G13
L0096: STORE           G2b,#15
L0097: JE              G2b,#53,#51,#52 [FALSE] L0098
       STORE           G3d,G4c
L0098: STORE           G3b,#00
       STORE           G43,G42
       STORE           G42,#00
L0099: STORE           G2c,#00
       STORE           G2d,#00
       JL              #01,#00 [TRUE] L0100
       JL              #01,#10 [TRUE] L0101
L0100: CALL_VN2        R0471 (#1d,#01,#0f,#01,#02)
       JUMP            L0102
L0101: LOADW           #1c62,#01 -> L00
L0102: JL              L00,#01 [TRUE] L0105
       JL              #02,#00 [TRUE] L0103
       JL              #02,#10 [TRUE] L0104
L0103: CALL_VN2        R0471 (#1d,#02,#0f,#01,#02)
       JUMP            L0105
L0104: LOADW           #1c62,#02 -> G2c
L0105: JL              L00,#02 [TRUE] L0108
       JL              #03,#00 [TRUE] L0106
       JL              #03,#10 [TRUE] L0107
L0106: CALL_VN2        R0471 (#1d,#03,#0f,#01,#02)
       JUMP            L0108
L0107: LOADW           #1c62,#03 -> G2d
L0108: JE              G2c,#01 [FALSE] L0109
       STORE           G2e,G4c
       JUMP            L0110
L0109: STORE           G2e,G2c
L0110: JE              G2d,#01 [FALSE] L0113
       JE              G2c,#01 [FALSE] L0111
       STORE           G2f,G4d
       JUMP            L0112
L0111: STORE           G2f,G4c
L0112: JUMP            L0114
L0113: STORE           G2f,G2d
L0114: JE              G38,G13 [TRUE] L0120
       CALL_VS         R0091 (G13,#1d) -> L01
       JZ              L01 [FALSE] L0119
       CALL_VS         R0091 (G38,#1d) -> L01
       JZ              L01 [FALSE] L0119
       JE              G2b,#1009 [FALSE] L0118
       JL              #03,#00 [TRUE] L0115
       JL              #03,#10 [TRUE] L0116
L0115: CALL_VN2        R0471 (#1f,#03,#0f,#01,#02)
       JUMP            L0117
L0116: STOREW          #1c62,#03,G38
L0117: STORE           G38,G13
       STORE           G2b,#52
       JUMP            L0099
L0118: CALL_VS         R0087 (G38,#1003) -> -(SP)
       JZ              (SP)+ [FALSE] L0119
       CALL_VN         R0285 (#1003,#01,G38)
L0119: JUMP            L0137
L0120: JZ              L00 [TRUE] L0122
       JE              L00,#01 [FALSE] L0121
       JZ              G2c [FALSE] L0122
L0121: JE              L00,#02 [FALSE] L0123
       JZ              G2c [TRUE] L0123
       JZ              G2d [TRUE] L0123
L0122: CALL_VN2        R0465 (Geb,#0067,G2b,G2e,G2f,#00)
       JUMP            L0137
L0123: STORE           G3b,#01
       JL              #00,#00 [TRUE] L0124
       JL              #00,#40 [TRUE] L0125
L0124: CALL_VN2        R0471 (#1d,#00,#3f,#01,#03)
       JUMP            L0126
L0125: LOADW           #1c82,#00 -> L01
L0126: JZ              L01 [FALSE] L0127
       CALL_VN         R0285 (#1007,#02)
       JUMP            L0043
L0127: JZ              G3c [TRUE] L0128
       STORE           G3c,#00
       CALL_VN         R0285 (#1007,#01)
L0128: STORE           L00,G00
       STORE           L02,#01
L0129: JG              L02,L01 [TRUE] L0137
       JZ              G14 [TRUE] L0130
       JUMP            L0137
L0130: JE              G00,L00 [TRUE] L0131
       CALL_VN         R0285 (#1007,#33)
       JUMP            L0137
L0131: JL              L02,#00 [TRUE] L0132
       JL              L02,#40 [TRUE] L0133
L0132: CALL_VN2        R0471 (#1d,L02,#3f,#01,#03)
       JUMP            L0134
L0133: LOADW           #1c82,L02 -> L03
L0134: CALL_2N         R0075 (L03)
       CALL_2N         R0119 (L03)
       PRINT           ": "
       JZ              G2c [FALSE] L0135
       STORE           G2c,L03
       CALL_VN2        R0465 (Geb,#0067,G2b,L03,G2f,#00)
       STORE           G2c,#00
       JUMP            L0136
L0135: STORE           G2d,L03
       CALL_VN2        R0465 (Geb,#0067,G2b,G2e,L03,#00)
       STORE           G2d,#00
L0136: INC             L02
       JUMP            L0129
L0137: JE              G42,#01 [FALSE] L0138
       CALL_1N         R0082
       JUMP            L0040
L0138: JZ              G3a [TRUE] L0139
       JUMP            L0040
L0139: JZ              G14 [FALSE] L0140
       CALL_VN         R0465 (Geb,#0066)
L0140: JUMP            L0040
L0141: JE              G14,#02 [TRUE] L0142
       CALL_1N         R0449
L0142: JZ              G14 [FALSE] L0143
       JUMP            L0041
L0143: PRINT           "

    "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "***"
       JE              G14,#01 [FALSE] L0144
       CALL_VN         R0285 (#1007,#03)
L0144: JE              G14,#02 [FALSE] L0145
       CALL_VN         R0285 (#1007,#04)
L0145: JG              G14,#02 [FALSE] L0146
       PRINT           " "
       CALL_1N         R0445
       PRINT           " "
L0146: PRINT           "***"
       SET_TEXT_STYLE  ROMAN
       PRINT           "


"
       CALL_1N         R0161
       CALL_1N         R0097
       CALL_1N         R0080
       RFALSE          

Routine R0077, 2 locals

       INC             G09
       JE              G0a,#ffff [TRUE] L0003
       JL              G0b,#00 [TRUE] L0001
       ADD             G0a,G0b -> G0a
       JUMP            L0002
L0001: DEC             G0c
       JZ              G0c [FALSE] L0002
       INC             G0a
       SUB             #00,G0b -> G0c
L0002: MOD             G0a,#05a0 -> G0a
L0003: AND             G29,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       STORE           L00,#00
L0004: JL              L00,G0d [FALSE] L0014
       JL              L00,#00 [TRUE] L0005
       JL              L00,#20 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,L00,#1f,#01,#01)
       JUMP            L0007
L0006: LOADW           #1c22,L00 -> L01
L0007: JZ              L01 [TRUE] L0013
       AND             L01,#7fff -> -(SP)
       CALL_2N         R0119 ((SP)+)
       PRINT           ": "
       AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       PRINT           "daemon"
       JUMP            L0012
L0008: PRINT           "timer with "
       JG              #01,L01 [TRUE] L0009
       JG              L01,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L01
L0011: GET_PROP        Gee,#28 -> Gef
       PUSH            Gef
       PRINT_NUM       (SP)+
       PRINT           " turns to go"
L0012: NEW_LINE        
L0013: INC             L00
       JUMP            L0004
L0014: STORE           L00,#00
L0015: JL              L00,G0d [FALSE] L0029
       JZ              G14 [TRUE] L0016
       RTRUE           
L0016: JL              L00,#00 [TRUE] L0017
       JL              L00,#20 [TRUE] L0018
L0017: CALL_VN2        R0471 (#1d,L00,#1f,#01,#01)
       JUMP            L0019
L0018: LOADW           #1c22,L00 -> L01
L0019: JZ              L01 [TRUE] L0028
       AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       AND             L01,#7fff -> -(SP)
       CALL_VN         R0091 ((SP)+,#2b)
       JUMP            L0028
L0020: JG              #01,L01 [TRUE] L0021
       JG              L01,#0082 [FALSE] L0022
L0021: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,L01
L0023: GET_PROP        Gee,#28 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0024
       CALL_2N         R0094 (L01)
       CALL_VN         R0091 (L01,#2a)
       JUMP            L0028
L0024: JG              #01,L01 [TRUE] L0025
       JG              L01,#0082 [FALSE] L0026
L0025: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L01
L0027: GET_PROP        Gee,#28 -> Gef
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0481 (L01,#28,(SP)+)
L0028: INC             L00
       JUMP            L0015
L0029: JZ              G14 [TRUE] L0030
       RTRUE           
L0030: STORE           G6d,#02
       STORE           G7b,#00
       CALL_2N         R0049 (G00)
       CALL_2S         R0025 (G13) -> -(SP)
       CALL_VN         R0046 ((SP)+,G13,#00)
       STORE           G6d,#00
       JZ              G14 [TRUE] L0031
       RTRUE           
L0031: CALL_1N         R0128
       JZ              G14 [TRUE] L0032
       RTRUE           
L0032: CALL_1N         R0100
       JZ              G14 [TRUE] L0033
       RTRUE           
L0033: CALL_1N         R0082
       RFALSE          

Routine R0078, 7 locals

       STORE           L04,G2b
       STORE           L05,G2e
       STORE           L06,G2f
       STORE           G2b,L00
       STORE           G2e,L01
       STORE           G2f,L02
       AND             G29,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_2N         R0108 (L03)
L0001: JZ              G3a [FALSE] L0002
       CALL_1S         R0085 -> -(SP)
       JZ              (SP)+ [FALSE] L0003
L0002: JL              G2b,#1000 [FALSE] L0003
       CALL_1N         R0079
L0003: STORE           G2b,L04
       STORE           G2e,L05
       STORE           G2f,L06
       RFALSE          

Routine R0079, 0 locals

       CALL_VS         R0484 (#2cb3,G2b) -> -(SP)
       CALL_1N         (SP)+
       RTRUE           

Routine R0080, 1 local

L0001: CALL_VN         R0285 (#1007,#05)
L0002: PRINT           "> "
       STORE           Gef,#00
       STORE           Gec,#1fe2
       STOREB          Gec,#01,#00
       CALL_1N         R0113
       READ            Gec,#205b -> Gef
       JL              #01,#00 [TRUE] L0003
       JL              #01,#20 [TRUE] L0004
L0003: CALL_VN2        R0471 (#1d,#01,#40,#08,#0e)
       JUMP            L0005
L0004: LOADW           #205b,#01 -> L00
L0005: JE              L00,"q","quit" [FALSE] L0006
       QUIT            
L0006: JE              L00,"restart" [FALSE] L0007
       RESTART         
L0007: JE              L00,"restore" [FALSE] L0008
       CALL_1N         R0152
       JUMP            L0001
L0008: JE              L00,"fullscore","full" [FALSE] L0009
       JZ              #01 [TRUE] L0009
       NEW_LINE        
       CALL_1N         R0164
       JUMP            L0001
L0009: JE              G14,#02 [FALSE] L0010
       JE              L00,"amusing" [FALSE] L0010
       JZ              #0001 [FALSE] L0010
       NEW_LINE        
       CALL_1N         R0444
       JUMP            L0001
L0010: JE              L00,"undo","undo","undo" [FALSE] L0015
       JZ              G05 [FALSE] L0011
       CALL_VN         R0285 (#1007,#06)
       JUMP            L0001
L0011: JE              G05,#01 [FALSE] L0012
       JUMP            L0013
L0012: RESTORE_UNDO    -> L00
       JZ              L00 [FALSE] L0014
L0013: CALL_VN         R0285 (#1007,#07)
L0014: JUMP            L0001
L0015: CALL_VN         R0285 (#1007,#08)
       JUMP            L0002

Routine R0081, 5 locals

       STORE           L03,G2c
       STORE           L04,G2d
       STORE           G2c,L01
       STORE           G2d,L02
       CALL_VN2        R0465 (#18,#67,L00,L01,L02,#01)
       STORE           G2c,L03
       STORE           G2d,L04
       RTRUE           

Routine R0082, 1 local

       STORE           L00,#01
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#02,L00)
       JUMP            L0009
L0003: JIN             L00,G13 [FALSE] L0009
       JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#0e [TRUE] L0009
L0006: CALL_VN         R0479 (L00,#0e)
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#14 [FALSE] L0009
       ADD             G0e,#0004 -> G0e
       ADD             G12,#0004 -> G12
L0009: INC             L00
       JG              L00,#0082 [TRUE] L0010
       JUMP            L0001
L0010: RTRUE           

Routine R0083, 7 locals

       STORE           L05,G35
       STORE           L06,G36
       STORE           G35,L00
       STORE           G36,#00
       STORE           L02,G38
       STORE           L03,G39
       STORE           L04,G6d
       STORE           G6d,#06
       JZ              L01 [FALSE] L0001
       STORE           G38,G13
       JUMP            L0002
L0001: STORE           G38,L01
L0002: CALL_2S         R0025 (G38) -> G39
       CALL_VN         R0046 (G39,G38,#00)
       STORE           G6d,L04
       STORE           G38,L02
       STORE           G39,L03
       STORE           G35,L05
       STORE           L05,G36
       STORE           G36,L06
       RET             L05

Routine R0084, 6 locals

       STORE           L02,G35
       STORE           L03,G6d
       STORE           L04,G38
       STORE           L05,G39
       STORE           G35,L00
       JZ              L01 [FALSE] L0001
       STORE           G38,G13
       JUMP            L0002
L0001: STORE           G38,L01
L0002: CALL_2S         R0025 (G38) -> G39
       STORE           G6d,#05
       CALL_VN         R0046 (G39,G38,#00)
       STORE           G35,L02
       STORE           G6d,L03
       STORE           G38,L04
       STORE           G39,L05
       RTRUE           

Routine R0085, 0 locals

       CALL_1S         R0450 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       CALL_VS         R0091 (G13,#1d) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JZ              G00 [TRUE] L0001
       CALL_VS         R0091 (G00,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: STORE           G6d,#03
       STORE           G35,#00
       CALL_2S         R0025 (G13) -> -(SP)
       CALL_VN         R0046 ((SP)+,G13,#00)
       STORE           G6d,#00
       JZ              G35 [FALSE] RTRUE
       JG              G2c,#01 [FALSE] L0002
       CALL_VS         R0091 (G2c,#04) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: RFALSE          

Routine R0086, 0 locals

       STORE           G6d,#04
       STORE           G35,#00
       CALL_2S         R0025 (G13) -> -(SP)
       CALL_VN         R0046 ((SP)+,G13,#00)
       STORE           G6d,#00
       JZ              G35 [FALSE] RTRUE
       JZ              G00 [TRUE] L0001
       CALL_VS         R0091 (G00,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0001: JG              G2c,#01 [FALSE] L0002
       CALL_VS         R0091 (G2c,#05) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0002: CALL_1S         R0451 -> -(SP)
       RET_POPPED      

Routine R0087, 2 locals

       AND             G29,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VN         R0108 (#02,L01)
L0001: STORE           G31,L01
       CALL_VS         R0091 (L00,#06) -> -(SP)
       RET_POPPED      

Routine R0088, 1 local

       CALL_VS         R0474 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0001
       RFALSE          
L0001: JE              Gef,#02,#01 [FALSE] L0002
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       RET             #02
L0003: JE              Gef,#04 [FALSE] L0004
       RET             #03
L0004: RTRUE           

Routine R0089, 3 locals

       CALL_VS         R0467 (L00,L01) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0001
       CALL_VS         R0091 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0464 (L00,L01) -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       CALL_VS         R0464 (L00,L01) -> -(SP)
       CALL_VS         R0474 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#01,#02,#00 [FALSE] L0002
       CALL_VS         R0133 (#02,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JE              Gef,#04 [FALSE] L0004
       CALL_VS         R0464 (L00,L01) -> -(SP)
       CALL_2N         R0489 ((SP)+)
       JZ              L02 [FALSE] L0003
       NEW_LINE        
L0003: RTRUE           
L0004: JE              Gef,#03 [FALSE] L0005
       CALL_VS         R0091 (L00,L01) -> -(SP)
       RET_POPPED      
L0005: RTRUE           

Routine R0090, 2 locals

       CALL_VS         R0464 (L00,L01) -> -(SP)
       JL              (SP)+,#0100 [FALSE] L0001
       CALL_VS         R0464 (L00,L01) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0091 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0091, 2 locals

       JE              L00,#15 [FALSE] L0001
       JE              L01,#1e,#2e,#23 [TRUE] L0001
       STORE           L00,G16
L0001: CALL_VS         R0466 (L00,L01) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0465 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0092, 4 locals

       LOADW           #00,#05 -> L02
       SUB             L00,#01 -> L03
       STOREW          L02,L03,L01
       RTRUE           

Routine R0093, 3 locals

       STORE           L02,#00
L0001: JL              L02,G0d [FALSE] L0005
       JL              L02,#00 [TRUE] L0002
       JL              L02,#20 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L02,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1c22,L02 -> -(SP)
L0004: JE              (SP)+,L00 [TRUE] RFALSE
       INC             L02
       JUMP            L0001
L0005: STORE           L02,#00
L0006: JL              L02,G0d [FALSE] L0011
       JL              L02,#00 [TRUE] L0007
       JL              L02,#20 [TRUE] L0008
L0007: CALL_VN2        R0471 (#1d,L02,#1f,#01,#01)
       PUSH            #00
       JUMP            L0009
L0008: LOADW           #1c22,L02 -> -(SP)
L0009: JZ              (SP)+ [FALSE] L0010
       JUMP            L0012
L0010: INC             L02
       JUMP            L0006
L0011: STORE           L02,G0d
       INC             G0d
       JL              L02,#20 [TRUE] L0012
       CALL_2N         R0133 (#04)
       RTRUE           
L0012: JG              #01,L00 [TRUE] L0013
       JG              L00,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0015
L0014: STORE           Gee,L00
L0015: GET_PROP_ADDR   Gee,#28 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0016
       CALL_VN         R0133 (#05,L00)
       RTRUE           
L0016: JL              L02,#00 [TRUE] L0017
       JL              L02,#20 [TRUE] L0018
L0017: CALL_VN2        R0471 (#1f,L02,#1f,#01,#01)
       JUMP            L0019
L0018: STOREW          #1c22,L02,L00
L0019: CALL_VN         R0481 (L00,#28,L01)
       RTRUE           

Routine R0094, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0d [FALSE] L0006
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1c22,L01 -> -(SP)
L0004: JE              (SP)+,L00 [FALSE] L0005
       JUMP            L0007
L0005: INC             L01
       JUMP            L0001
L0006: RFALSE          
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L00
L0010: GET_PROP_ADDR   Gee,#28 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0011
       CALL_VN         R0133 (#05,L00)
       RTRUE           
L0011: JL              L01,#00 [TRUE] L0012
       JL              L01,#20 [TRUE] L0013
L0012: CALL_VN2        R0471 (#1f,L01,#1f,#01,#01)
       JUMP            L0014
L0013: STOREW          #1c22,L01,#00
L0014: CALL_VN         R0481 (L00,#28,#00)
       RTRUE           

Routine R0095, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0d [FALSE] L0005
       ADD             #8000,L00 -> -(SP)
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1c22,L01 -> -(SP)
L0004: JE              (SP)+,(SP)+ [TRUE] RFALSE
       INC             L01
       JUMP            L0001
L0005: STORE           L01,#00
L0006: JL              L01,G0d [FALSE] L0011
       JL              L01,#00 [TRUE] L0007
       JL              L01,#20 [TRUE] L0008
L0007: CALL_VN2        R0471 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0009
L0008: LOADW           #1c22,L01 -> -(SP)
L0009: JZ              (SP)+ [FALSE] L0010
       JUMP            L0012
L0010: INC             L01
       JUMP            L0006
L0011: STORE           L01,G0d
       INC             G0d
       JL              L01,#20 [TRUE] L0012
       CALL_2N         R0133 (#04)
L0012: ADD             #8000,L00 -> -(SP)
       JL              L01,#00 [TRUE] L0013
       JL              L01,#20 [TRUE] L0015
L0013: CALL_VN2        R0471 (#1f,L01,#1f,#01,#01)
       JZ              (SP)+ [FALSE] L0014
L0014: JUMP            L0016
L0015: STOREW          #1c22,L01,(SP)+
L0016: RTRUE           

Routine R0096, 2 locals

       STORE           L01,#00
L0001: JL              L01,G0d [FALSE] L0006
       ADD             #8000,L00 -> -(SP)
       JL              L01,#00 [TRUE] L0002
       JL              L01,#20 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L01,#1f,#01,#01)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1c22,L01 -> -(SP)
L0004: JE              (SP)+,(SP)+ [FALSE] L0005
       JUMP            L0007
L0005: INC             L01
       JUMP            L0001
L0006: RFALSE          
L0007: JL              L01,#00 [TRUE] L0008
       JL              L01,#20 [TRUE] L0009
L0008: CALL_VN2        R0471 (#1f,L01,#1f,#01,#01)
       JUMP            L0010
L0009: STOREW          #1c22,L01,#00
L0010: RTRUE           

Routine R0097, 0 locals

       JE              G0a,#ffff [FALSE] L0001
       STORE           G01,G0e
       STORE           G02,G09
       JUMP            L0002
L0001: DIV             G0a,#3c -> G01
       MOD             G0a,#3c -> G02
L0002: RTRUE           

Routine R0098, 2 locals

       STORE           G0a,L00
       STORE           G0b,L01
       STORE           G0c,#00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L01 -> G0c
L0001: RTRUE           

Routine R0099, 0 locals

       PRINT           "
["
       SUB             G0e,G0f -> -(SP)
       CALL_VN         R0285 (#1007,#32,(SP)+)
       PRINT           ".]
"
       RTRUE           

Routine R0100, 2 locals

       STORE           L01,G15
       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0101 ((SP)+) -> G15
       JZ              L01 [FALSE] L0004
       JE              G15,#01 [FALSE] L0004
       STORE           G00,G16
       JZ              L00 [FALSE] L0004
       CALL_2N         R0081 (#1f)
L0004: JE              L01,#01 [FALSE] L0005
       JZ              G15 [FALSE] L0005
       STORE           G16,G00
       STORE           G00,#15
       JZ              L00 [FALSE] L0005
       CALL_1N         R0197
       CALL_VS         R0285 (#1007,#09) -> -(SP)
       RET_POPPED      
L0005: JZ              L01 [FALSE] L0006
       JZ              G15 [FALSE] L0006
       STORE           G00,#15
L0006: RTRUE           

Routine R0101, 2 locals

       JZ              L00 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#0b [TRUE] RTRUE
L0003: JG              #05,L00 [TRUE] L0004
       JG              L00,#0082 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_CHILD       Gee -> -(SP) [FALSE] L0007
L0007: PULL            L01
       JZ              L01 [TRUE] L0012
L0008: CALL_2S         R0103 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              #05,L01 [TRUE] L0009
       JG              L01,#0082 [TRUE] L0009
       JIN             L01,"Class" [FALSE] L0010
L0009: CALL_VN         R0471 (#0d,L01)
       JUMP            L0012
L0010: JIN             L01,L00 [TRUE] L0011
       CALL_VN         R0471 (#20,L01)
       JUMP            L0012
L0011: GET_SIBLING     L01 -> L01 [TRUE] L0008
L0012: JG              #01,L00 [TRUE] L0013
       JG              L00,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#03,L00)
       JUMP            L0025
L0014: TEST_ATTR       L00,#06 [FALSE] L0025
       JG              #01,L00 [TRUE] L0015
       JG              L00,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L00)
       JUMP            L0017
L0016: TEST_ATTR       L00,#10 [TRUE] L0020
L0017: JG              #01,L00 [TRUE] L0018
       JG              L00,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L00)
       JUMP            L0024
L0019: TEST_ATTR       L00,#19 [FALSE] L0024
L0020: JG              #05,L00 [TRUE] L0021
       JG              L00,#0082 [TRUE] L0021
       JIN             L00,"Class" [FALSE] L0022
L0021: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,L00
L0023: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0101 ((SP)+) -> -(SP)
       RET_POPPED      
L0024: JUMP            L0038
L0025: JG              #01,L00 [TRUE] L0026
       JG              L00,#0082 [FALSE] L0027
L0026: CALL_VN         R0471 (#03,L00)
       JUMP            L0028
L0027: TEST_ATTR       L00,#09 [TRUE] L0034
L0028: JG              #01,L00 [TRUE] L0029
       JG              L00,#0082 [FALSE] L0030
L0029: CALL_VN         R0471 (#03,L00)
       JUMP            L0031
L0030: TEST_ATTR       L00,#19 [TRUE] L0034
L0031: JG              #01,L00 [TRUE] L0032
       JG              L00,#0082 [FALSE] L0033
L0032: CALL_VN         R0471 (#03,L00)
       JUMP            L0038
L0033: TEST_ATTR       L00,#16 [FALSE] L0038
L0034: JG              #05,L00 [TRUE] L0035
       JG              L00,#0082 [TRUE] L0035
       JIN             L00,"Class" [FALSE] L0036
L0035: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0037
L0036: STORE           Gee,L00
L0037: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0101 ((SP)+) -> -(SP)
       RET_POPPED      
L0038: RFALSE          

Routine R0102, 1 local

       JE              L00,G13 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#19 [TRUE] RFALSE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#16 [TRUE] RFALSE
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0008: TEST_ATTR       L00,#06 [FALSE] L0013
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#10 [FALSE] L0011
       PUSH            #00
       JUMP            L0012
L0011: PUSH            #01
L0012: RET_POPPED      
L0013: JG              #01,L00 [TRUE] L0014
       JG              L00,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,L00)
       JUMP            L0016
L0015: TEST_ATTR       L00,#09 [FALSE] L0016
       PUSH            #00
       JUMP            L0017
L0016: PUSH            #01
L0017: RET_POPPED      

Routine R0103, 3 locals

       JZ              L00 [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#0b [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#09 [TRUE] L0007
L0006: CALL_2S         R0047 (L00) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0016
L0007: CALL_2S         R0102 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0016
       JG              #05,L00 [TRUE] L0008
       JG              L00,#0082 [TRUE] L0008
       JIN             L00,"Class" [FALSE] L0009
L0008: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L00
L0010: GET_CHILD       Gee -> -(SP) [FALSE] L0011
L0011: PULL            L01
       JZ              L01 [TRUE] L0016
L0012: CALL_2S         R0103 (L01) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              #05,L01 [TRUE] L0013
       JG              L01,#0082 [TRUE] L0013
       JIN             L01,"Class" [FALSE] L0014
L0013: CALL_VN         R0471 (#0d,L01)
       JUMP            L0016
L0014: JIN             L01,L00 [TRUE] L0015
       CALL_VN         R0471 (#20,L01)
       JUMP            L0016
L0015: GET_SIBLING     L01 -> L01 [TRUE] L0012
L0016: JG              #01,L00 [TRUE] L0017
       JG              L00,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,L00
L0019: GET_PROP_ADDR   Gee,#18 -> Gef
       STORE           L02,Gef
       JG              #05,L00 [TRUE] L0020
       JG              L00,#0082 [TRUE] L0020
       JIN             L00,"Class" [FALSE] L0021
L0020: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L00
L0022: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       JZ              L02 [TRUE] L0029
       CALL_VS         R0484 (L02,#00) -> -(SP)
       CALL_VS         R0474 ((SP)+) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0023
       STORE           G72,#00
       STORE           G71,#01
       CALL_VN         R0091 (L00,#18)
       STORE           G71,#00
       JE              G72,#01 [TRUE] RTRUE
       JUMP            L0029
L0023: STORE           L01,#00
L0024: JG              #01,L00 [TRUE] L0025
       JG              L00,#0082 [FALSE] L0026
L0025: CALL_VN         R0471 (#16,L00)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L00
L0027: GET_PROP_ADDR   Gee,#18 -> Gef
       JZ              Gef [TRUE] L0028
       GET_PROP_LEN    Gef -> Gef
L0028: PUSH            Gef
       MUL             #02,L01 -> -(SP)
       JL              (SP)+,(SP)+ [FALSE] L0029
       CALL_VS         R0484 (L02,L01) -> -(SP)
       CALL_2S         R0103 ((SP)+) -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       INC             L01
       JUMP            L0024
L0029: RFALSE          

Routine R0104, 3 locals

       JE              G38,G13 [FALSE] L0001
       STORE           G38,L00
L0001: CALL_VN         R0480 (G13,#19)
       CALL_VN         R0480 (G13,#05)
       STORE           L02,L00
L0002: JG              #05,L02 [TRUE] L0003
       JG              L02,#0082 [TRUE] L0003
       JIN             L02,"Class" [FALSE] L0004
L0003: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,L02
L0005: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       JG              #01,L02 [TRUE] L0006
       JG              L02,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,L02)
       JUMP            L0008
L0007: TEST_ATTR       L02,#02 [FALSE] L0008
       CALL_VN         R0479 (L02,#19)
L0008: JG              #05,L02 [TRUE] L0009
       JG              L02,#0082 [TRUE] L0009
       JIN             L02,"Class" [FALSE] L0010
L0009: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L02
L0011: GET_PARENT      Gee -> L02
       JUMP            L0002
L0012: JE              G13,#16 [FALSE] L0013
       CALL_VN         R0481 (G13,#2e,S029)
L0013: STORE           G13,L00
       JE              G13,#16 [FALSE] L0014
       CALL_VN         R0481 (G13,#2e,#ffff)
L0014: CALL_VN         R0479 (G13,#19)
       CALL_VN         R0479 (G13,#05)
       CALL_VN         R0479 (G13,#02)
       CALL_VN         R0479 (G13,#12)
       STORE           L02,G13
L0015: JG              #05,L02 [TRUE] L0016
       JG              L02,#0082 [TRUE] L0016
       JIN             L02,"Class" [FALSE] L0017
L0016: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L02
L0018: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       JG              #05,L02 [TRUE] L0019
       JG              L02,#0082 [TRUE] L0019
       JIN             L02,"Class" [FALSE] L0020
L0019: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,L02
L0021: GET_PARENT      Gee -> L02
       JUMP            L0015
L0022: STORE           G00,L02
       STORE           G16,G00
       CALL_1N         R0146
       JG              #05,G13 [TRUE] L0023
       JG              G13,#0082 [TRUE] L0023
       JIN             G13,"Class" [FALSE] L0024
L0023: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0025
L0024: STORE           Gee,G13
L0025: GET_PARENT      Gee -> -(SP)
       CALL_2S         R0101 ((SP)+) -> G15
       JZ              G15 [FALSE] L0026
       STORE           G00,#15
L0026: STORE           G19,L01
       RTRUE           

Routine R0105, 4 locals

       CALL_VS         R0484 (#00,#04) -> L01
       CALL_VS         R0483 (L01,#00) -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       ADD             (SP)+,#01 -> L01
       CALL_VS         R0483 (L01,#00) -> L03
       ADD             L01,#01 -> -(SP)
       CALL_VS         R0484 ((SP)+,#00) -> L02
       ADD             L01,#03 -> -(SP)
       SUB             L00,(SP)+ -> L01
       PRINT_NUM       L00
       JL              L00,#01 [TRUE] L0001
       JG              L00,G03 [TRUE] L0001
       PRINT           " ("
       CALL_2N         R0119 (L00)
       PRINT           ")"
L0001: STORE           Gef,L01
       STORE           Gee,L03
       JZ              Gee [FALSE] L0002
       CALL_VN         R0471 (#14)
       INC             Gee
L0002: MOD             Gef,Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       STORE           Gef,L01
       STORE           Gee,L03
       JZ              Gee [FALSE] L0003
       CALL_VN         R0471 (#14)
       INC             Gee
L0003: DIV             Gef,Gee -> -(SP)
       JL              (SP)+,L02 [FALSE] L0004
       PRINT           " ('"
       CALL_2N         R0488 (L00)
       PRINT           "')"
L0004: RTRUE           

Routine R0106, 2 locals

       JL              L00,#1000 [TRUE] L0001
       PRINT           "<fake action "
       SUB             L00,#1000 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           ">"
       RTRUE           
L0001: STORE           L01,#1516
       CALL_VS         R0484 (L01,#00) -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       ADD             (SP)+,#60 -> L01
       CALL_VS         R0484 (L01,L00) -> -(SP)
       CALL_2N         R0489 ((SP)+)
       RTRUE           

Routine R0107, 2 locals

       JL              L00,#00 [TRUE] L0001
       JL              L00,#30 [TRUE] L0002
L0001: PRINT           "<invalid attribute "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0003
L0002: STORE           L01,#1516
       CALL_VS         R0484 (L01,#00) -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> L01
       CALL_VS         R0484 (L01,L00) -> -(SP)
       CALL_2N         R0489 ((SP)+)
L0003: RTRUE           

Routine R0108, 2 locals

       JL              L00,#02 [FALSE] L0001
       PRINT           "[ Action "
       CALL_2N         R0106 (G2b)
       JUMP            L0003
L0001: JE              L01,#1003 [FALSE] L0002
       PRINT           "[ Order to "
       CALL_2N         R0119 (G38)
       PRINT           ": "
       CALL_2N         R0106 (G2b)
       JUMP            L0003
L0002: PRINT           "[ Life rule "
       CALL_2N         R0106 (L01)
L0003: JZ              G2e [TRUE] L0004
       PRINT           " with noun "
       CALL_2N         R0105 (G2e)
L0004: JZ              G2f [TRUE] L0005
       PRINT           " and second "
       CALL_2N         R0105 (G2f)
L0005: JZ              L00 [FALSE] L0006
       PRINT           " "
L0006: JE              L00,#01 [FALSE] L0007
       PRINT           " (from < > statement) "
L0007: PRINT           "]
"
       RTRUE           

Routine R0109, 1 local

       CALL_2N         R0018 (L00)
       STORE           Gef,G55
       JE              Gef,#00 [FALSE] L0001
       PRINT           "<illegal token number "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0018
L0001: JE              Gef,#01 [FALSE] L0013
       STORE           Gef,G56
       JE              Gef,#00 [FALSE] L0002
       PRINT           "noun"
       JUMP            L0012
L0002: JE              Gef,#01 [FALSE] L0003
       PRINT           "held"
       JUMP            L0012
L0003: JE              Gef,#02 [FALSE] L0004
       PRINT           "multi"
       JUMP            L0012
L0004: JE              Gef,#03 [FALSE] L0005
       PRINT           "multiheld"
       JUMP            L0012
L0005: JE              Gef,#04 [FALSE] L0006
       PRINT           "multiexcept"
       JUMP            L0012
L0006: JE              Gef,#05 [FALSE] L0007
       PRINT           "multiinside"
       JUMP            L0012
L0007: JE              Gef,#06 [FALSE] L0008
       PRINT           "creature"
       JUMP            L0012
L0008: JE              Gef,#07 [FALSE] L0009
       PRINT           "special"
       JUMP            L0012
L0009: JE              Gef,#08 [FALSE] L0010
       PRINT           "number"
       JUMP            L0012
L0010: JE              Gef,#09 [FALSE] L0011
       PRINT           "topic"
       JUMP            L0012
L0011: JE              Gef,#0f [FALSE] L0012
       PRINT           "END"
L0012: JUMP            L0018
L0013: JE              Gef,#02 [FALSE] L0014
       PRINT           "'"
       CALL_2N         R0488 (G56)
       PRINT           "'"
       JUMP            L0018
L0014: JE              Gef,#03 [FALSE] L0015
       PRINT           "noun=Routine("
       PRINT_NUM       G56
       PRINT           ")"
       JUMP            L0018
L0015: JE              Gef,#04 [FALSE] L0016
       CALL_2N         R0107 (G56)
       JUMP            L0018
L0016: JE              Gef,#05 [FALSE] L0017
       PRINT           "scope=Routine("
       PRINT_NUM       G56
       PRINT           ")"
       JUMP            L0018
L0017: JE              Gef,#06 [FALSE] L0018
       PRINT           "Routine("
       PRINT_NUM       G56
       PRINT           ")"
L0018: RTRUE           

Routine R0110, 1 local

       PRINT           " * "
L0001: JL              L00,#00 [TRUE] L0002
       JL              L00,#20 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1d,L00,#1f,#01,#09)
       PUSH            #00
       JUMP            L0004
L0003: LOADW           #1e22,L00 -> -(SP)
L0004: JE              (SP)+,#0f [TRUE] L0012
       JL              L00,#00 [TRUE] L0005
       JL              L00,#20 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1d,L00,#1f,#01,#09)
       PUSH            #00
       JUMP            L0007
L0006: LOADW           #1e22,L00 -> -(SP)
L0007: CALL_VS         R0483 ((SP)+,#00) -> -(SP)
       AND             (SP)+,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       PRINT           "/ "
L0008: JL              L00,#00 [TRUE] L0009
       JL              L00,#20 [TRUE] L0010
L0009: CALL_VN2        R0471 (#1d,L00,#1f,#01,#09)
       PUSH            #00
       JUMP            L0011
L0010: LOADW           #1e22,L00 -> -(SP)
L0011: CALL_2N         R0109 ((SP)+)
       PRINT           " "
       INC             L00
       JUMP            L0001
L0012: PRINT           "-> "
       CALL_2N         R0106 (G52)
       JZ              G53 [TRUE] L0013
       PRINT           " reverse"
L0013: RTRUE           

Routine R0111, 6 locals
    Action routine for:
        "showverb special"

       CALL_VS         R0483 (G2e,#06) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S124
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0483 (G2e,#06) -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       DIV             (SP)+,#02 -> L03
       CALL_VS         R0483 (G2e,#07) -> -(SP)
       SUB             #ff,(SP)+ -> L04
       CALL_VS         R0484 (#00,#07) -> -(SP)
       CALL_VS         R0484 ((SP)+,L04) -> L00
       CALL_VS         R0483 (L00,#00) -> L01
       INC             L00
       PRINT           "Verb "
       JZ              L03 [TRUE] L0002
       PRINT           "meta "
L0002: CALL_VS         R0484 (#00,#04) -> L02
       STORE           L05,#00
L0003: ADD             L02,#05 -> -(SP)
       CALL_VS         R0484 ((SP)+,#00) -> -(SP)
       JL              L05,(SP)+ [FALSE] L0005
       SUB             #ff,L04 -> -(SP)
       MUL             L05,#09 -> -(SP)
       ADD             (SP)+,#0e -> -(SP)
       CALL_VS         R0483 (L02,(SP)+) -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0004
       PRINT           "'"
       MUL             #09,L05 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#07 -> -(SP)
       CALL_2N         R0488 ((SP)+)
       PRINT           "' "
L0004: INC             L05
       JUMP            L0003
L0005: NEW_LINE        
       JZ              L01 [FALSE] L0006
       PRINT_RET       "has no grammar lines."
L0006: JG              L01,#00 [FALSE] L0007
       CALL_2S         R0019 (L00) -> L00
       PRINT           "    "
       CALL_1N         R0110
       NEW_LINE        
       DEC             L01
       JUMP            L0006
L0007: RTRUE           

Routine R0112, 6 locals
    Action routine for:
        "showobj"
        "showobj multi"

       JZ              G2e [FALSE] L0001
       STORE           G2e,G00
L0001: STORE           L00,#01
L0002: CALL_VS         R0469 (L00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VS         R0469 (G2e,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       INC             L01
       STORE           L02,L00
L0003: INC             L00
       JG              L00,#0082 [TRUE] L0004
       JUMP            L0002
L0004: JE              L01,#01 [FALSE] L0005
       CALL_2N         R0119 (L02)
       PRINT           " ""
       JUMP            L0006
L0005: PRINT           "Object ""
L0006: CALL_2N         R0119 (G2e)
       PRINT           "" ("
       PRINT_NUM       G2e
       PRINT           ")"
       JG              #05,G2e [TRUE] L0007
       JG              G2e,#0082 [TRUE] L0007
       JIN             G2e,"Class" [FALSE] L0008
L0007: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,G2e
L0009: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       PRINT           " in ""
       JG              #05,G2e [TRUE] L0010
       JG              G2e,#0082 [TRUE] L0010
       JIN             G2e,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,G2e
L0012: GET_PARENT      Gee -> -(SP)
       CALL_2N         R0119 ((SP)+)
       PRINT           """
L0013: NEW_LINE        
       JG              L01,#01 [FALSE] L0017
       PRINT           "  class "
       STORE           L00,#01
L0014: CALL_VS         R0469 (L00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       CALL_VS         R0469 (G2e,L00) -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       CALL_2N         R0119 (L00)
       PRINT           " "
L0015: INC             L00
       JG              L00,#0082 [TRUE] L0016
       JUMP            L0014
L0016: NEW_LINE        
L0017: STORE           L03,#00
       STORE           L01,#00
L0018: JL              L03,#30 [FALSE] L0025
       JG              #01,G2e [TRUE] L0019
       JG              G2e,#0082 [FALSE] L0020
L0019: CALL_VN         R0471 (#03,G2e)
       JUMP            L0024
L0020: STORE           Gef,G2e
       STORE           Gee,L03
       JL              Gee,#00 [TRUE] L0021
       JL              Gee,#30 [TRUE] L0022
L0021: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0023
L0022: TEST_ATTR       G2e,L03 [FALSE] L0024
L0023: STORE           L01,#01
L0024: INC             L03
       JUMP            L0018
L0025: JZ              L01 [TRUE] L0034
       PRINT           "  has "
       STORE           L03,#00
L0026: JL              L03,#30 [FALSE] L0033
       JG              #01,G2e [TRUE] L0027
       JG              G2e,#0082 [FALSE] L0028
L0027: CALL_VN         R0471 (#03,G2e)
       JUMP            L0032
L0028: STORE           Gef,G2e
       STORE           Gee,L03
       JL              Gee,#00 [TRUE] L0029
       JL              Gee,#30 [TRUE] L0030
L0029: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0031
L0030: TEST_ATTR       G2e,L03 [FALSE] L0032
L0031: CALL_2N         R0107 (L03)
       PRINT           " "
L0032: INC             L03
       JUMP            L0026
L0033: NEW_LINE        
L0034: CALL_VS         R0469 (G2e,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0035
       RTRUE           
L0035: STORE           L01,#00
       CALL_VS         R0484 (#1516,#00) -> L02
       STORE           L03,#01
L0036: JG              L03,L02 [TRUE] L0050
       JE              L03,#02,#03 [TRUE] L0049
       CALL_VS         R0466 (G2e,L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0049
       JZ              L01 [FALSE] L0037
       PRINT           "  with "
       STORE           L01,#01
L0037: CALL_2N         R0462 (L03)
       CALL_VS         R0467 (G2e,L03) -> L04
       STORE           L00,#00
L0038: MUL             #02,L00 -> -(SP)
       JL              (SP)+,L04 [FALSE] L0048
       PRINT           " "
       CALL_VS         R0466 (G2e,L03) -> -(SP)
       CALL_VS         R0484 ((SP)+,L00) -> L05
       JE              L03,#01 [FALSE] L0039
       PRINT           "'"
       CALL_2N         R0488 (L05)
       PRINT           "'"
       JUMP            L0047
L0039: JE              L03,#29,#2d,#28 [FALSE] L0040
       PRINT_NUM       L05
       JUMP            L0047
L0040: STORE           Gef,L05
       JE              Gef,#ffff [FALSE] L0041
       PRINT           "NULL"
       JUMP            L0047
L0041: JE              Gef,#00 [FALSE] L0042
       PRINT           "0"
       JUMP            L0047
L0042: JE              Gef,#01 [FALSE] L0043
       PRINT           "1"
       JUMP            L0047
L0043: CALL_VS         R0474 (L05) -> -(SP)
       PULL            Gef
       JE              Gef,#01,#02 [FALSE] L0044
       CALL_2N         R0119 (L05)
       JUMP            L0046
L0044: JE              Gef,#04 [FALSE] L0045
       PRINT           """
       CALL_2N         R0489 (L05)
       PRINT           """
       JUMP            L0046
L0045: JE              Gef,#03 [FALSE] L0046
       PRINT           "[...]"
L0046: PRINT           " ("
       PRINT_NUM       L05
       PRINT           ")"
L0047: INC             L00
       JUMP            L0038
L0048: PRINT           ",
       "
L0049: INC             L03
       JUMP            L0036
L0050: RTRUE           

Routine R0113, 3 locals

       SPLIT_WINDOW    #01
       SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       CALL_VS         R0483 (#00,#21) -> L00
       SUB             L00,#1a -> L01
       SUB             L00,#0d -> L02
       STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0002
L0001: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0001
L0002: SET_CURSOR      #01,#02
       JE              G00,#15 [FALSE] L0003
       CALL_2N         R0119 (G00)
       JUMP            L0005
L0003: CALL_1N         R0199
       JE              G17,G00 [FALSE] L0004
       CALL_2N         R0119 (G00)
       JUMP            L0005
L0004: CALL_2N         R0118 (G17)
L0005: CALL_VS         R0483 (#00,#01) -> -(SP)
       AND             (SP)+,#02 -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       JG              L00,#4c [FALSE] L0006
       SET_CURSOR      #01,L01
       CALL_2N         R0489 (S025)
       PRINT_NUM       G01
       SET_CURSOR      #01,L02
       CALL_2N         R0489 (S026)
       PRINT_NUM       G02
L0006: JG              L00,#3f [FALSE] L0007
       JG              L00,#4c [TRUE] L0007
       SET_CURSOR      #01,L02
       PRINT_NUM       G01
       PRINT           "/"
       PRINT_NUM       G02
L0007: JUMP            L0009
L0008: SET_CURSOR      #01,L01
       CALL_2N         R0489 (S027)
       CALL_VN         R0007 (G01,G02)
L0009: SET_CURSOR      #01,#01
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       RTRUE           

Routine R0114, 6 locals

       CALL_VS         R0468 (L00,#31) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       MUL             G82,#01 -> -(SP)
       ADD             L01,(SP)+ -> -(SP)
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PROP_ADDR   Gee,#31 -> Gef
       PUSH            Gef
       CALL_VS         R0484 ((SP)+,(SP)+) -> -(SP)
       CALL_2N         R0489 ((SP)+)
       PRINT           " "
       JZ              L02 [TRUE] L0004
       RTRUE           
L0004: CALL_2N         R0115 (L00)
       RTRUE           
L0005: CALL_2S         R0065 (L00) -> L03
       JZ              L02 [TRUE] L0007
       JL              L03,#03 [TRUE] L0006
       JL              L03,#06 [TRUE] L0007
       JL              L03,#09 [FALSE] L0007
L0006: ADD             L03,#03 -> L03
L0007: JL              L03,#00 [TRUE] L0008
       JL              L03,#0c [TRUE] L0009
L0008: CALL_VN2        R0471 (#1d,L03,#0b,#01,#18)
       JUMP            L0010
L0009: LOADW           #232d,L03 -> L03
L0010: MUL             L03,#01 -> -(SP)
       ADD             G82,(SP)+ -> -(SP)
       MUL             #0c,(SP)+ -> -(SP)
       ADD             #2315,(SP)+ -> L04
       ADD             L01,#03 -> -(SP)
       CALL_VS         R0484 (L04,(SP)+) -> -(SP)
       CALL_VS         R0484 (L04,L01) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0011
       STORE           L05,#01
L0011: JZ              G04 [TRUE] L0017
       JZ              L05 [TRUE] L0017
       JL              #00,#00 [TRUE] L0012
       JL              #00,#a1 [TRUE] L0013
L0012: CALL_VN2        R0471 (#1f,#00,#a0,#01,#19)
       JUMP            L0014
L0013: STOREW          #2345,#00,#a0
L0014: OUTPUT_STREAM   REDIRECT_ENABLE,#2345
       JZ              L02 [TRUE] L0015
       CALL_2N         R0120 (L02)
       JUMP            L0016
L0015: CALL_2N         R0115 (L00)
L0016: OUTPUT_STREAM   #fffd
       ADD             #2345,#02 -> -(SP)
       CALL_2S         R0004 ((SP)+) -> -(SP)
       MUL             #03,(SP)+ -> -(SP)
       ADD             L01,(SP)+ -> L01
L0017: CALL_VS         R0484 (L04,L01) -> -(SP)
       CALL_2N         R0489 ((SP)+)
       JZ              L02 [TRUE] L0018
       RTRUE           
L0018: CALL_2N         R0115 (L00)
       RTRUE           

Routine R0115, 1 local

       JZ              L00 [FALSE] L0001
       CALL_2N         R0489 (S035)
       RTRUE           
L0001: CALL_VS         R0474 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#03 [FALSE] L0002
       PRINT           "<routine "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0002: JE              Gef,#04 [FALSE] L0003
       PRINT           "<string ""
       CALL_2N         R0489 (L00)
       PRINT           "">"
       RTRUE           
L0003: JE              Gef,#00 [FALSE] L0004
       PRINT           "<illegal object number "
       PRINT_NUM       L00
       PRINT           ">"
       RTRUE           
L0004: JE              L00,G13 [FALSE] L0005
       CALL_2N         R0489 (S030)
       RTRUE           
L0005: JZ              G5e [TRUE] L0009
       JG              #01,L00 [TRUE] L0006
       JG              L00,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L00
L0008: GET_PROP_ADDR   Gee,#2f -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0009
       CALL_VS         R0089 (L00,#2f,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0009: JG              #01,L00 [TRUE] L0010
       JG              L00,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L00
L0012: GET_PROP_ADDR   Gee,#2e -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0013
       CALL_VS         R0089 (L00,#2e,#01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0013: PRINT_OBJ       L00
       RTRUE           

Routine R0116, 2 locals

       STORE           L01,G5e
       STORE           G5e,#01
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#12 [FALSE] L0003
       STORE           G5e,#ffff
       CALL_2N         R0115 (L00)
       RTRUE           
L0003: CALL_VS         R0468 (L00,#25) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       CALL_VN         R0089 (L00,#25,#01)
       PRINT           " "
       CALL_2N         R0115 (L00)
       STORE           G5e,L01
       RTRUE           
L0004: CALL_VN         R0114 (L00,#02)
       STORE           G5e,L01
       RTRUE           

Routine R0117, 2 locals

       STORE           L01,G5e
       STORE           G5e,#00
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#12 [FALSE] L0003
       STORE           G5e,#ffff
       CALL_2N         R0115 (L00)
       STORE           G5e,L01
       RTRUE           
L0003: CALL_VN         R0114 (L00,#01)
       STORE           G5e,L01
       RTRUE           

Routine R0118, 2 locals

       STORE           L01,G5e
       STORE           G5e,#00
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#12 [FALSE] L0003
       STORE           G5e,#ffff
       CALL_2N         R0115 (L00)
       STORE           G5e,L01
       RTRUE           
L0003: CALL_VN         R0114 (L00,#00)
       STORE           G5e,L01
       RTRUE           

Routine R0119, 2 locals

       STORE           L01,G5e
       STORE           G5e,#ffff
       CALL_2N         R0115 (L00)
       STORE           G5e,L01
       RTRUE           

Routine R0120, 1 local

       CALL_2N         R0006 (L00)
       RTRUE           

Routine R0121, 3 locals

       JL              #00,#00 [TRUE] L0001
       JL              #00,#29 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1d,#00,#28,#03,#16)
       JUMP            L0003
L0002: LOADW           #22c3,#00 -> L02
L0003: STORE           L01,#01
       JUMP            L0005
L0004: ADD             L01,#02 -> L01
L0005: JG              L01,L02 [TRUE] L0014
       JL              L01,#00 [TRUE] L0006
       JL              L01,#29 [TRUE] L0007
L0006: CALL_VN2        R0471 (#1d,L01,#28,#03,#16)
       PUSH            #00
       JUMP            L0008
L0007: LOADW           #22c3,L01 -> -(SP)
L0008: JE              L00,(SP)+ [FALSE] L0013
       ADD             L01,#01 -> -(SP)
       PULL            Gef
       PUSH            Gef
       JL              Gef,#00 [TRUE] L0009
       JL              Gef,#29 [TRUE] L0011
L0009: CALL_VN2        R0471 (#1d,Gef,#28,#03,#16)
       JZ              (SP)+ [FALSE] L0010
L0010: PUSH            #00
       JUMP            L0012
L0011: LOADW           #22c3,(SP)+ -> -(SP)
L0012: RET_POPPED      
L0013: JUMP            L0004
L0014: RFALSE          

Routine R0122, 1 local

       CALL_VS         R0484 (L00,#00) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2S         R0133 (#08) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0484 (L00,#00) -> -(SP)
       RANDOM          (SP)+ -> -(SP)
       CALL_VS         R0484 (L00,(SP)+) -> -(SP)
       RET_POPPED      

Routine R0123, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0124, 0 locals
    Action routine for:
        "diag"

       JZ              G89 [FALSE] L0001
       PRINT_PADDR     S126
       NEW_LINE        
       RTRUE           
L0001: JL              G89,#32 [FALSE] L0002
       PRINT_PADDR     S127
       PRINT_NUM       G89
       PRINT_PADDR     S128
       NEW_LINE        
       RTRUE           
L0002: JL              G89,#32 [TRUE] L0003
       PRINT_PADDR     S129
       PRINT_NUM       G89
       PRINT_PADDR     S130
       NEW_LINE        
       RTRUE           
L0003: RTRUE           

Routine R0125, 1 local

       JG              G8a,#00 [FALSE] L0003
       MUL             G8a,#01 -> -(SP)
       DIV             (SP)+,#0a -> G8b
       JG              G8b,L00 [FALSE] L0001
       STORE           L00,#00
       JUMP            L0002
L0001: SUB             L00,G8b -> L00
L0002: SUB             G8a,G8b -> G8a
L0003: CALL_VN         R0463 (#05,#5f,L00)
       ADD             G89,L00 -> G89
       STORE           G8d,Geb
       RFALSE          

Routine R0126, 0 locals

       JG              #64,G89 [TRUE] L0003
       PRINT           "
"
       CALL_VS         R0468 (G8d,#0068) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       CALL_VS         R0464 (G8d,#0068) -> -(SP)
       CALL_2N         R0489 ((SP)+)
       JUMP            L0002
L0001: CALL_2N         R0489 (G8c)
L0002: STORE           G14,#01
L0003: RTRUE           

Routine R0127, 0 locals

       JL              G89,#64 [FALSE] L0001
       JG              G89,#00 [FALSE] L0001
L0001: RFALSE          

Routine R0128, 0 locals

       CALL_1N         R0126
       RTRUE           

Routine R0129, 0 locals
    Action routine for:
        "places"

       CALL_1N         R0159
       RTRUE           

Routine R0130, 0 locals
    Action routine for:
        "objects"

       CALL_1N         R0160
       RTRUE           

Routine R0131, 1 local

       JZ              #57a8 [TRUE] L0001
       SET_TEXT_STYLE  BOLDFACE
       CALL_2N         R0489 (S001)
       SET_TEXT_STYLE  ROMAN
L0001: JZ              #57aa [TRUE] L0002
       CALL_2N         R0489 (S002)
L0002: PRINT           "Release "
       CALL_VS         R0484 (#00,#01) -> -(SP)
       AND             (SP)+,#03ff -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " / Serial number "
       STORE           L00,#12
L0003: JL              L00,#18 [FALSE] L0004
       CALL_VS         R0483 (#00,L00) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       INC             L00
       JUMP            L0003
L0004: PRINT           " / Inform v"
       LOADB           #00,#3c -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3d -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3e -> Gef
       PRINT_CHAR      Gef
       LOADB           #00,#3f -> Gef
       PRINT_CHAR      Gef
       PRINT           " Library "
       CALL_2N         R0489 (S004)
       PRINT           " "
       PRINT           "S"
       PRINT           "D"
       NEW_LINE        
       RTRUE           

Routine R0132, 0 locals
    Action routine for:
        "version"

       CALL_1N         R0131
       JG              G04,#00 [FALSE] L0001
       PRINT           "Standard interpreter "
       DIV             G04,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           "."
       MOD             G04,#0100 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " ("
       CALL_VS         R0483 (#00,#1e) -> -(SP)
       PRINT_NUM       (SP)+
       CALL_VS         R0483 (#00,#1f) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       PRINT           ") / "
       JUMP            L0002
L0001: PRINT           "Interpreter "
       CALL_VS         R0483 (#00,#1e) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           " Version "
       CALL_VS         R0483 (#00,#1f) -> -(SP)
       CALL_2N         R0487 ((SP)+)
       PRINT           " / "
L0002: PRINT           "Library serial number "
       CALL_2N         R0489 (S003)
       PRINT           "
"
       RTRUE           

Routine R0133, 3 locals

       PRINT           "** Library error "
       PRINT_NUM       L00
       PRINT           " ("
       PRINT_NUM       L01
       PRINT           ","
       PRINT_NUM       L02
       PRINT           ") **
** "
       STORE           Gef,L00
       JE              Gef,#01 [FALSE] L0001
       PRINT_PADDR     S131
       JUMP            L0013
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_PADDR     S132
       CALL_2N         R0462 (L02)
       PRINT           "" of ""
       CALL_2N         R0119 (L01)
       PRINT           "" ("
       PRINT_NUM       L01
       PRINT           ")"
       JUMP            L0013
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S133
       CALL_2N         R0462 (L02)
       PRINT           "" list of ""
       CALL_2N         R0119 (L01)
       PRINT           "" ("
       PRINT_NUM       L01
       PRINT           ")"
       JUMP            L0013
L0003: JE              Gef,#04 [FALSE] L0004
       PRINT_PADDR     S134
       PRINT_NUM       #20
       PRINT           ") and should be increased"
       JUMP            L0013
L0004: JE              Gef,#05 [FALSE] L0005
       PRINT           "Object ""
       CALL_2N         R0119 (L01)
       PRINT           "" has no "time_left" property"
       JUMP            L0013
L0005: JE              Gef,#07 [FALSE] L0006
       PRINT           "The object ""
       CALL_2N         R0119 (L01)
       PRINT_PADDR     S135
       JUMP            L0013
L0006: JE              Gef,#08 [FALSE] L0007
       PRINT_PADDR     S136
       JUMP            L0013
L0007: JE              Gef,#09 [FALSE] L0008
       PRINT_NUM       L01
       PRINT_PADDR     S137
       JUMP            L0013
L0008: JE              Gef,#0a [FALSE] L0009
       PRINT_PADDR     S138
       JUMP            L0013
L0009: JE              Gef,#0b [FALSE] L0010
       PRINT           "The room ""
       CALL_2N         R0119 (L01)
       PRINT           "" has no "description" property"
       JUMP            L0013
L0010: JE              Gef,#0c [FALSE] L0011
       PRINT_PADDR     S139
       JUMP            L0013
L0011: JE              Gef,#0d [FALSE] L0012
       PRINT_PADDR     S140
       JUMP            L0013
L0012: PRINT           "(unexplained)"
L0013: PRINT_RET       " **"

Routine R0134, 2 locals

L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0082 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#08,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_SIBLING     Gee -> L00 [FALSE] L0005
L0005: JZ              L00 [FALSE] L0006
       RFALSE          
L0006: JZ              G1c [TRUE] L0010
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,G1c [TRUE] L0010
       JUMP            L0001
L0010: AND             G1b,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0014
       JZ              L01 [FALSE] L0014
       JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#1b [TRUE] L0014
L0013: JUMP            L0001
L0014: AND             G1b,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       JG              #01,L00 [TRUE] L0015
       JG              L00,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L00)
       JUMP            L0017
L0016: TEST_ATTR       L00,#05 [TRUE] L0020
L0017: JG              #01,L00 [TRUE] L0018
       JG              L00,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L00)
       JUMP            L0021
L0019: TEST_ATTR       L00,#13 [FALSE] L0021
L0020: JUMP            L0001
L0021: RET             L00

Routine R0135, 1 local

       AND             G1b,#20 -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       AND             G1b,#10 -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0003
L0002: TEST_ATTR       L00,#19 [TRUE] RTRUE
L0003: JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       JUMP            L0006
L0005: TEST_ATTR       L00,#16 [TRUE] RTRUE
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0008: TEST_ATTR       L00,#06 [FALSE] L0011
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#10 [TRUE] RTRUE
L0011: RFALSE          

Routine R0136, 2 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [TRUE] L0005
       CALL_2S         R0135 (L00) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0005: JG              #05,L01 [TRUE] L0006
       JG              L01,#0082 [TRUE] L0006
       JIN             L01,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#06,L01)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L01
L0008: GET_CHILD       Gee -> -(SP) [FALSE] L0009
L0009: JZ              (SP)+ [TRUE] L0010
       CALL_2S         R0135 (L01) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0010: AND             G1b,#84 -> -(SP)
       JZ              (SP)+ [TRUE] L0034
       JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#1c [TRUE] L0016
L0013: JG              #01,L01 [TRUE] L0014
       JG              L01,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,L01)
       JUMP            L0016
L0015: TEST_ATTR       L01,#1c [TRUE] RFALSE
L0016: JG              #01,L01 [TRUE] L0017
       JG              L01,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#03,L01)
       JUMP            L0019
L0018: TEST_ATTR       L01,#1c [TRUE] L0022
L0019: JG              #01,L00 [TRUE] L0020
       JG              L00,#0082 [FALSE] L0021
L0020: CALL_VN         R0471 (#03,L00)
       JUMP            L0022
L0021: TEST_ATTR       L00,#1c [TRUE] RFALSE
L0022: JG              #01,L00 [TRUE] L0023
       JG              L00,#0082 [FALSE] L0024
L0023: CALL_VN         R0471 (#03,L00)
       JUMP            L0025
L0024: TEST_ATTR       L00,#0b [TRUE] L0028
L0025: JG              #01,L01 [TRUE] L0026
       JG              L01,#0082 [FALSE] L0027
L0026: CALL_VN         R0471 (#03,L01)
       JUMP            L0028
L0027: TEST_ATTR       L01,#0b [TRUE] RFALSE
L0028: JG              #01,L01 [TRUE] L0029
       JG              L01,#0082 [FALSE] L0030
L0029: CALL_VN         R0471 (#03,L01)
       JUMP            L0031
L0030: TEST_ATTR       L01,#0b [TRUE] L0034
L0031: JG              #01,L00 [TRUE] L0032
       JG              L00,#0082 [FALSE] L0033
L0032: CALL_VN         R0471 (#03,L00)
       JUMP            L0034
L0033: TEST_ATTR       L00,#0b [TRUE] RFALSE
L0034: CALL_VS         R0038 (L00,L01) -> -(SP)
       RET_POPPED      

Routine R0137, 2 locals

L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0082 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_CHILD       Gee -> -(SP) [FALSE] L0005
L0005: JZ              (SP)+ [TRUE] L0022
       JG              #05,L00 [TRUE] L0006
       JG              L00,#0082 [TRUE] L0006
       JIN             L00,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L00
L0008: GET_CHILD       Gee -> -(SP) [FALSE] L0009
L0009: PULL            Gee
       PUSH            Gee
       JG              #01,Gee [TRUE] L0010
       JG              Gee,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#17,(SP)+)
       PUSH            #02
L0011: GET_PROP        (SP)+,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L01 [TRUE] L0016
       JG              #05,L00 [TRUE] L0012
       JG              L00,#0082 [TRUE] L0012
       JIN             L00,"Class" [FALSE] L0013
L0012: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_CHILD       Gee -> -(SP) [FALSE] L0015
L0015: CALL_VN         R0477 ((SP)+,#13)
       JUMP            L0021
L0016: JG              #05,L00 [TRUE] L0017
       JG              L00,#0082 [TRUE] L0017
       JIN             L00,"Class" [FALSE] L0018
L0017: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,L00
L0019: GET_CHILD       Gee -> -(SP) [FALSE] L0020
L0020: CALL_VN         R0477 ((SP)+,#14)
L0021: JUMP            L0001
L0022: GET_CHILD       "inside" -> -(SP) [FALSE] L0023
L0023: JZ              (SP)+ [TRUE] L0025
       GET_CHILD       "inside" -> -(SP) [FALSE] L0024
L0024: CALL_VN         R0477 ((SP)+,L00)
       JUMP            L0022
L0025: GET_CHILD       "outside" -> -(SP) [FALSE] L0026
L0026: JZ              (SP)+ [TRUE] L0028
       GET_CHILD       "outside" -> -(SP) [FALSE] L0027
L0027: CALL_VN         R0477 ((SP)+,L00)
       JUMP            L0025
L0028: RTRUE           

Routine R0138, 4 locals

L0001: STORE           L01,L00
       JUMP            L0006
L0002: JG              #05,L01 [TRUE] L0003
       JG              L01,#0082 [TRUE] L0003
       JIN             L01,"Class" [FALSE] L0004
L0003: CALL_VN         R0471 (#08,L01)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,L01
L0005: GET_SIBLING     Gee -> L01 [FALSE] L0006
L0006: JZ              L01 [TRUE] L0045
       JG              #01,L01 [TRUE] L0007
       JG              L01,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L01
L0009: GET_PROP        Gee,#19 -> Gef
       STORE           L02,Gef
       JZ              L02 [TRUE] L0044
       JG              #05,L01 [TRUE] L0010
       JG              L01,#0082 [TRUE] L0010
       JIN             L01,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#08,L01)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L01
L0012: GET_SIBLING     Gee -> L01 [FALSE] L0013
L0013: JZ              L01 [TRUE] L0021
       JG              #01,L01 [TRUE] L0014
       JG              L01,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#17,L01)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,L01
L0016: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0021
       JG              #05,L01 [TRUE] L0017
       JG              L01,#0082 [TRUE] L0017
       JIN             L01,"Class" [FALSE] L0018
L0017: CALL_VN         R0471 (#08,L01)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,L01
L0019: GET_SIBLING     Gee -> L01 [FALSE] L0020
L0020: JUMP            L0013
L0021: JZ              L01 [TRUE] RFALSE
       JG              #05,L01 [TRUE] L0022
       JG              L01,#0082 [TRUE] L0022
       JIN             L01,"Class" [FALSE] L0023
L0022: CALL_VN         R0471 (#08,L01)
       STORE           Gee,#02
       JUMP            L0024
L0023: STORE           Gee,L01
L0024: GET_SIBLING     Gee -> L03 [FALSE] L0025
L0025: JUMP            L0030
L0026: JG              #05,L03 [TRUE] L0027
       JG              L03,#0082 [TRUE] L0027
       JIN             L03,"Class" [FALSE] L0028
L0027: CALL_VN         R0471 (#08,L03)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,L03
L0029: GET_SIBLING     Gee -> L03 [FALSE] L0030
L0030: JZ              L03 [TRUE] L0044
       JG              #01,L03 [TRUE] L0031
       JG              L03,#0082 [FALSE] L0032
L0031: CALL_VN         R0471 (#17,L03)
       STORE           Gee,#02
       JUMP            L0033
L0032: STORE           Gee,L03
L0033: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L02 [FALSE] L0043
       JG              #05,L00 [TRUE] L0034
       JG              L00,#0082 [TRUE] L0034
       JIN             L00,"Class" [FALSE] L0035
L0034: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0036
L0035: STORE           Gee,L00
L0036: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0137 ((SP)+,L02)
       JG              #05,L00 [TRUE] L0037
       JG              L00,#0082 [TRUE] L0037
       JIN             L00,"Class" [FALSE] L0038
L0037: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0039
L0038: STORE           Gee,L00
L0039: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0040
       JG              Gee,#0082 [TRUE] L0040
       JIN             Gee,"Class" [FALSE] L0041
L0040: CALL_VN         R0471 (#06,(SP)+)
       PUSH            #02
L0041: GET_CHILD       (SP)+ -> L00 [FALSE] L0042
L0042: JUMP            L0001
L0043: JUMP            L0026
L0044: JUMP            L0002
L0045: RTRUE           

Routine R0139, 1 local

       JZ              L00 [FALSE] L0001
       RTRUE           
L0001: STORE           Gef,L00
       JL              Gef,#01 [TRUE] L0003
L0002: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0002
L0003: RTRUE           

Routine R0140, 3 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0004
       JG              Gee,#0082 [TRUE] L0004
       JIN             Gee,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#06,(SP)+)
       PUSH            #02
L0005: GET_CHILD       (SP)+ -> -(SP) [FALSE] L0006
L0006: JE              L00,(SP)+ [FALSE] L0012
       CALL_2N         R0138 (L00)
       JG              #05,L00 [TRUE] L0007
       JG              L00,#0082 [TRUE] L0007
       JIN             L00,"Class" [FALSE] L0008
L0007: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0010
       JG              Gee,#0082 [TRUE] L0010
       JIN             Gee,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#06,(SP)+)
       PUSH            #02
L0011: GET_CHILD       (SP)+ -> L00 [FALSE] L0012
L0012: STORE           G1b,L01
       STORE           G1f,#00
       CALL_VN         R0141 (L00,L02)
       RTRUE           

Routine R0141, 15 locals

       JG              L01,#00 [FALSE] L0012
       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0004
       JG              Gee,#0082 [TRUE] L0004
       JIN             Gee,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#06,(SP)+)
       PUSH            #02
L0005: GET_CHILD       (SP)+ -> -(SP) [FALSE] L0006
L0006: JE              L00,(SP)+ [FALSE] L0012
       CALL_2N         R0138 (L00)
       JG              #05,L00 [TRUE] L0007
       JG              L00,#0082 [TRUE] L0007
       JIN             L00,"Class" [FALSE] L0008
L0007: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0009
L0008: STORE           Gee,L00
L0009: GET_PARENT      Gee -> -(SP)
       PULL            Gee
       PUSH            Gee
       JG              #05,Gee [TRUE] L0010
       JG              Gee,#0082 [TRUE] L0010
       JIN             Gee,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#06,(SP)+)
       PUSH            #02
L0011: GET_CHILD       (SP)+ -> L00 [FALSE] L0012
L0012: JZ              L00 [TRUE] RFALSE
       AND             G1b,#0200 -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       JZ              L01 [FALSE] L0020
       JG              #01,L00 [TRUE] L0013
       JG              L00,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#03,L00)
       JUMP            L0015
L0014: TEST_ATTR       L00,#1b [TRUE] L0020
L0015: JG              #05,L00 [TRUE] L0016
       JG              L00,#0082 [TRUE] L0016
       JIN             L00,"Class" [FALSE] L0017
L0016: CALL_VN         R0471 (#08,L00)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L00
L0018: GET_SIBLING     Gee -> L00 [FALSE] L0019
L0019: JUMP            L0012
L0020: AND             G1b,#0800 -> -(SP)
       JZ              (SP)+ [TRUE] L0031
       JG              #01,L00 [TRUE] L0021
       JG              L00,#0082 [FALSE] L0022
L0021: CALL_VN         R0471 (#03,L00)
       JUMP            L0023
L0022: TEST_ATTR       L00,#05 [TRUE] L0026
L0023: JG              #01,L00 [TRUE] L0024
       JG              L00,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#03,L00)
       JUMP            L0031
L0025: TEST_ATTR       L00,#13 [FALSE] L0031
L0026: JG              #05,L00 [TRUE] L0027
       JG              L00,#0082 [TRUE] L0027
       JIN             L00,"Class" [FALSE] L0028
L0027: CALL_VN         R0471 (#08,L00)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,L00
L0029: GET_SIBLING     Gee -> L00 [FALSE] L0030
L0030: JUMP            L0012
L0031: JUMP            L0032
L0032: ADD             #1ee2,L02 -> L03
       ADD             #1e62,L02 -> L04
       STORE           L05,L00
       STORE           L06,#00
       JUMP            L0034
L0033: CALL_VS         R0134 (L05,L01) -> L05
       INC             L06
L0034: JZ              L05 [TRUE] L0039
       ADD             L06,L02 -> -(SP)
       JL              (SP)+,#80 [FALSE] L0039
       CALL_VN         R0485 (L03,L06,#00)
       JG              #01,L05 [TRUE] L0035
       JG              L05,#0082 [FALSE] L0036
L0035: CALL_VN         R0471 (#17,L05)
       STORE           Gee,#02
       JUMP            L0037
L0036: STORE           Gee,L05
L0037: GET_PROP        Gee,#17 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0038
       INC             L07
L0038: JUMP            L0033
L0039: AND             G1b,#0400 -> -(SP)
       JZ              (SP)+ [TRUE] L0047
       JE              L06,#01 [FALSE] L0043
       JG              #01,L00 [TRUE] L0040
       JG              L00,#0082 [FALSE] L0041
L0040: CALL_VN         R0471 (#03,L00)
       JUMP            L0042
L0041: TEST_ATTR       L00,#20 [TRUE] L0043
L0042: CALL_2N         R0489 (S036)
       JUMP            L0044
L0043: CALL_2N         R0489 (S037)
L0044: AND             G1b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0045
       PRINT           ":
"
       JUMP            L0046
L0045: CALL_2N         R0487 (#20)
L0046: SUB             G1b,#0400 -> G1b
L0047: ADD             L02,L06 -> -(SP)
       ADD             (SP)+,#01 -> L02
       JL              L07,#02 [FALSE] L0048
       JUMP            L0154
L0048: STORE           L0b,#01
       STORE           L05,L00
       STORE           L07,#00
       JUMP            L0050
L0049: CALL_VS         R0134 (L05,L01) -> L05
       INC             L07
L0050: JL              L07,L06 [FALSE] L0062
       CALL_VS         R0483 (L03,L07) -> -(SP)
       JZ              (SP)+ [FALSE] L0061
       CALL_VN         R0485 (L03,L07,L0b)
       CALL_VN         R0485 (L04,L0b,#01)
       CALL_VS         R0134 (L05,L01) -> L09
       ADD             L07,#01 -> L0a
       JUMP            L0052
L0051: CALL_VS         R0134 (L09,L01) -> L09
       INC             L0a
L0052: JZ              L09 [TRUE] L0060
       JL              L0a,L06 [FALSE] L0060
       CALL_VS         R0483 (L03,L0a) -> -(SP)
       JZ              (SP)+ [FALSE] L0059
       JG              #01,L05 [TRUE] L0053
       JG              L05,#0082 [FALSE] L0054
L0053: CALL_VN         R0471 (#17,L05)
       STORE           Gee,#02
       JUMP            L0055
L0054: STORE           Gee,L05
L0055: GET_PROP        Gee,#17 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0059
       JG              #01,L09 [TRUE] L0056
       JG              L09,#0082 [FALSE] L0057
L0056: CALL_VN         R0471 (#17,L09)
       STORE           Gee,#02
       JUMP            L0058
L0057: STORE           Gee,L09
L0058: GET_PROP        Gee,#17 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0059
       CALL_VS         R0136 (L05,L09) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0059
       CALL_VS         R0483 (L04,L0b) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0485 (L04,L0b,(SP)+)
       CALL_VN         R0485 (L03,L0a,L0b)
L0059: JUMP            L0051
L0060: INC             L0b
L0061: JUMP            L0049
L0062: DEC             L0b
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       JUMP            L0064
L0063: INC             L05
       INC             L0d
L0064: JG              L05,L0b [TRUE] L0082
L0065: CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,L05 [TRUE] L0066
       SUB             #00,L05 -> -(SP)
       CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0066
       INC             L07
       CALL_VS         R0134 (L06,L01) -> L06
       JUMP            L0065
L0066: CALL_VS         R0483 (L04,L05) -> L0a
       JZ              L06 [FALSE] L0067
       STORE           L0e,#00
       JUMP            L0081
L0067: JG              #01,L06 [TRUE] L0068
       JG              L06,#0082 [FALSE] L0069
L0068: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0070
L0069: STORE           Gee,L06
L0070: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1c [TRUE] L0077
       JG              #01,L06 [TRUE] L0071
       JG              L06,#0082 [FALSE] L0072
L0071: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0073
L0072: STORE           Gee,L06
L0073: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       CALL_2S         R0088 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0077
       JG              #01,L06 [TRUE] L0074
       JG              L06,#0082 [FALSE] L0075
L0074: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0076
L0075: STORE           Gee,L06
L0076: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0077
       DEC             L0d
L0077: JG              #01,L06 [TRUE] L0078
       JG              L06,#0082 [FALSE] L0079
L0078: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0080
L0079: STORE           Gee,L06
L0080: GET_PROP        Gee,#19 -> Gef
       STORE           L0e,Gef
L0081: JUMP            L0063
L0082: DEC             L0d
       STORE           L05,#01
       STORE           L06,L00
       STORE           L07,#00
       STORE           L0e,#00
       JUMP            L0084
L0083: INC             L05
       DEC             L0d
L0084: JL              L0d,#00 [TRUE] L0153
L0085: CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,L05 [TRUE] L0086
       SUB             #00,L05 -> -(SP)
       CALL_VS         R0483 (L03,L07) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0086
       INC             L07
       CALL_VS         R0134 (L06,L01) -> L06
       JUMP            L0085
L0086: JG              #01,L06 [TRUE] L0087
       JG              L06,#0082 [FALSE] L0088
L0087: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0089
L0088: STORE           Gee,L06
L0089: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1c [TRUE] L0142
       JG              #01,L06 [TRUE] L0090
       JG              L06,#0082 [FALSE] L0091
L0090: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0092
L0091: STORE           Gee,L06
L0092: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0093
       INC             L0d
       JUMP            L0152
L0093: CALL_VS         R0134 (L06,L01) -> L08
       JZ              L08 [TRUE] L0100
       JG              #01,L06 [TRUE] L0094
       JG              L06,#0082 [FALSE] L0095
L0094: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0096
L0095: STORE           Gee,L06
L0096: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JG              #01,L08 [TRUE] L0097
       JG              L08,#0082 [FALSE] L0098
L0097: CALL_VN         R0471 (#17,L08)
       STORE           Gee,#02
       JUMP            L0099
L0098: STORE           Gee,L08
L0099: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [TRUE] L0101
L0100: JUMP            L0142
L0101: JG              #01,L06 [TRUE] L0102
       JG              L06,#0082 [FALSE] L0103
L0102: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0104
L0103: STORE           Gee,L06
L0104: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       CALL_2S         R0088 ((SP)+) -> L08
       JE              L08,#02,#03 [FALSE] L0142
       STORE           L0c,L06
       STORE           G1e,#01
       STORE           L09,L07
       STORE           L0a,L05
L0105: JL              L0a,L0b [FALSE] L0121
       JG              #01,L06 [TRUE] L0106
       JG              L06,#0082 [FALSE] L0107
L0106: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0108
L0107: STORE           Gee,L06
L0108: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JG              #01,L0c [TRUE] L0109
       JG              L0c,#0082 [FALSE] L0110
L0109: CALL_VN         R0471 (#17,L0c)
       STORE           Gee,#02
       JUMP            L0111
L0110: STORE           Gee,L0c
L0111: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] L0121
       INC             L0a
L0112: CALL_VS         R0483 (L03,L09) -> -(SP)
       JE              (SP)+,L0a [TRUE] L0113
       SUB             #00,L0a -> -(SP)
       CALL_VS         R0483 (L03,L09) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0113
       INC             L09
       CALL_VS         R0134 (L0c,L01) -> L0c
       JUMP            L0112
L0113: JG              #01,L06 [TRUE] L0114
       JG              L06,#0082 [FALSE] L0115
L0114: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0116
L0115: STORE           Gee,L06
L0116: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JG              #01,L0c [TRUE] L0117
       JG              L0c,#0082 [FALSE] L0118
L0117: CALL_VN         R0471 (#17,L0c)
       STORE           Gee,#02
       JUMP            L0119
L0118: STORE           Gee,L0c
L0119: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [FALSE] L0120
       INC             G1e
L0120: JUMP            L0105
L0121: JE              G1e,#01 [FALSE] L0122
       JUMP            L0142
L0122: AND             G1b,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0123
       ADD             L01,G1f -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0139 ((SP)+)
L0123: JE              L08,#03 [FALSE] L0130
       STORE           L0c,#00
       STORE           L09,#00
L0124: JL              L09,G1e [FALSE] L0125
       ADD             L09,L05 -> -(SP)
       CALL_VS         R0483 (L04,(SP)+) -> -(SP)
       ADD             L0c,(SP)+ -> L0c
       INC             L09
       JUMP            L0124
L0125: CALL_2N         R0120 (L0c)
       PRINT           " "
       JG              #01,L06 [TRUE] L0126
       JG              L06,#0082 [FALSE] L0127
L0126: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0128
L0127: STORE           Gee,L06
L0128: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       CALL_2N         R0489 ((SP)+)
       AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0129
       PRINT           " ("
L0129: AND             G1b,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0130
       PRINT           ":
"
L0130: STORE           L0c,G1b
       JE              L08,#03 [TRUE] L0131
       STORE           G20,#01
       STORE           G35,L06
       ADD             L01,G1f -> G36
       CALL_VS         R0091 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0131
       JUMP            L0137
L0131: PUSH            G1c
       PUSH            G1d
       PUSH            G1e
       JG              #01,L06 [TRUE] L0132
       JG              L06,#0082 [FALSE] L0133
L0132: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0134
L0133: STORE           Gee,L06
L0134: GET_PROP        Gee,#19 -> Gef
       STORE           G1c,Gef
       STORE           G1d,L06
       INC             G1f
       CALL_VN         R0141 (L06,L01,L02)
       DEC             G1f
       PULL            G1e
       PULL            G1d
       PULL            G1c
       JE              L08,#03 [FALSE] L0136
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0135
       PRINT           ")"
L0135: JUMP            L0137
L0136: STORE           G20,#02
       STORE           G35,L06
       ADD             L01,G1f -> G36
       CALL_VN         R0091 (L06,#19)
L0137: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0138
       AND             G1b,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0138
       NEW_LINE        
L0138: STORE           G1b,L0c
       JG              #01,L06 [TRUE] L0139
       JG              L06,#0082 [FALSE] L0140
L0139: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0141
L0140: STORE           Gee,L06
L0141: GET_PROP        Gee,#19 -> Gef
       STORE           L0e,Gef
       JUMP            L0150
L0142: SUB             #00,L0d -> -(SP)
       CALL_VS         R0142 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0143
       JUMP            L0152
L0143: CALL_VS         R0483 (L04,L05) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0147
       AND             G1b,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0144
       CALL_2N         R0119 (L06)
       JUMP            L0146
L0144: AND             G1b,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0145
       CALL_2N         R0117 (L06)
       JUMP            L0146
L0145: CALL_2N         R0116 (L06)
L0146: JUMP            L0149
L0147: AND             G1b,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0148
       CALL_VS         R0483 (L04,L05) -> -(SP)
       CALL_VN         R0114 (L06,#01,(SP)+)
L0148: CALL_VS         R0483 (L04,L05) -> -(SP)
       CALL_2N         R0120 ((SP)+)
       PRINT           " "
       CALL_VN         R0089 (L06,#17,#01)
L0149: CALL_VN         R0143 (L06,L01,L02)
L0150: AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0152
       JE              L0d,#01 [FALSE] L0151
       CALL_2N         R0489 (S040)
L0151: JG              L0d,#01 [FALSE] L0152
       PRINT           ", "
L0152: JUMP            L0083
L0153: RTRUE           
L0154: STORE           L0b,L06
       STORE           L05,#01
       STORE           L06,L00
       JUMP            L0156
L0155: CALL_VS         R0134 (L06,L01) -> L06
       INC             L05
       INC             L0d
L0156: JG              L05,L0b [TRUE] L0170
       JG              #01,L06 [TRUE] L0157
       JG              L06,#0082 [FALSE] L0158
L0157: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0159
L0158: STORE           Gee,L06
L0159: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1c [TRUE] L0166
       JG              #01,L06 [TRUE] L0160
       JG              L06,#0082 [FALSE] L0161
L0160: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0162
L0161: STORE           Gee,L06
L0162: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       CALL_2S         R0088 ((SP)+) -> -(SP)
       JE              (SP)+,#02,#03 [FALSE] L0166
       JG              #01,L06 [TRUE] L0163
       JG              L06,#0082 [FALSE] L0164
L0163: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0165
L0164: STORE           Gee,L06
L0165: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0166
       DEC             L0d
L0166: JG              #01,L06 [TRUE] L0167
       JG              L06,#0082 [FALSE] L0168
L0167: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0169
L0168: STORE           Gee,L06
L0169: GET_PROP        Gee,#19 -> Gef
       STORE           L0e,Gef
       JUMP            L0155
L0170: STORE           L05,#01
       STORE           L06,L00
       STORE           L0e,#00
       JUMP            L0172
L0171: CALL_VS         R0134 (L06,L01) -> L06
       INC             L05
L0172: JG              L05,L0d [TRUE] L0224
       JG              #01,L06 [TRUE] L0173
       JG              L06,#0082 [FALSE] L0174
L0173: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0175
L0174: STORE           Gee,L06
L0175: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,#00,G1c [TRUE] L0216
       JG              #01,L06 [TRUE] L0176
       JG              L06,#0082 [FALSE] L0177
L0176: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0178
L0177: STORE           Gee,L06
L0178: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,L0e [FALSE] L0179
       DEC             L05
       JUMP            L0223
L0179: CALL_VS         R0134 (L06,L01) -> L07
       JZ              L07 [TRUE] L0186
       JG              #01,L06 [TRUE] L0180
       JG              L06,#0082 [FALSE] L0181
L0180: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0182
L0181: STORE           Gee,L06
L0182: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JG              #01,L07 [TRUE] L0183
       JG              L07,#0082 [FALSE] L0184
L0183: CALL_VN         R0471 (#17,L07)
       STORE           Gee,#02
       JUMP            L0185
L0184: STORE           Gee,L07
L0185: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [TRUE] L0187
L0186: JUMP            L0216
L0187: JG              #01,L06 [TRUE] L0188
       JG              L06,#0082 [FALSE] L0189
L0188: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0190
L0189: STORE           Gee,L06
L0190: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       CALL_2S         R0088 ((SP)+) -> L07
       JE              L07,#02,#03 [FALSE] L0216
       AND             G1b,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0191
       ADD             L01,G1f -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0139 ((SP)+)
L0191: JE              L07,#03 [FALSE] L0204
       STORE           L0c,L06
       STORE           L09,#00
L0192: CALL_VS         R0134 (L0c,L01) -> L0c
       INC             L09
       JZ              L0c [TRUE] L0199
       JG              #01,L06 [TRUE] L0193
       JG              L06,#0082 [FALSE] L0194
L0193: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0195
L0194: STORE           Gee,L06
L0195: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JG              #01,L0c [TRUE] L0196
       JG              L0c,#0082 [FALSE] L0197
L0196: CALL_VN         R0471 (#17,L0c)
       STORE           Gee,#02
       JUMP            L0198
L0197: STORE           Gee,L0c
L0198: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       JE              (SP)+,(SP)+ [TRUE] L0192
L0199: CALL_2N         R0120 (L09)
       PRINT           " "
       JG              #01,L06 [TRUE] L0200
       JG              L06,#0082 [FALSE] L0201
L0200: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0202
L0201: STORE           Gee,L06
L0202: GET_PROP        Gee,#19 -> Gef
       PUSH            Gef
       CALL_2N         R0489 ((SP)+)
       AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0203
       PRINT           " ("
L0203: AND             G1b,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0204
       PRINT           ":
"
L0204: STORE           L0c,G1b
       JE              L07,#03 [TRUE] L0205
       STORE           G20,#01
       STORE           G35,L06
       ADD             L01,G1f -> G36
       CALL_VS         R0091 (L06,#19) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0205
       JUMP            L0211
L0205: PUSH            G1c
       PUSH            G1d
       PUSH            G1e
       JG              #01,L06 [TRUE] L0206
       JG              L06,#0082 [FALSE] L0207
L0206: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0208
L0207: STORE           Gee,L06
L0208: GET_PROP        Gee,#19 -> Gef
       STORE           G1c,Gef
       STORE           G1d,L06
       INC             G1f
       CALL_VN         R0141 (L06,L01,L02)
       DEC             G1f
       PULL            G1e
       PULL            G1d
       PULL            G1c
       JE              L07,#03 [FALSE] L0210
       AND             L0c,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0209
       PRINT           ")"
L0209: JUMP            L0211
L0210: STORE           G20,#02
       STORE           G35,L06
       ADD             L01,G1f -> G36
       CALL_VN         R0091 (L06,#19)
L0211: AND             L0c,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0212
       AND             G1b,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0212
       NEW_LINE        
L0212: STORE           G1b,L0c
       JG              #01,L06 [TRUE] L0213
       JG              L06,#0082 [FALSE] L0214
L0213: CALL_VN         R0471 (#17,L06)
       STORE           Gee,#02
       JUMP            L0215
L0214: STORE           Gee,L06
L0215: GET_PROP        Gee,#19 -> Gef
       STORE           L0e,Gef
       JUMP            L0221
L0216: SUB             L05,L0d -> -(SP)
       CALL_VS         R0142 (L06,L01,(SP)+) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0217
       JUMP            L0223
L0217: AND             G1b,#1000 -> -(SP)
       JZ              (SP)+ [TRUE] L0218
       CALL_2N         R0119 (L06)
       JUMP            L0220
L0218: AND             G1b,#0100 -> -(SP)
       JZ              (SP)+ [TRUE] L0219
       CALL_2N         R0117 (L06)
       JUMP            L0220
L0219: CALL_2N         R0116 (L06)
L0220: CALL_VN         R0143 (L06,L01,L02)
L0221: AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0223
       SUB             L0d,#01 -> -(SP)
       JE              L05,(SP)+ [FALSE] L0222
       CALL_2N         R0489 (S040)
L0222: SUB             L0d,#01 -> -(SP)
       JL              L05,(SP)+ [FALSE] L0223
       PRINT           ", "
L0223: JUMP            L0171
L0224: RTRUE           

Routine R0142, 4 locals

       AND             G1b,#02 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       ADD             L01,G1f -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       CALL_2N         R0139 ((SP)+)
L0001: AND             G1b,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PROP        Gee,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0007
       STORE           G20,#01
       CALL_VS         R0089 (L00,#16,#01) -> L03
       JE              L03,#01 [FALSE] L0007
       AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       JE              L02,#ffff [FALSE] L0005
       CALL_2N         R0489 (S040)
L0005: JL              L02,#ffff [FALSE] L0006
       PRINT           ", "
L0006: AND             G1b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       NEW_LINE        
L0007: RET             L03

Routine R0143, 8 locals

       AND             G1b,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0032
       STORE           L07,#00
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,L00)
       JUMP            L0006
L0002: TEST_ATTR       L00,#0b [FALSE] L0006
       JG              #01,G00 [TRUE] L0003
       JG              G00,#0082 [FALSE] L0004
L0003: CALL_VN         R0471 (#03,G00)
       JUMP            L0005
L0004: TEST_ATTR       G00,#0b [TRUE] L0006
L0005: ADD             L07,#01 -> L07
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0012
L0008: TEST_ATTR       L00,#06 [FALSE] L0012
       JG              #01,L00 [TRUE] L0009
       JG              L00,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0010: TEST_ATTR       L00,#10 [TRUE] L0012
L0011: ADD             L07,#02 -> L07
L0012: JG              #01,L00 [TRUE] L0013
       JG              L00,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#03,L00)
       JUMP            L0025
L0014: TEST_ATTR       L00,#06 [FALSE] L0025
       JG              #01,L00 [TRUE] L0015
       JG              L00,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L00)
       JUMP            L0017
L0016: TEST_ATTR       L00,#10 [TRUE] L0020
L0017: JG              #01,L00 [TRUE] L0018
       JG              L00,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L00)
       JUMP            L0025
L0019: TEST_ATTR       L00,#19 [FALSE] L0025
L0020: JG              #05,L00 [TRUE] L0021
       JG              L00,#0082 [TRUE] L0021
       JIN             L00,"Class" [FALSE] L0022
L0021: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,L00
L0023: GET_CHILD       Gee -> -(SP) [FALSE] L0024
L0024: JZ              (SP)+ [FALSE] L0025
       ADD             L07,#04 -> L07
L0025: JE              L07,#01 [FALSE] L0026
       CALL_VN         R0285 (#1006,#01,L00)
L0026: JE              L07,#02 [FALSE] L0027
       CALL_VN         R0285 (#1006,#02,L00)
L0027: JE              L07,#03 [FALSE] L0028
       CALL_VN         R0285 (#1006,#03,L00)
L0028: JE              L07,#04 [FALSE] L0029
       CALL_VN         R0285 (#1006,#04,L00)
L0029: JE              L07,#05 [FALSE] L0030
       CALL_VN         R0285 (#1006,#05,L00)
L0030: JE              L07,#06 [FALSE] L0031
       CALL_VN         R0285 (#1006,#06,L00)
L0031: JE              L07,#07 [FALSE] L0032
       CALL_VN         R0285 (#1006,#07,L00)
L0032: AND             G1b,#04 -> -(SP)
       JZ              (SP)+ [TRUE] L0079
       JG              #01,L00 [TRUE] L0033
       JG              L00,#0082 [FALSE] L0034
L0033: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0035
L0034: STORE           Gee,L00
L0035: GET_PROP        Gee,#16 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0037
       STORE           G20,#02
       CALL_VS         R0091 (L00,#16) -> -(SP)
       JZ              (SP)+ [TRUE] L0037
       AND             G1b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0036
       NEW_LINE        
L0036: RTRUE           
L0037: JG              #01,L00 [TRUE] L0038
       JG              L00,#0082 [FALSE] L0039
L0038: CALL_VN         R0471 (#03,L00)
       JUMP            L0042
L0039: TEST_ATTR       L00,#0b [FALSE] L0042
       JG              #01,L00 [TRUE] L0040
       JG              L00,#0082 [FALSE] L0041
L0040: CALL_VN         R0471 (#03,L00)
       JUMP            L0042
L0041: TEST_ATTR       L00,#1c [FALSE] L0042
       CALL_VN         R0285 (#1006,#08)
       STORE           L04,#01
       JUMP            L0048
L0042: JG              #01,L00 [TRUE] L0043
       JG              L00,#0082 [FALSE] L0044
L0043: CALL_VN         R0471 (#03,L00)
       JUMP            L0045
L0044: TEST_ATTR       L00,#0b [FALSE] L0045
       CALL_VN         R0285 (#1006,#09,L00)
       STORE           L04,#01
L0045: JG              #01,L00 [TRUE] L0046
       JG              L00,#0082 [FALSE] L0047
L0046: CALL_VN         R0471 (#03,L00)
       JUMP            L0048
L0047: TEST_ATTR       L00,#1c [FALSE] L0048
       CALL_VN         R0285 (#1006,#0a,L00)
       STORE           L04,#01
L0048: JG              #01,L00 [TRUE] L0049
       JG              L00,#0082 [FALSE] L0050
L0049: CALL_VN         R0471 (#03,L00)
       JUMP            L0078
L0050: TEST_ATTR       L00,#06 [FALSE] L0078
       JG              #01,L00 [TRUE] L0051
       JG              L00,#0082 [FALSE] L0052
L0051: CALL_VN         R0471 (#03,L00)
       JUMP            L0070
L0052: TEST_ATTR       L00,#11 [FALSE] L0070
       JE              L04,#01 [FALSE] L0053
       CALL_2N         R0489 (S040)
       JUMP            L0054
L0053: CALL_VN         R0285 (#1006,#0b,L00)
L0054: JG              #01,L00 [TRUE] L0055
       JG              L00,#0082 [FALSE] L0056
L0055: CALL_VN         R0471 (#03,L00)
       JUMP            L0063
L0056: TEST_ATTR       L00,#10 [FALSE] L0063
       JG              #05,L00 [TRUE] L0057
       JG              L00,#0082 [TRUE] L0057
       JIN             L00,"Class" [FALSE] L0058
L0057: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0059
L0058: STORE           Gee,L00
L0059: GET_CHILD       Gee -> -(SP) [FALSE] L0060
L0060: JZ              (SP)+ [FALSE] L0061
       CALL_VN         R0285 (#1006,#0d,L00)
       JUMP            L0062
L0061: CALL_VN         R0285 (#1006,#0c,L00)
L0062: JUMP            L0069
L0063: JG              #01,L00 [TRUE] L0064
       JG              L00,#0082 [FALSE] L0065
L0064: CALL_VN         R0471 (#03,L00)
       JUMP            L0068
L0065: TEST_ATTR       L00,#0c [FALSE] L0068
       JG              #01,L00 [TRUE] L0066
       JG              L00,#0082 [FALSE] L0067
L0066: CALL_VN         R0471 (#03,L00)
       JUMP            L0068
L0067: TEST_ATTR       L00,#0d [FALSE] L0068
       CALL_VN         R0285 (#1006,#0f,L00)
       JUMP            L0069
L0068: CALL_VN         R0285 (#1006,#0e,L00)
L0069: STORE           L04,#01
       JUMP            L0078
L0070: JG              #05,L00 [TRUE] L0071
       JG              L00,#0082 [TRUE] L0071
       JIN             L00,"Class" [FALSE] L0072
L0071: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0073
L0072: STORE           Gee,L00
L0073: GET_CHILD       Gee -> -(SP) [FALSE] L0074
L0074: JZ              (SP)+ [FALSE] L0078
       JG              #01,L00 [TRUE] L0075
       JG              L00,#0082 [FALSE] L0076
L0075: CALL_VN         R0471 (#03,L00)
       JUMP            L0078
L0076: TEST_ATTR       L00,#19 [FALSE] L0078
       JE              L04,#01 [FALSE] L0077
       CALL_VN         R0285 (#1006,#10,L00)
       JUMP            L0078
L0077: CALL_VN         R0285 (#1006,#11,L00)
L0078: JE              L04,#01 [FALSE] L0079
       PRINT           ")"
L0079: AND             G1b,#0800 -> -(SP)
       JZ              (SP)+ [FALSE] L0089
       JG              #05,L00 [TRUE] L0080
       JG              L00,#0082 [TRUE] L0080
       JIN             L00,"Class" [FALSE] L0081
L0080: CALL_VN         R0471 (#09,L00)
       STORE           Gee,#02
       JUMP            L0082
L0081: STORE           Gee,L00
L0082: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0084
L0083: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0083
L0084: PULL            Gee
       STORE           L05,Gef
       JG              #05,L00 [TRUE] L0085
       JG              L00,#0082 [TRUE] L0085
       JIN             L00,"Class" [FALSE] L0086
L0085: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0087
L0086: STORE           Gee,L00
L0087: GET_CHILD       Gee -> L04 [FALSE] L0088
L0088: JUMP            L0105
L0089: STORE           L05,#00
       JG              #05,L00 [TRUE] L0090
       JG              L00,#0082 [TRUE] L0090
       JIN             L00,"Class" [FALSE] L0091
L0090: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0092
L0091: STORE           Gee,L00
L0092: GET_CHILD       Gee -> -(SP) [FALSE] L0093
L0093: PULL            L06
       JZ              L06 [TRUE] L0105
L0094: JG              #01,L06 [TRUE] L0095
       JG              L06,#0082 [FALSE] L0096
L0095: CALL_VN         R0471 (#03,L06)
       JUMP            L0097
L0096: TEST_ATTR       L06,#05 [TRUE] L0101
L0097: JG              #01,L06 [TRUE] L0098
       JG              L06,#0082 [FALSE] L0099
L0098: CALL_VN         R0471 (#03,L06)
       JUMP            L0100
L0099: TEST_ATTR       L06,#13 [TRUE] L0101
L0100: INC             L05
       STORE           L04,L06
L0101: JG              #05,L06 [TRUE] L0102
       JG              L06,#0082 [TRUE] L0102
       JIN             L06,"Class" [FALSE] L0103
L0102: CALL_VN         R0471 (#0d,L06)
       JUMP            L0105
L0103: JIN             L06,L00 [TRUE] L0104
       CALL_VN         R0471 (#20,L06)
       JUMP            L0105
L0104: GET_SIBLING     L06 -> L06 [TRUE] L0094
L0105: AND             G1b,#20 -> -(SP)
       JZ              (SP)+ [TRUE] L0107
       JG              L05,#00 [FALSE] L0107
       AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0106
       CALL_VN         R0285 (#1006,#12,L00)
L0106: STORE           L03,#01
L0107: AND             G1b,#10 -> -(SP)
       JZ              (SP)+ [TRUE] L0131
       JG              L05,#00 [FALSE] L0131
       JG              #01,L00 [TRUE] L0108
       JG              L00,#0082 [FALSE] L0109
L0108: CALL_VN         R0471 (#03,L00)
       JUMP            L0116
L0109: TEST_ATTR       L00,#16 [FALSE] L0116
       AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0115
       AND             G1b,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0110
       CALL_VN         R0285 (#1006,#13,L00)
       JUMP            L0111
L0110: CALL_VN         R0285 (#1006,#14,L00)
L0111: JG              #01,L00 [TRUE] L0112
       JG              L00,#0082 [FALSE] L0113
L0112: CALL_VN         R0471 (#03,L00)
       JUMP            L0114
L0113: TEST_ATTR       L00,#02 [FALSE] L0114
       CALL_2N         R0489 (S041)
       JUMP            L0115
L0114: CALL_2N         R0489 (S042)
L0115: STORE           L03,#01
L0116: JG              #01,L00 [TRUE] L0117
       JG              L00,#0082 [FALSE] L0118
L0117: CALL_VN         R0471 (#03,L00)
       JUMP            L0131
L0118: TEST_ATTR       L00,#06 [FALSE] L0131
       JG              #01,L00 [TRUE] L0119
       JG              L00,#0082 [FALSE] L0120
L0119: CALL_VN         R0471 (#03,L00)
       JUMP            L0121
L0120: TEST_ATTR       L00,#10 [TRUE] L0124
L0121: JG              #01,L00 [TRUE] L0122
       JG              L00,#0082 [FALSE] L0123
L0122: CALL_VN         R0471 (#03,L00)
       JUMP            L0131
L0123: TEST_ATTR       L00,#19 [FALSE] L0131
L0124: AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0130
       AND             G1b,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0125
       CALL_VN         R0285 (#1006,#15,L00)
       JUMP            L0126
L0125: CALL_VN         R0285 (#1006,#16,L00)
L0126: JG              #01,L00 [TRUE] L0127
       JG              L00,#0082 [FALSE] L0128
L0127: CALL_VN         R0471 (#03,L00)
       JUMP            L0129
L0128: TEST_ATTR       L00,#02 [FALSE] L0129
       CALL_2N         R0489 (S041)
       JUMP            L0130
L0129: CALL_2N         R0489 (S042)
L0130: STORE           L03,#01
L0131: JE              L03,#01 [FALSE] L0136
       AND             G1b,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0136
       JG              L05,#01 [TRUE] L0134
       JG              #01,L04 [TRUE] L0132
       JG              L04,#0082 [FALSE] L0133
L0132: CALL_VN         R0471 (#03,L04)
       JUMP            L0135
L0133: TEST_ATTR       L04,#20 [FALSE] L0135
L0134: CALL_2N         R0489 (S039)
       JUMP            L0136
L0135: CALL_2N         R0489 (S038)
L0136: AND             G1b,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0137
       NEW_LINE        
L0137: JE              L03,#01 [FALSE] L0142
       JG              #05,L00 [TRUE] L0138
       JG              L00,#0082 [TRUE] L0138
       JIN             L00,"Class" [FALSE] L0139
L0138: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0140
L0139: STORE           Gee,L00
L0140: GET_CHILD       Gee -> L00 [FALSE] L0141
L0141: PUSH            G1c
       PUSH            G1d
       PUSH            G1e
       STORE           G1c,#00
       STORE           G1d,#00
       STORE           G1e,#00
       ADD             L01,#01 -> -(SP)
       CALL_VN         R0141 (L00,(SP)+,L02)
       PULL            G1e
       PULL            G1d
       PULL            G1c
       AND             G1b,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0142
       PRINT           ")"
L0142: RTRUE           

Routine R0144, 7 locals

       INC             G23
L0001: STORE           G24,#00
       CALL_1S         L01 -> L03
       STORE           L04,G26
       PRINT           "--- "
       CALL_2N         R0489 (L04)
       PRINT           " ---

"
       CALL_VS         R0469 (L00,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0465 (L00,#45)
       JUMP            L0003
L0002: CALL_2N         R0489 (L00)
L0003: CALL_VN         R0285 (#1007,#34,L03)
       PRINT           "> "
       STORE           Gec,#1fe2
       STOREB          Gec,#01,#00
       CALL_1N         R0113
       READ            Gec,#205b -> Gef
       JL              #01,#00 [TRUE] L0004
       JL              #01,#20 [TRUE] L0005
L0004: CALL_VN2        R0471 (#1d,#01,#40,#08,#0e)
       JUMP            L0006
L0005: LOADW           #205b,#01 -> L05
L0006: JE              L05,"q","quit" [TRUE] L0010
       JL              #01,#00 [TRUE] L0007
       JL              #01,#41 [TRUE] L0008
L0007: CALL_VN2        R0471 (#1c,#01,#40,#00,#0e)
       PUSH            #00
       JUMP            L0009
L0008: LOADB           #205b,#01 -> -(SP)
L0009: JZ              (SP)+ [FALSE] L0012
L0010: DEC             G23
       JG              G23,#00 [TRUE] RFALSE
       JZ              G14 [FALSE] L0011
       CALL_2N         R0081 (#1f)
       RTRUE           
L0011: RFALSE          
L0012: CALL_2S         R0063 (#01) -> L05
       JZ              L05 [FALSE] L0013
       JUMP            L0001
L0013: JL              L05,#01 [TRUE] L0014
       JG              L05,L03 [FALSE] L0015
L0014: JUMP            L0003
L0015: STORE           G24,L05
       CALL_1S         L02 -> L06
       JE              L06,#02 [FALSE] L0016
       JUMP            L0001
L0016: JE              L06,#03 [TRUE] RFALSE
       JUMP            L0003

Routine R0145, 11 locals

       JZ              G22 [FALSE] L0001
       CALL_VS         R0144 (L00,L01,L02) -> -(SP)
       RET_POPPED      
L0001: INC             G23
       STORE           G24,#00
       CALL_1S         L01 -> L03
       STORE           L04,G26
       STORE           L05,G25
       STORE           L06,#07
L0002: STORE           L09,#00
       ERASE_WINDOW    #ffff
       ADD             L03,#07 -> L07
       SPLIT_WINDOW    L07
       CALL_VS         R0483 (#00,#21) -> L07
       JZ              L07 [FALSE] L0003
       STORE           L07,#50
L0003: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0005
L0004: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0004
L0005: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,L05 -> L08
       SET_CURSOR      #01,L08
       CALL_2N         R0489 (L04)
       SET_CURSOR      #02,#01
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0007
L0006: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0006
L0007: SET_CURSOR      #02,#02
       CALL_2N         R0489 (S020)
       SUB             L07,#0c -> L08
       SET_CURSOR      #02,L08
       CALL_2N         R0489 (S021)
       SET_CURSOR      #03,#01
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0009
L0008: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0008
L0009: SET_CURSOR      #03,#02
       CALL_2N         R0489 (S024)
       SUB             L07,#11 -> L08
       SET_CURSOR      #03,L08
       JE              G23,#01 [FALSE] L0010
       CALL_2N         R0489 (S022)
       JUMP            L0011
L0010: CALL_2N         R0489 (S023)
L0011: SET_TEXT_STYLE  ROMAN
       SET_CURSOR      #05,#02
       LOADW           #00,#08 -> Gef
       OR              #02,Gef -> Gef
       STOREW          #00,#08,Gef
       CALL_VS         R0469 (L00,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0012
       CALL_2N         R0489 (L00)
       JUMP            L0013
L0012: CALL_VN         R0465 (L00,#45)
L0013: JE              L06,L09 [TRUE] L0015
       JG              L09,#00 [FALSE] L0014
       SET_CURSOR      L09,#04
       PRINT           " "
L0014: SET_CURSOR      L06,#04
       PRINT           ">"
L0015: STORE           L09,L06
       READ_CHAR       #01 -> L0a
       JE              L0a,#4e,#6e,#82 [FALSE] L0017
       INC             L06
       ADD             #07,L03 -> -(SP)
       JE              L06,(SP)+ [FALSE] L0016
       STORE           L06,#07
L0016: JUMP            L0013
L0017: JE              L0a,#50,#70,#81 [FALSE] L0019
       DEC             L06
       JE              L06,#06 [FALSE] L0018
       ADD             #06,L03 -> L06
L0018: JUMP            L0013
L0019: JE              L0a,#51,#71,#1b [TRUE] L0020
       JE              L0a,#83 [FALSE] L0021
L0020: JUMP            L0028
L0021: JE              L0a,#0a,#0d,#84 [FALSE] L0027
       SET_WINDOW      #00
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       SUB             L06,#06 -> G24
       CALL_VN         R0465 (L01,#45)
       ERASE_WINDOW    #ffff
       SPLIT_WINDOW    #01
       CALL_VS         R0483 (#00,#21) -> L07
       JZ              L07 [FALSE] L0022
       STORE           L07,#50
L0022: SET_WINDOW      #01
       SET_CURSOR      #01,#01
       SET_TEXT_STYLE  REVERSE
       STORE           Gef,L07
       JL              Gef,#01 [TRUE] L0024
L0023: PRINT_CHAR      ' '
       DEC             Gef
       JZ              Gef [FALSE] L0023
L0024: DIV             L07,#02 -> -(SP)
       SUB             (SP)+,G25 -> L08
       SET_CURSOR      #01,L08
       CALL_2N         R0489 (G26)
       SET_TEXT_STYLE  ROMAN
       SET_WINDOW      #00
       NEW_LINE        
       CALL_VS         R0465 (L02,#45) -> L07
       JE              L07,#02 [FALSE] L0025
       JUMP            L0002
L0025: JE              L07,#03 [FALSE] L0026
       JUMP            L0028
L0026: CALL_VN         R0285 (#1007,#35)
       READ_CHAR       #01 -> L0a
       JUMP            L0002
L0027: JUMP            L0013
L0028: DEC             G23
       JG              G23,#00 [TRUE] RFALSE
       LOADW           #00,#08 -> Gef
       AND             #fffd,Gef -> Gef
       STOREW          #00,#08,Gef
       SET_CURSOR      #01,#01
       ERASE_WINDOW    #ffff
       SET_WINDOW      #00
       NEW_LINE        
       NEW_LINE        
       NEW_LINE        
       JZ              G14 [FALSE] L0029
       CALL_2N         R0081 (#1f)
       RTRUE           
L0029: RTRUE           

Routine R0146, 6 locals

       STORE           L00,#01
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#15,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PROP_ADDR   Gee,#27 -> Gef
       STORE           L04,Gef
       JZ              L04 [TRUE] L0028
       JG              #01,L00 [TRUE] L0005
       JG              L00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,L00)
       JUMP            L0007
L0006: TEST_ATTR       L00,#03 [TRUE] L0028
L0007: CALL_VS         R0484 (L04,#00) -> -(SP)
       CALL_2S         R0088 ((SP)+) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0010
       CALL_VS         R0465 (L00,#27) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       CALL_VN         R0477 (L00,G00)
       JUMP            L0009
L0008: CALL_2N         R0478 (L00)
L0009: JUMP            L0028
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#16,L00)
       STORE           Gee,#02
       JUMP            L0013
L0012: STORE           Gee,L00
L0013: GET_PROP_ADDR   Gee,#27 -> Gef
       JZ              Gef [TRUE] L0014
       GET_PROP_LEN    Gef -> Gef
L0014: STORE           L01,Gef
       STORE           L02,#00
L0015: DIV             L01,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0024
       CALL_VS         R0484 (L04,L02) -> L03
       JE              L03,G00 [TRUE] L0018
       JG              #01,L03 [TRUE] L0016
       JG              L03,#0082 [FALSE] L0017
L0016: CALL_VN         R0471 (#02,L03)
       JUMP            L0023
L0017: JIN             L03,G00 [FALSE] L0023
L0018: JG              #01,L00 [TRUE] L0019
       JG              L00,#0082 [FALSE] L0020
L0019: CALL_VN         R0471 (#02,L00)
       JUMP            L0021
L0020: JIN             L00,G00 [TRUE] L0022
L0021: CALL_VN         R0477 (L00,G00)
L0022: STORE           L05,#01
L0023: INC             L02
       JUMP            L0015
L0024: JZ              L05 [FALSE] L0028
       JG              #05,L00 [TRUE] L0025
       JG              L00,#0082 [TRUE] L0025
       JIN             L00,"Class" [FALSE] L0026
L0025: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L00
L0027: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0028
       CALL_2N         R0478 (L00)
L0028: INC             L00
       JG              L00,#0082 [TRUE] L0029
       JUMP            L0001
L0029: RTRUE           

Routine R0147, 2 locals

       CALL_VN         R0477 (G13,L00)
L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0082 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JG              #05,L00 [TRUE] L0005
       JG              L00,#0082 [TRUE] L0005
       JIN             L00,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L00
L0007: GET_PARENT      Gee -> L00
       JUMP            L0001
L0008: STORE           G00,L00
       STORE           G16,G00
       CALL_1N         R0146
       CALL_2N         R0100 (#01)
       JZ              L01 [FALSE] L0009
       CALL_2N         R0081 (#1f)
L0009: JE              L01,#01 [FALSE] L0010
       CALL_1N         R0197
       CALL_1N         R0198
L0010: JE              L01,#02 [FALSE] L0011
       CALL_2N         R0200 (#01)
L0011: RTRUE           

Routine R0148, 1 local

       CALL_VN         R0081 (#1b,L00)
       CALL_2N         R0081 (#1f)
       RTRUE           

Routine R0149, 1 local

L0001: JZ              G00 [TRUE] L0005
       JG              #05,G13 [TRUE] L0002
       JG              G13,#0082 [TRUE] L0002
       JIN             G13,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G13
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: STORE           Gec,#1fe2
       STOREB          Gec,#01,#00
       READ            Gec,#205b -> Gef
       JUMP            L0007
L0006: STORE           Gec,#1fe2
       STOREB          Gec,#01,#00
       CALL_1N         R0113
       READ            Gec,#205b -> Gef
L0007: JL              #01,#00 [TRUE] L0008
       JL              #01,#20 [TRUE] L0009
L0008: CALL_VN2        R0471 (#1d,#01,#40,#08,#0e)
       JUMP            L0010
L0009: LOADW           #205b,#01 -> L00
L0010: JE              L00,"y","yes","yes" [TRUE] RTRUE
       JE              L00,"n","no","no" [TRUE] RFALSE
       CALL_VN         R0285 (#01,#01)
       PRINT           "> "
       JUMP            L0001

Routine R0150, 0 locals
    Action routine for:
        "die"

       CALL_VN         R0285 (#01,#02)
       CALL_1S         R0149 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       QUIT            
L0001: RTRUE           

Routine R0151, 0 locals
    Action routine for:
        "restart"

       CALL_VN         R0285 (#02,#01)
       CALL_1S         R0149 -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RESTART         
       CALL_VN         R0285 (#02,#02)
L0001: RTRUE           

Routine R0152, 0 locals
    Action routine for:
        "restore"

       RESTORE         -> Gef
       JE              Gef,#02 [TRUE] L0001
       CALL_VS         R0285 (#03,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0285 (#03,#02)
       RTRUE           

Routine R0153, 1 local
    Action routine for:
        "save"

       SAVE            -> L00
       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       CALL_VN         R0285 (#04,#01)
       JUMP            L0003
L0001: JE              Gef,#01 [FALSE] L0002
       CALL_VN         R0285 (#04,#02)
       JUMP            L0003
L0002: JE              Gef,#02 [FALSE] L0003
       CALL_VN         R0285 (#03,#02)
L0003: RTRUE           

Routine R0154, 0 locals
    Action routine for:
        "verify"

       VERIFY          [TRUE] L0001
       JUMP            L0002
L0001: CALL_VS         R0285 (#05,#01) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0285 (#05,#02)
       RTRUE           

Routine R0155, 0 locals
    Action routine for:
        "script"
        "script on"

       CALL_VS         R0484 (#00,#08) -> -(SP)
       AND             (SP)+,#01 -> G07
       JZ              G07 [TRUE] L0001
       CALL_VS         R0285 (#06,#01) -> -(SP)
       RET_POPPED      
L0001: OUTPUT_STREAM   SCRIPTING_ENABLE
       CALL_VS         R0484 (#00,#08) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0285 (#06,#03) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0285 (#06,#02)
       CALL_1N         R0132
       STORE           G07,#01
       RTRUE           

Routine R0156, 0 locals
    Action routine for:
        "script off"
        "noscript"

       CALL_VS         R0484 (#00,#08) -> -(SP)
       AND             (SP)+,#01 -> G07
       JZ              G07 [FALSE] L0001
       CALL_VS         R0285 (#07,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0285 (#07,#02)
       OUTPUT_STREAM   #fffe
       CALL_VS         R0484 (#00,#08) -> -(SP)
       AND             (SP)+,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VS         R0285 (#07,#03) -> -(SP)
       RET_POPPED      
L0002: STORE           G07,#00
       RTRUE           

Routine R0157, 0 locals
    Action routine for:
        "notify on"

       STORE           G10,#01
       CALL_2N         R0285 (#08)
       RTRUE           

Routine R0158, 0 locals
    Action routine for:
        "notify off"

       STORE           G10,#00
       CALL_2N         R0285 (#09)
       RTRUE           

Routine R0159, 3 locals

       CALL_2N         R0285 (#0a)
       STORE           L00,#01
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#1a [FALSE] L0004
       INC             L01
L0004: INC             L00
       JG              L00,#0082 [TRUE] L0005
       JUMP            L0001
L0005: STORE           L00,#01
L0006: JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0011
L0008: TEST_ATTR       L00,#1a [FALSE] L0011
       CALL_2N         R0119 (L00)
       INC             L02
       JE              L02,L01 [FALSE] L0009
       PRINT_RET       "."
L0009: SUB             L01,#01 -> -(SP)
       JE              L02,(SP)+ [FALSE] L0010
       CALL_2N         R0489 (S040)
       JUMP            L0011
L0010: PRINT           ", "
L0011: INC             L00
       JG              L00,#0082 [TRUE] L0012
       JUMP            L0006
L0012: RTRUE           

Routine R0160, 3 locals

       CALL_VN         R0285 (#0b,#01)
       STORE           L00,#01
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0028
L0003: TEST_ATTR       L00,#0e [FALSE] L0028
       STORE           L02,#01
       CALL_2N         R0117 (L00)
       JG              #05,L00 [TRUE] L0004
       JG              L00,#0082 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_PARENT      Gee -> L01
       JZ              L01 [TRUE] L0026
       JE              L01,G13 [FALSE] L0011
       JG              #01,L00 [TRUE] L0007
       JG              L00,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0008: TEST_ATTR       L00,#1c [FALSE] L0009
       CALL_VN         R0285 (#0b,#03)
       JUMP            L0010
L0009: CALL_VN         R0285 (#0b,#04)
L0010: JUMP            L0027
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#02 [FALSE] L0014
       CALL_VN         R0285 (#0b,#05)
       JUMP            L0027
L0014: JG              #01,L01 [TRUE] L0015
       JG              L01,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L01)
       JUMP            L0017
L0016: TEST_ATTR       L01,#1a [FALSE] L0017
       CALL_VN         R0285 (#0b,#06,L01)
       JUMP            L0027
L0017: JG              #01,L01 [TRUE] L0018
       JG              L01,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L01)
       JUMP            L0020
L0019: TEST_ATTR       L01,#06 [FALSE] L0020
       CALL_VN         R0285 (#0b,#08,L01)
       JUMP            L0027
L0020: JG              #01,L01 [TRUE] L0021
       JG              L01,#0082 [FALSE] L0022
L0021: CALL_VN         R0471 (#03,L01)
       JUMP            L0023
L0022: TEST_ATTR       L01,#16 [FALSE] L0023
       CALL_VN         R0285 (#0b,#09,L01)
       JUMP            L0027
L0023: JG              #01,L01 [TRUE] L0024
       JG              L01,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#03,L01)
       JUMP            L0026
L0025: TEST_ATTR       L01,#09 [FALSE] L0026
       CALL_VN         R0285 (#0b,#07,L01)
       JUMP            L0027
L0026: CALL_VN         R0285 (#0b,#0a)
L0027: NEW_LINE        
L0028: INC             L00
       JG              L00,#0082 [TRUE] L0029
       JUMP            L0001
L0029: JZ              L02 [FALSE] L0030
       CALL_VN         R0285 (#0b,#02)
L0030: RTRUE           

Routine R0161, 0 locals
    Action routine for:
        "score"

       CALL_2N         R0285 (#0c)
       CALL_1N         R0460
       RTRUE           

Routine R0162, 1 local

       JL              L00,#00 [TRUE] L0001
       JL              L00,#28 [TRUE] L0002
L0001: CALL_VN2        R0471 (#1c,L00,#13,#05,#1a)
       PUSH            #00
       JUMP            L0003
L0002: LOADB           #2487,L00 -> -(SP)
L0003: JZ              (SP)+ [FALSE] L0010
       JL              L00,#00 [TRUE] L0004
       JL              L00,#28 [TRUE] L0005
L0004: CALL_VN2        R0471 (#1e,L00,#13,#05,#1a)
       JUMP            L0006
L0005: STOREB          #2487,L00,#01
L0006: JL              L00,#00 [TRUE] L0007
       JL              L00,#16 [TRUE] L0008
L0007: CALL_VN2        R0471 (#1c,L00,#15,#00,#00)
       PUSH            #00
       JUMP            L0009
L0008: LOADB           #1c0c,L00 -> -(SP)
L0009: ADD             G0e,(SP)+ -> G0e
L0010: RTRUE           

Routine R0163, 2 locals

       PRINT           "  "
       STORE           L01,L00
       JL              L01,#00 [FALSE] L0001
       SUB             #00,L00 -> L01
       MUL             L01,#0a -> L01
L0001: JL              L01,#0a [FALSE] L0002
       PRINT           "   "
       JUMP            L0004
L0002: JL              L01,#64 [FALSE] L0003
       PRINT           "  "
       JUMP            L0004
L0003: JL              L01,#03e8 [FALSE] L0004
       PRINT           " "
L0004: PRINT_NUM       L00
       PRINT           " "
       RTRUE           

Routine R0164, 1 local
    Action routine for:
        "full"
        "full score"

       CALL_1N         R0161
       JZ              G0e [TRUE] RFALSE
       JZ              #00 [FALSE] RFALSE
       NEW_LINE        
       CALL_VN         R0285 (#0d,#01)
       STORE           L00,#00
L0001: JL              L00,#14 [FALSE] L0009
       JL              L00,#00 [TRUE] L0002
       JL              L00,#28 [TRUE] L0003
L0002: CALL_VN2        R0471 (#1c,L00,#13,#05,#1a)
       PUSH            #00
       JUMP            L0004
L0003: LOADB           #2487,L00 -> -(SP)
L0004: JE              (SP)+,#01 [FALSE] L0008
       JL              L00,#00 [TRUE] L0005
       JL              L00,#16 [TRUE] L0006
L0005: CALL_VN2        R0471 (#1c,L00,#15,#00,#00)
       PUSH            #00
       JUMP            L0007
L0006: LOADB           #1c0c,L00 -> -(SP)
L0007: CALL_2N         R0163 ((SP)+)
       CALL_2N         R0287 (L00)
L0008: INC             L00
       JUMP            L0001
L0009: JZ              G12 [TRUE] L0010
       CALL_2N         R0163 (G12)
       CALL_VN         R0285 (#0d,#02)
L0010: JZ              G11 [TRUE] L0011
       CALL_2N         R0163 (G11)
       CALL_VN         R0285 (#0d,#03)
L0011: NEW_LINE        
       CALL_2N         R0163 (G0e)
       CALL_VN         R0285 (#0d,#04)
       RTRUE           

Routine R0165, 0 locals
    Action routine for:
        "i wide"

       STORE           G21,#1c
       CALL_2N         R0081 (#0e)
       RTRUE           

Routine R0166, 0 locals
    Action routine for:
        "i tall"

       STORE           G21,#17
       CALL_2N         R0081 (#0e)
       RTRUE           

Routine R0167, 1 local
    Action routine for:
        "carry inventory"
        "i"

       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#06,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0285 (#0e,#01) -> -(SP)
       RET_POPPED      
L0005: JZ              G21 [FALSE] L0006
       CALL_1S         R0166 -> -(SP)
       RET_POPPED      
L0006: CALL_VN         R0285 (#0e,#02)
       AND             G21,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0007
       PRINT           ":
"
       JUMP            L0008
L0007: PRINT           " "
L0008: JG              #05,G13 [TRUE] L0009
       JG              G13,#0082 [TRUE] L0009
       JIN             G13,"Class" [FALSE] L0010
L0009: CALL_VN         R0471 (#06,G13)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,G13
L0011: GET_CHILD       Gee -> -(SP) [FALSE] L0012
L0012: CALL_VN         R0140 ((SP)+,G21,#01)
       AND             G21,#08 -> -(SP)
       JZ              (SP)+ [TRUE] L0013
       PRINT           ".
"
L0013: JG              #05,G13 [TRUE] L0014
       JG              G13,#0082 [TRUE] L0014
       JIN             G13,"Class" [FALSE] L0015
L0014: CALL_VN         R0471 (#06,G13)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,G13
L0016: GET_CHILD       Gee -> -(SP) [FALSE] L0017
L0017: PULL            L00
       JZ              L00 [TRUE] L0022
L0018: CALL_2N         R0075 (L00)
       JG              #05,L00 [TRUE] L0019
       JG              L00,#0082 [TRUE] L0019
       JIN             L00,"Class" [FALSE] L0020
L0019: CALL_VN         R0471 (#0d,L00)
       JUMP            L0022
L0020: JIN             L00,G13 [TRUE] L0021
       CALL_VN         R0471 (#20,L00)
       JUMP            L0022
L0021: GET_SIBLING     L00 -> L00 [TRUE] L0018
L0022: STORE           L00,#00
       CALL_1N         R0086
       RTRUE           

Routine R0168, 4 locals

       STORE           L02,L00
L0001: JZ              L02 [TRUE] L0011
       STORE           L03,L01
L0002: JZ              L03 [TRUE] L0007
       JE              L03,L02 [FALSE] L0003
       RET             L02
L0003: JG              #05,L03 [TRUE] L0004
       JG              L03,#0082 [TRUE] L0004
       JIN             L03,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#04,L03)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L03
L0006: GET_PARENT      Gee -> L03
       JUMP            L0002
L0007: JG              #05,L02 [TRUE] L0008
       JG              L02,#0082 [TRUE] L0008
       JIN             L02,"Class" [FALSE] L0009
L0008: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,L02
L0010: GET_PARENT      Gee -> L02
       JUMP            L0001
L0011: RFALSE          

Routine R0169, 2 locals

L0001: JZ              L01 [TRUE] L0005
       JE              L00,L01 [TRUE] RTRUE
       JG              #05,L01 [TRUE] L0002
       JG              L01,#0082 [TRUE] L0002
       JIN             L01,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L01
L0004: GET_PARENT      Gee -> L01
       JUMP            L0001
L0005: RFALSE          

Routine R0170, 6 locals

       STORE           L01,L00
L0001: JG              #05,L01 [TRUE] L0002
       JG              L01,#0082 [TRUE] L0002
       JIN             L01,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L01
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JG              #05,L01 [TRUE] L0005
       JG              L01,#0082 [TRUE] L0005
       JIN             L01,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L01
L0007: GET_PARENT      Gee -> L01
       JUMP            L0001
L0008: STORE           L02,#01
L0009: JG              #01,L02 [TRUE] L0010
       JG              L02,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#15,L02)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L02
L0012: GET_PROP_ADDR   Gee,#18 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0023
       JG              #01,L02 [TRUE] L0013
       JG              L02,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#15,L02)
       STORE           Gee,#02
       JUMP            L0015
L0014: STORE           Gee,L02
L0015: GET_PROP_ADDR   Gee,#18 -> Gef
       STORE           L04,Gef
       JG              #01,L02 [TRUE] L0016
       JG              L02,#0082 [FALSE] L0017
L0016: CALL_VN         R0471 (#16,L02)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L02
L0018: GET_PROP_ADDR   Gee,#18 -> Gef
       JZ              Gef [TRUE] L0019
       GET_PROP_LEN    Gef -> Gef
L0019: PUSH            Gef
       DIV             (SP)+,#02 -> L03
       CALL_VS         R0484 (L04,#00) -> -(SP)
       CALL_VS         R0469 ((SP)+,#03) -> -(SP)
       JZ              (SP)+ [TRUE] L0020
       JUMP            L0023
L0020: STORE           L05,#00
L0021: JL              L05,L03 [FALSE] L0023
       CALL_VS         R0484 (L04,L05) -> -(SP)
       JE              (SP)+,L01 [FALSE] L0022
       RET             L02
L0022: INC             L05
       JUMP            L0021
L0023: INC             L02
       JG              L02,#0082 [TRUE] L0024
       JUMP            L0009
L0024: RFALSE          

Routine R0171, 5 locals

       CALL_2S         R0170 (L00) -> L04
       JZ              L04 [TRUE] L0001
       CALL_2S         R0171 (L04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0168 (G13,L00) -> L03
       JE              G13,L03 [TRUE] L0015
       JG              #05,G13 [TRUE] L0002
       JG              G13,#0082 [TRUE] L0002
       JIN             G13,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G13
L0004: GET_PARENT      Gee -> L04
L0005: JE              L04,L03 [TRUE] L0015
       JG              #01,L04 [TRUE] L0006
       JG              L04,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,L04)
       JUMP            L0011
L0007: TEST_ATTR       L04,#06 [FALSE] L0011
       JG              #01,L04 [TRUE] L0008
       JG              L04,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,L04)
       JUMP            L0010
L0009: TEST_ATTR       L04,#10 [TRUE] L0011
L0010: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#0f,#09,L04) -> -(SP)
       RET_POPPED      
L0011: JG              #05,L04 [TRUE] L0012
       JG              L04,#0082 [TRUE] L0012
       JIN             L04,"Class" [FALSE] L0013
L0012: CALL_VN         R0471 (#04,L04)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L04
L0014: GET_PARENT      Gee -> L04
       JUMP            L0005
L0015: JE              L00,L03 [TRUE] L0042
       JG              #05,L00 [TRUE] L0016
       JG              L00,#0082 [TRUE] L0016
       JIN             L00,"Class" [FALSE] L0017
L0016: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L00
L0018: GET_PARENT      Gee -> L04
L0019: JE              L04,L03 [TRUE] L0042
       JZ              L02 [TRUE] L0032
       JG              #01,L04 [TRUE] L0020
       JG              L04,#0082 [FALSE] L0021
L0020: CALL_VN         R0471 (#03,L04)
       JUMP            L0022
L0021: TEST_ATTR       L04,#06 [TRUE] L0032
L0022: JG              #01,L04 [TRUE] L0023
       JG              L04,#0082 [FALSE] L0024
L0023: CALL_VN         R0471 (#03,L04)
       JUMP            L0025
L0024: TEST_ATTR       L04,#16 [TRUE] L0032
L0025: JG              #01,L04 [TRUE] L0026
       JG              L04,#0082 [FALSE] L0027
L0026: CALL_VN         R0471 (#03,L04)
       JUMP            L0028
L0027: TEST_ATTR       L04,#02 [FALSE] L0028
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#0f,#06,L04) -> -(SP)
       RET_POPPED      
L0028: JG              #01,L04 [TRUE] L0029
       JG              L04,#0082 [FALSE] L0030
L0029: CALL_VN         R0471 (#03,L04)
       JUMP            L0031
L0030: TEST_ATTR       L04,#19 [FALSE] L0031
       JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#0f,#07,L04) -> -(SP)
       RET_POPPED      
L0031: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#0f,#08,L00) -> -(SP)
       RET_POPPED      
L0032: JG              #01,L04 [TRUE] L0033
       JG              L04,#0082 [FALSE] L0034
L0033: CALL_VN         R0471 (#03,L04)
       JUMP            L0038
L0034: TEST_ATTR       L04,#06 [FALSE] L0038
       JG              #01,L04 [TRUE] L0035
       JG              L04,#0082 [FALSE] L0036
L0035: CALL_VN         R0471 (#03,L04)
       JUMP            L0037
L0036: TEST_ATTR       L04,#10 [TRUE] L0038
L0037: JZ              L01 [FALSE] RTRUE
       CALL_VS         R0285 (#0f,#09,L04) -> -(SP)
       RET_POPPED      
L0038: JG              #05,L04 [TRUE] L0039
       JG              L04,#0082 [TRUE] L0039
       JIN             L04,"Class" [FALSE] L0040
L0039: CALL_VN         R0471 (#04,L04)
       STORE           Gee,#02
       JUMP            L0041
L0040: STORE           Gee,L04
L0041: GET_PARENT      Gee -> L04
       JUMP            L0019
L0042: RFALSE          

Routine R0172, 6 locals

       JE              L00,G13 [FALSE] L0001
       CALL_VS         R0285 (#0f,#02) -> -(SP)
       RET_POPPED      
L0001: JG              #01,L00 [TRUE] L0002
       JG              L00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,L00)
       JUMP            L0004
L0003: TEST_ATTR       L00,#02 [FALSE] L0004
       CALL_VS         R0285 (#0f,#03,L00) -> -(SP)
       RET_POPPED      
L0004: CALL_VS         R0168 (G13,L00) -> L01
       JZ              L01 [FALSE] L0005
       CALL_2S         R0170 (L00) -> L03
       JZ              L03 [TRUE] L0005
       CALL_VS         R0168 (G13,L03) -> L01
L0005: JZ              L01 [FALSE] L0006
       CALL_VS         R0285 (#0f,#08,L00) -> -(SP)
       RET_POPPED      
L0006: JE              L01,L00 [FALSE] L0007
       CALL_VS         R0285 (#0f,#04,L00) -> -(SP)
       RET_POPPED      
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#02,L00)
       JUMP            L0010
L0009: JIN             L00,G13 [FALSE] L0010
       CALL_VS         R0285 (#0f,#05,L00) -> -(SP)
       RET_POPPED      
L0010: CALL_VS         R0171 (L00,#00,#01) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       RTRUE           
L0011: JG              #05,L00 [TRUE] L0012
       JG              L00,#0082 [TRUE] L0012
       JIN             L00,"Class" [FALSE] L0013
L0012: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_PARENT      Gee -> L03
       JE              L03,L01 [TRUE] L0022
       JG              #01,L03 [TRUE] L0015
       JG              L03,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L03)
       JUMP            L0017
L0016: TEST_ATTR       L03,#06 [TRUE] L0020
L0017: JG              #01,L03 [TRUE] L0018
       JG              L03,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L03)
       JUMP            L0022
L0019: TEST_ATTR       L03,#16 [FALSE] L0022
L0020: STORE           L02,L03
       STORE           L05,G2b
       STORE           G2b,#1000
       CALL_VS         R0091 (L03,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0021
       STORE           G2b,L05
       RTRUE           
L0021: STORE           G2b,L05
L0022: JG              #01,L00 [TRUE] L0023
       JG              L00,#0082 [FALSE] L0024
L0023: CALL_VN         R0471 (#03,L00)
       JUMP            L0025
L0024: TEST_ATTR       L00,#13 [FALSE] L0025
       CALL_VS         R0285 (#0f,#0a,L00) -> -(SP)
       RET_POPPED      
L0025: JG              #01,L00 [TRUE] L0026
       JG              L00,#0082 [FALSE] L0027
L0026: CALL_VN         R0471 (#03,L00)
       JUMP            L0028
L0027: TEST_ATTR       L00,#15 [FALSE] L0028
       CALL_VS         R0285 (#0f,#0b,L00) -> -(SP)
       RET_POPPED      
L0028: STORE           L05,#00
       JG              #05,G13 [TRUE] L0029
       JG              G13,#0082 [TRUE] L0029
       JIN             G13,"Class" [FALSE] L0030
L0029: CALL_VN         R0471 (#06,G13)
       STORE           Gee,#02
       JUMP            L0031
L0030: STORE           Gee,G13
L0031: GET_CHILD       Gee -> -(SP) [FALSE] L0032
L0032: PULL            L04
       JZ              L04 [TRUE] L0041
L0033: JG              #01,L04 [TRUE] L0034
       JG              L04,#0082 [FALSE] L0035
L0034: CALL_VN         R0471 (#03,L04)
       JUMP            L0036
L0035: TEST_ATTR       L04,#1c [TRUE] L0037
L0036: INC             L05
L0037: JG              #05,L04 [TRUE] L0038
       JG              L04,#0082 [TRUE] L0038
       JIN             L04,"Class" [FALSE] L0039
L0038: CALL_VN         R0471 (#0d,L04)
       JUMP            L0041
L0039: JIN             L04,G13 [TRUE] L0040
       CALL_VN         R0471 (#20,L04)
       JUMP            L0041
L0040: GET_SIBLING     L04 -> L04 [TRUE] L0033
L0041: CALL_VS         R0090 (G13,#2d) -> -(SP)
       JL              L05,(SP)+ [TRUE] L0067
       JZ              #00 [TRUE] L0066
       JG              #05,#00 [TRUE] L0042
       JG              #00,#0082 [TRUE] L0042
       JIN             #00,"Class" [FALSE] L0043
L0042: CALL_VN         R0471 (#04,#00)
       STORE           Gee,#02
       JUMP            L0044
L0043: STORE           Gee,#00
L0044: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0045
       CALL_VS         R0285 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0045: STORE           L04,#00
       JG              #05,G13 [TRUE] L0046
       JG              G13,#0082 [TRUE] L0046
       JIN             G13,"Class" [FALSE] L0047
L0046: CALL_VN         R0471 (#06,G13)
       STORE           Gee,#02
       JUMP            L0048
L0047: STORE           Gee,G13
L0048: GET_CHILD       Gee -> -(SP) [FALSE] L0049
L0049: PULL            L05
       JZ              L05 [TRUE] L0061
L0050: JZ              L05 [TRUE] L0057
       JG              #01,L05 [TRUE] L0051
       JG              L05,#0082 [FALSE] L0052
L0051: CALL_VN         R0471 (#03,L05)
       JUMP            L0053
L0052: TEST_ATTR       L05,#1c [TRUE] L0057
L0053: JG              #01,L05 [TRUE] L0054
       JG              L05,#0082 [FALSE] L0055
L0054: CALL_VN         R0471 (#03,L05)
       JUMP            L0056
L0055: TEST_ATTR       L05,#0b [TRUE] L0057
L0056: STORE           L04,L05
L0057: JG              #05,L05 [TRUE] L0058
       JG              L05,#0082 [TRUE] L0058
       JIN             L05,"Class" [FALSE] L0059
L0058: CALL_VN         R0471 (#0d,L05)
       JUMP            L0061
L0059: JIN             L05,G13 [TRUE] L0060
       CALL_VN         R0471 (#20,L05)
       JUMP            L0061
L0060: GET_SIBLING     L05 -> L05 [TRUE] L0050
L0061: JZ              L04 [TRUE] L0064
       CALL_VN         R0285 (#0f,#0d,L04)
       STORE           G30,#01
       CALL_VN         R0081 (#13,L04,#00)
       STORE           G30,#00
       JG              #01,L04 [TRUE] L0062
       JG              L04,#0082 [FALSE] L0063
L0062: CALL_VN         R0471 (#02,L04)
       RTRUE           
L0063: JIN             L04,#00 [FALSE] RTRUE
       JUMP            L0065
L0064: CALL_VS         R0285 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0065: JUMP            L0067
L0066: CALL_VS         R0285 (#0f,#0c) -> -(SP)
       RET_POPPED      
L0067: CALL_VN         R0477 (L00,G13)
       JZ              L02 [TRUE] L0069
       STORE           L05,G2b
       STORE           G2b,#1000
       CALL_VS         R0091 (L02,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0068
       STORE           G2b,L05
       RTRUE           
L0068: STORE           G2b,L05
L0069: RFALSE          

Routine R0173, 0 locals
    Action routine for:
        "carry multi"
        "get multi"
        "pick up multi"
        "pick multi up"
        "remove multi"
        "peel noun"
        "peel off noun"

       JZ              G43 [TRUE] L0003
       JG              #01,G2e [TRUE] L0001
       JG              G2e,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,G2e)
       JUMP            L0003
L0002: JIN             G2e,G13 [TRUE] L0004
L0003: CALL_2S         R0172 (G2e) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
L0004: CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G42,G43
       JE              G42,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#0f,#01)
       RTRUE           

Routine R0174, 1 local
    Action routine for:
        "carry multiinside from noun"
        "carry multiinside off noun"
        "get multiinside from noun"
        "remove multiinside from noun"

       JG              #05,G2e [TRUE] L0001
       JG              G2e,#0082 [TRUE] L0001
       JIN             G2e,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G2e
L0003: GET_PARENT      Gee -> L00
       JG              #01,L00 [TRUE] L0004
       JG              L00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,L00)
       JUMP            L0009
L0005: TEST_ATTR       L00,#06 [FALSE] L0009
       JG              #01,L00 [TRUE] L0006
       JG              L00,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,L00)
       JUMP            L0008
L0007: TEST_ATTR       L00,#10 [TRUE] L0009
L0008: CALL_VS         R0285 (#11,#01,G2e) -> -(SP)
       RET_POPPED      
L0009: JE              L00,G2f [TRUE] L0010
       CALL_VS         R0285 (#11,#02,G2e) -> -(SP)
       RET_POPPED      
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#02 [FALSE] L0013
       CALL_VS         R0285 (#0f,#06,L00) -> -(SP)
       RET_POPPED      
L0013: CALL_2S         R0172 (G2e) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       STORE           G2b,#11
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       STORE           G2b,#0f
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VS         R0285 (#11,#03,G2e) -> -(SP)
       RET_POPPED      

Routine R0175, 0 locals
    Action routine for:
        "put down multiheld"
        "put multiheld down"
        "discard multiheld"

       JE              G2e,G13 [FALSE] L0001
       CALL_VS         R0285 (#12,#04) -> -(SP)
       RET_POPPED      
L0001: JG              #05,G13 [TRUE] L0002
       JG              G13,#0082 [TRUE] L0002
       JIN             G13,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G13
L0004: GET_PARENT      Gee -> -(SP)
       JG              #01,G2e [TRUE] L0005
       JG              G2e,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#02,G2e)
       JUMP            L0007
L0006: JIN             G2e,(SP)+ [FALSE] L0007
       CALL_VS         R0285 (#10,#01,G2e) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#02,G2e)
       JUMP            L0010
L0009: JIN             G2e,G13 [TRUE] L0011
L0010: CALL_VS         R0285 (#10,#02,G2e) -> -(SP)
       RET_POPPED      
L0011: JG              #01,G2e [TRUE] L0012
       JG              G2e,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,G2e)
       JUMP            L0018
L0013: TEST_ATTR       G2e,#1c [FALSE] L0018
       CALL_VN         R0285 (#10,#03,G2e)
       CALL_VN         R0081 (#29,G2e)
       JG              #01,G2e [TRUE] L0014
       JG              G2e,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,G2e)
       JUMP            L0018
L0015: TEST_ATTR       G2e,#1c [FALSE] L0018
       JG              #01,G2e [TRUE] L0016
       JG              G2e,#0082 [FALSE] L0017
L0016: CALL_VN         R0471 (#02,G2e)
       JUMP            L0018
L0017: JIN             G2e,G13 [TRUE] RTRUE
L0018: JG              #05,G13 [TRUE] L0019
       JG              G13,#0082 [TRUE] L0019
       JIN             G13,"Class" [FALSE] L0020
L0019: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0021
L0020: STORE           Gee,G13
L0021: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0477 (G2e,(SP)+)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VS         R0285 (#10,#04,G2e) -> -(SP)
       RET_POPPED      

Routine R0176, 1 local
    Action routine for:
        "put multiexcept on / onto noun"
        "discard multiexcept on / onto noun"

       STORE           G32,#12
       JE              G2f,#12 [TRUE] L0003
       JG              #01,G13 [TRUE] L0001
       JG              G13,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,G13)
       JUMP            L0004
L0002: JIN             G13,G2f [FALSE] L0004
L0003: CALL_VN         R0081 (#10,G2e)
       RTRUE           
L0004: JG              #05,G2e [TRUE] L0005
       JG              G2e,#0082 [TRUE] L0005
       JIN             G2e,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G2e
L0007: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0008
       CALL_VS         R0285 (#12,#01,G2e) -> -(SP)
       RET_POPPED      
L0008: CALL_VS         R0168 (G2e,G2f) -> L00
       JE              L00,G2e [FALSE] L0009
       CALL_VS         R0285 (#12,#02,G2e) -> -(SP)
       RET_POPPED      
L0009: CALL_2S         R0171 (G2f) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       RTRUE           
L0010: JE              G2f,L00 [TRUE] L0012
       STORE           G2b,#1001
       CALL_VS         R0091 (G2f,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       STORE           G2b,#12
       RTRUE           
L0011: STORE           G2b,#12
L0012: JG              #01,G2f [TRUE] L0013
       JG              G2f,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#03,G2f)
       JUMP            L0015
L0014: TEST_ATTR       G2f,#16 [TRUE] L0016
L0015: CALL_VS         R0285 (#12,#03,G2f) -> -(SP)
       RET_POPPED      
L0016: JE              L00,G13 [FALSE] L0017
       CALL_VS         R0285 (#12,#04) -> -(SP)
       RET_POPPED      
L0017: JG              #01,G2e [TRUE] L0018
       JG              G2e,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,G2e)
       JUMP            L0022
L0019: TEST_ATTR       G2e,#1c [FALSE] L0022
       CALL_VN         R0285 (#12,#05,G2e)
       CALL_VN         R0081 (#29,G2e)
       JG              #01,G2e [TRUE] L0020
       JG              G2e,#0082 [FALSE] L0021
L0020: CALL_VN         R0471 (#03,G2e)
       JUMP            L0022
L0021: TEST_ATTR       G2e,#1c [FALSE] L0022
       RTRUE           
L0022: CALL_VS         R0090 (G2f,#2d) -> -(SP)
       JG              #05,G2f [TRUE] L0023
       JG              G2f,#0082 [TRUE] L0023
       JIN             G2f,"Class" [FALSE] L0024
L0023: CALL_VN         R0471 (#09,G2f)
       STORE           Gee,#02
       JUMP            L0025
L0024: STORE           Gee,G2f
L0025: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0027
L0026: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0026
L0027: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0028
       CALL_VS         R0285 (#12,#06,G2f) -> -(SP)
       RET_POPPED      
L0028: CALL_VN         R0477 (G2e,G2f)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [FALSE] L0029
       RTRUE           
L0029: JE              G2f,L00 [TRUE] L0031
       STORE           G2b,#1001
       CALL_VS         R0091 (G2f,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0030
       STORE           G2b,#12
       RTRUE           
L0030: STORE           G2b,#12
L0031: JE              G30,#01 [FALSE] L0032
       RTRUE           
L0032: JE              G3b,#01 [FALSE] L0033
       CALL_VS         R0285 (#12,#07) -> -(SP)
       RET_POPPED      
L0033: CALL_VN         R0285 (#12,#08,G2e)
       RTRUE           

Routine R0177, 1 local
    Action routine for:
        "put multiexcept in / inside / into noun"
        "insert multiexcept in / into noun"
        "discard multiexcept in / into / down noun"

       STORE           G32,#13
       JE              G2f,#12 [TRUE] L0003
       JG              #01,G13 [TRUE] L0001
       JG              G13,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,G13)
       JUMP            L0004
L0002: JIN             G13,G2f [FALSE] L0004
L0003: CALL_VN         R0081 (#10,G2e)
       RTRUE           
L0004: JG              #05,G2e [TRUE] L0005
       JG              G2e,#0082 [TRUE] L0005
       JIN             G2e,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G2e
L0007: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0008
       CALL_VS         R0285 (#13,#01,G2e) -> -(SP)
       RET_POPPED      
L0008: CALL_VS         R0168 (G2e,G2f) -> L00
       JE              L00,G2e [FALSE] L0009
       CALL_VS         R0285 (#13,#05,G2e) -> -(SP)
       RET_POPPED      
L0009: CALL_2S         R0171 (G2f) -> -(SP)
       JZ              (SP)+ [TRUE] L0010
       RTRUE           
L0010: JE              G2f,L00 [TRUE] L0017
       STORE           G2b,#1001
       CALL_VS         R0091 (G2f,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       STORE           G2b,#13
       RTRUE           
L0011: STORE           G2b,#13
       JG              #01,G2f [TRUE] L0012
       JG              G2f,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,G2f)
       JUMP            L0017
L0013: TEST_ATTR       G2f,#06 [FALSE] L0017
       JG              #01,G2f [TRUE] L0014
       JG              G2f,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,G2f)
       JUMP            L0016
L0015: TEST_ATTR       G2f,#10 [TRUE] L0017
L0016: CALL_VS         R0285 (#13,#03,G2f) -> -(SP)
       RET_POPPED      
L0017: JG              #01,G2f [TRUE] L0018
       JG              G2f,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,G2f)
       JUMP            L0020
L0019: TEST_ATTR       G2f,#06 [TRUE] L0021
L0020: CALL_VS         R0285 (#13,#02,G2f) -> -(SP)
       RET_POPPED      
L0021: JG              #01,G2e [TRUE] L0022
       JG              G2e,#0082 [FALSE] L0023
L0022: CALL_VN         R0471 (#03,G2e)
       JUMP            L0026
L0023: TEST_ATTR       G2e,#1c [FALSE] L0026
       CALL_VN         R0285 (#13,#06,G2e)
       CALL_VN         R0081 (#29,G2e)
       JG              #01,G2e [TRUE] L0024
       JG              G2e,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#03,G2e)
       JUMP            L0026
L0025: TEST_ATTR       G2e,#1c [FALSE] L0026
       RTRUE           
L0026: CALL_VS         R0090 (G2f,#2d) -> -(SP)
       JG              #05,G2f [TRUE] L0027
       JG              G2f,#0082 [TRUE] L0027
       JIN             G2f,"Class" [FALSE] L0028
L0027: CALL_VN         R0471 (#09,G2f)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,G2f
L0029: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0031
L0030: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0030
L0031: PULL            Gee
       PUSH            Gef
       JL              (SP)+,(SP)+ [TRUE] L0032
       CALL_VS         R0285 (#13,#07,G2f) -> -(SP)
       RET_POPPED      
L0032: CALL_VN         R0477 (G2e,G2f)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G2f,L00 [TRUE] L0034
       STORE           G2b,#1001
       CALL_VS         R0091 (G2f,#05) -> -(SP)
       JZ              (SP)+ [TRUE] L0033
       STORE           G2b,#13
       RTRUE           
L0033: STORE           G2b,#13
L0034: JE              G30,#01 [TRUE] RTRUE
       JE              G3b,#01 [FALSE] L0035
       CALL_VS         R0285 (#13,#08,G2e) -> -(SP)
       RET_POPPED      
L0035: CALL_VN         R0285 (#13,#09,G2e)
       RTRUE           

Routine R0178, 0 locals
    Action routine for:
        "transfer noun to noun"
        "clear noun to noun"

       JG              #01,G2e [TRUE] L0001
       JG              G2e,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,G2e)
       JUMP            L0003
L0002: JIN             G2e,G13 [TRUE] L0004
L0003: CALL_2S         R0172 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       RTRUE           
L0004: JG              #01,G2f [TRUE] L0005
       JG              G2f,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,G2f)
       JUMP            L0007
L0006: TEST_ATTR       G2f,#16 [FALSE] L0007
       CALL_VN         R0081 (#12,G2e,G2f)
       RTRUE           
L0007: JE              G2f,#12 [FALSE] L0008
       CALL_VN         R0081 (#10,G2e)
       RTRUE           
L0008: CALL_VN         R0081 (#13,G2e,G2f)
       RTRUE           

Routine R0179, 0 locals
    Action routine for:
        "empty noun"
        "empty out noun"
        "empty noun out"

       STORE           G2f,#12
       CALL_1N         R0180
       RTRUE           

Routine R0180, 4 locals
    Action routine for:
        "empty noun to / into / on / onto noun"

       JE              G2e,G2f [FALSE] L0001
       CALL_VS         R0285 (#14,#04) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: JG              #01,G2e [TRUE] L0003
       JG              G2e,#0082 [FALSE] L0004
L0003: CALL_VN         R0471 (#03,G2e)
       JUMP            L0005
L0004: TEST_ATTR       G2e,#06 [TRUE] L0006
L0005: CALL_VS         R0285 (#14,#01,G2e) -> -(SP)
       RET_POPPED      
L0006: JG              #01,G2e [TRUE] L0007
       JG              G2e,#0082 [FALSE] L0008
L0007: CALL_VN         R0471 (#03,G2e)
       JUMP            L0009
L0008: TEST_ATTR       G2e,#10 [TRUE] L0010
L0009: CALL_VS         R0285 (#14,#02,G2e) -> -(SP)
       RET_POPPED      
L0010: JE              G2f,#12 [TRUE] L0021
       JG              #01,G2f [TRUE] L0011
       JG              G2f,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,G2f)
       JUMP            L0013
L0012: TEST_ATTR       G2f,#16 [TRUE] L0021
L0013: JG              #01,G2f [TRUE] L0014
       JG              G2f,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,G2f)
       JUMP            L0016
L0015: TEST_ATTR       G2f,#06 [TRUE] L0017
L0016: CALL_VS         R0285 (#14,#01,G2f) -> -(SP)
       RET_POPPED      
L0017: JG              #01,G2f [TRUE] L0018
       JG              G2f,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,G2f)
       JUMP            L0020
L0019: TEST_ATTR       G2f,#10 [TRUE] L0021
L0020: CALL_VS         R0285 (#14,#02,G2f) -> -(SP)
       RET_POPPED      
L0021: JG              #05,G2e [TRUE] L0022
       JG              G2e,#0082 [TRUE] L0022
       JIN             G2e,"Class" [FALSE] L0023
L0022: CALL_VN         R0471 (#06,G2e)
       STORE           Gee,#02
       JUMP            L0024
L0023: STORE           Gee,G2e
L0024: GET_CHILD       Gee -> L00 [FALSE] L0025
L0025: JG              #05,G2e [TRUE] L0026
       JG              G2e,#0082 [TRUE] L0026
       JIN             G2e,"Class" [FALSE] L0027
L0026: CALL_VN         R0471 (#09,G2e)
       STORE           Gee,#02
       JUMP            L0028
L0027: STORE           Gee,G2e
L0028: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0030
L0029: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0029
L0030: PULL            Gee
       STORE           L02,Gef
       JZ              L00 [FALSE] L0031
       CALL_VS         R0285 (#14,#03,G2e) -> -(SP)
       RET_POPPED      
L0031: JZ              L00 [TRUE] L0059
       JG              #05,L00 [TRUE] L0032
       JG              L00,#0082 [TRUE] L0032
       JIN             L00,"Class" [FALSE] L0033
L0032: CALL_VN         R0471 (#08,L00)
       STORE           Gee,#02
       JUMP            L0034
L0033: STORE           Gee,L00
L0034: GET_SIBLING     Gee -> L01 [FALSE] L0035
L0035: STORE           L03,#00
       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0036
       STORE           L03,#01
L0036: JG              #01,G2e [TRUE] L0037
       JG              G2e,#0082 [FALSE] L0038
L0037: CALL_VN         R0471 (#03,G2e)
       JUMP            L0039
L0038: TEST_ATTR       G2e,#06 [TRUE] L0040
L0039: STORE           L03,#01
L0040: JG              #01,G2e [TRUE] L0041
       JG              G2e,#0082 [FALSE] L0042
L0041: CALL_VN         R0471 (#03,G2e)
       JUMP            L0043
L0042: TEST_ATTR       G2e,#10 [TRUE] L0044
L0043: STORE           L03,#01
L0044: JE              G2f,#12 [TRUE] L0055
       JG              #01,G2f [TRUE] L0045
       JG              G2f,#0082 [FALSE] L0046
L0045: CALL_VN         R0471 (#03,G2f)
       JUMP            L0047
L0046: TEST_ATTR       G2f,#16 [TRUE] L0055
L0047: JG              #01,G2f [TRUE] L0048
       JG              G2f,#0082 [FALSE] L0049
L0048: CALL_VN         R0471 (#03,G2f)
       JUMP            L0050
L0049: TEST_ATTR       G2f,#06 [TRUE] L0051
L0050: STORE           L03,#01
L0051: JG              #01,G2f [TRUE] L0052
       JG              G2f,#0082 [FALSE] L0053
L0052: CALL_VN         R0471 (#03,G2f)
       JUMP            L0054
L0053: TEST_ATTR       G2f,#10 [TRUE] L0055
L0054: STORE           L03,#01
L0055: PUSH            L02
       DEC             L02
       JZ              (SP)+ [FALSE] L0056
       STORE           L03,#01
L0056: JZ              L03 [TRUE] L0057
       JUMP            L0059
L0057: JZ              G30 [FALSE] L0058
       CALL_2N         R0119 (L00)
       PRINT           ": "
L0058: CALL_VN         R0081 (#5e,L00,G2f)
       STORE           L00,L01
       JUMP            L0031
L0059: RTRUE           

Routine R0181, 0 locals
    Action routine for:
        "feed held to creature"
        "feed creature held" REVERSE
        "feed over held to creature"

       JG              #05,G2e [TRUE] L0001
       JG              G2e,#0082 [TRUE] L0001
       JIN             G2e,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G2e
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0004
       CALL_VS         R0285 (#15,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: JE              G2f,G13 [FALSE] L0005
       CALL_VS         R0285 (#15,#02,G2e) -> -(SP)
       RET_POPPED      
L0005: CALL_VS         R0087 (G2f,#15) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#15,#03,G2f)
       RTRUE           

Routine R0182, 0 locals
    Action routine for:
        

       CALL_VN         R0081 (#15,G2f,G2e)
       RTRUE           

Routine R0183, 0 locals
    Action routine for:
        "display creature held" REVERSE
        "display held to creature"

       JG              #05,G2e [TRUE] L0001
       JG              G2e,#0082 [TRUE] L0001
       JIN             G2e,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G2e
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0004
       CALL_VS         R0285 (#16,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: JE              G2f,G13 [FALSE] L0005
       CALL_VN         R0081 (#20,G2e)
       RTRUE           
L0005: CALL_VS         R0087 (G2f,#16) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#16,#02,G2f)
       RTRUE           

Routine R0184, 0 locals
    Action routine for:
        

       CALL_VN         R0081 (#16,G2f,G2e)
       RTRUE           

Routine R0185, 3 locals
    Action routine for:
        "get in / into / on / onto noun"
        "stand on noun"
        "go noun"
        "go into / in / inside / through noun"
        "cross noun"
        "lie on top of noun"
        "lie on / in / inside noun"
        "dive into noun"
        "dive"

       JG              #01,G2e [TRUE] L0001
       JG              G2e,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,G2e)
       JUMP            L0003
L0002: TEST_ATTR       G2e,#07 [TRUE] L0006
L0003: JG              #01,G2e [TRUE] L0004
       JG              G2e,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#02,G2e)
       JUMP            L0007
L0005: JIN             G2e,"compass" [FALSE] L0007
L0006: CALL_VN         R0081 (#1b,G2e)
       RTRUE           
L0007: JG              #01,G13 [TRUE] L0008
       JG              G13,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#02,G13)
       JUMP            L0010
L0009: JIN             G13,G2e [FALSE] L0010
       CALL_VS         R0285 (#17,#01,G2e) -> -(SP)
       RET_POPPED      
L0010: JG              #01,G2e [TRUE] L0011
       JG              G2e,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,G2e)
       JUMP            L0013
L0012: TEST_ATTR       G2e,#09 [TRUE] L0014
L0013: CALL_VS         R0285 (#17,#02,G2e) -> -(SP)
       RET_POPPED      
L0014: JG              #01,G2e [TRUE] L0015
       JG              G2e,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,G2e)
       JUMP            L0020
L0016: TEST_ATTR       G2e,#06 [FALSE] L0020
       JG              #01,G2e [TRUE] L0017
       JG              G2e,#0082 [FALSE] L0018
L0017: CALL_VN         R0471 (#03,G2e)
       JUMP            L0019
L0018: TEST_ATTR       G2e,#10 [TRUE] L0020
L0019: CALL_VS         R0285 (#17,#03,G2e) -> -(SP)
       RET_POPPED      
L0020: JG              #05,G2e [TRUE] L0021
       JG              G2e,#0082 [TRUE] L0021
       JIN             G2e,"Class" [FALSE] L0022
L0021: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0023
L0022: STORE           Gee,G2e
L0023: GET_PARENT      Gee -> -(SP)
       JG              #05,G13 [TRUE] L0024
       JG              G13,#0082 [TRUE] L0024
       JIN             G13,"Class" [FALSE] L0025
L0024: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0026
L0025: STORE           Gee,G13
L0026: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] L0064
       CALL_VS         R0168 (G13,G2e) -> L00
       JE              L00,G13,#00 [FALSE] L0027
       CALL_VS         R0285 (#17,#04,G2e) -> -(SP)
       RET_POPPED      
L0027: JG              #01,G13 [TRUE] L0028
       JG              G13,#0082 [FALSE] L0029
L0028: CALL_VN         R0471 (#02,G13)
       JUMP            L0030
L0029: JIN             G13,L00 [TRUE] L0042
L0030: JG              #05,G13 [TRUE] L0031
       JG              G13,#0082 [TRUE] L0031
       JIN             G13,"Class" [FALSE] L0032
L0031: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0033
L0032: STORE           Gee,G13
L0033: GET_PARENT      Gee -> L01
       STORE           L02,G30
       JG              #05,L01 [TRUE] L0034
       JG              L01,#0082 [TRUE] L0034
       JIN             L01,"Class" [FALSE] L0035
L0034: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0036
L0035: STORE           Gee,L01
L0036: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,L00 [FALSE] L0037
       JE              G2e,L00 [TRUE] L0038
L0037: CALL_VN         R0285 (#17,#06,L01)
       STORE           G30,#01
L0038: CALL_2N         R0081 (#19)
       STORE           G30,L02
       JG              #01,G13 [TRUE] L0039
       JG              G13,#0082 [FALSE] L0040
L0039: CALL_VN         R0471 (#02,G13)
       JUMP            L0041
L0040: JIN             G13,L01 [FALSE] L0041
       RTRUE           
L0041: JUMP            L0027
L0042: JG              #01,G13 [TRUE] L0043
       JG              G13,#0082 [FALSE] L0044
L0043: CALL_VN         R0471 (#02,G13)
       JUMP            L0045
L0044: JIN             G13,G2e [FALSE] L0045
       RTRUE           
L0045: JG              #01,G2e [TRUE] L0046
       JG              G2e,#0082 [FALSE] L0047
L0046: CALL_VN         R0471 (#02,G2e)
       JUMP            L0048
L0047: JIN             G2e,L00 [TRUE] L0064
L0048: JG              #05,G2e [TRUE] L0049
       JG              G2e,#0082 [TRUE] L0049
       JIN             G2e,"Class" [FALSE] L0050
L0049: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0051
L0050: STORE           Gee,G2e
L0051: GET_PARENT      Gee -> L01
L0052: JG              #05,L01 [TRUE] L0053
       JG              L01,#0082 [TRUE] L0053
       JIN             L01,"Class" [FALSE] L0054
L0053: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0055
L0054: STORE           Gee,L01
L0055: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,L00 [TRUE] L0059
       JG              #05,L01 [TRUE] L0056
       JG              L01,#0082 [TRUE] L0056
       JIN             L01,"Class" [FALSE] L0057
L0056: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0058
L0057: STORE           Gee,L01
L0058: GET_PARENT      Gee -> L01
       JUMP            L0052
L0059: CALL_VN         R0285 (#17,#07,L01)
       STORE           L02,G30
       STORE           G30,#01
       CALL_VN         R0081 (#17,L01)
       STORE           G30,L02
       JG              #01,G13 [TRUE] L0060
       JG              G13,#0082 [FALSE] L0061
L0060: CALL_VN         R0471 (#02,G13)
       JUMP            L0062
L0061: JIN             G13,L01 [TRUE] L0063
L0062: RTRUE           
L0063: CALL_VN         R0081 (#17,G2e)
       RTRUE           
L0064: CALL_VN         R0477 (G13,G2e)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#17,#05,G2e)
       CALL_2N         R0193 (G2e)
       RTRUE           

Routine R0186, 0 locals
    Action routine for:
        "get off noun"

       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G2e [FALSE] L0004
       CALL_2N         R0081 (#19)
       RTRUE           
L0004: CALL_VN         R0285 (#18,#01,G2e)
       RTRUE           

Routine R0187, 1 local
    Action routine for:
        "get out / off / up"
        "stand"
        "stand up"
        "leave"
        "leave noun"
        "exit"
        "exit noun"

       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> L00
       JE              L00,G00 [TRUE] L0004
       JE              G00,#15 [FALSE] L0013
       JE              L00,G16 [FALSE] L0013
L0004: JG              #01,G00 [TRUE] L0005
       JG              G00,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#17,G00)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G00
L0007: GET_PROP        Gee,#12 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0011
       JE              G00,#15 [FALSE] L0012
       JG              #01,G16 [TRUE] L0008
       JG              G16,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#17,G16)
       STORE           Gee,#02
       JUMP            L0010
L0009: STORE           Gee,G16
L0010: GET_PROP        Gee,#12 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0012
L0011: CALL_VN         R0081 (#1b,#13)
       RTRUE           
L0012: CALL_VS         R0285 (#19,#01) -> -(SP)
       RET_POPPED      
L0013: JG              #01,L00 [TRUE] L0014
       JG              L00,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,L00)
       JUMP            L0019
L0015: TEST_ATTR       L00,#06 [FALSE] L0019
       JG              #01,L00 [TRUE] L0016
       JG              L00,#0082 [FALSE] L0017
L0016: CALL_VN         R0471 (#03,L00)
       JUMP            L0018
L0017: TEST_ATTR       L00,#10 [TRUE] L0019
L0018: CALL_VS         R0285 (#19,#02,L00) -> -(SP)
       RET_POPPED      
L0019: JG              #05,L00 [TRUE] L0020
       JG              L00,#0082 [TRUE] L0020
       JIN             L00,"Class" [FALSE] L0021
L0020: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L00
L0022: GET_PARENT      Gee -> -(SP)
       CALL_VN         R0477 (G13,(SP)+)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#19,#03,L00)
       CALL_2N         R0200 (#01)
       RTRUE           

Routine R0188, 0 locals
    Action routine for:
        "go"

       CALL_2N         R0285 (#1a)
       RTRUE           

Routine R0189, 0 locals
    Action routine for:
        "cross"
        "in"

       CALL_VN         R0081 (#1b,#14)
       RTRUE           

Routine R0190, 7 locals
    Action routine for:
        "go noun = [parse $5300]"

       JZ              G2f [TRUE] L0004
       JG              #01,G2f [TRUE] L0001
       JG              G2f,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,G2f)
       JUMP            L0003
L0002: JIN             G2f,"compass" [TRUE] L0004
L0003: CALL_2S         R0171 (G2f) -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       RTRUE           
L0004: STORE           L06,G00
       STORE           L04,#00
       JG              #05,G13 [TRUE] L0005
       JG              G13,#0082 [TRUE] L0005
       JIN             G13,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G13
L0007: GET_PARENT      Gee -> L00
       JE              G00,#15 [TRUE] L0008
       JE              L00,G00 [FALSE] L0009
L0008: JE              G00,#15 [FALSE] L0017
       JE              L00,G16 [TRUE] L0017
L0009: STORE           L01,G00
       JE              G00,#15 [FALSE] L0010
       STORE           G00,G16
L0010: CALL_VS         R0091 (L00,#04) -> L02
       JE              L02,#03 [TRUE] L0011
       STORE           G00,L01
L0011: JE              L02,#01 [FALSE] L0015
       STORE           L04,L00
       JG              #05,L00 [TRUE] L0012
       JG              L00,#0082 [TRUE] L0012
       JIN             L00,"Class" [FALSE] L0013
L0012: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_PARENT      Gee -> L00
       JUMP            L0017
L0015: JZ              L02 [FALSE] L0016
       CALL_VN         R0285 (#1b,#01,L00)
L0016: RTRUE           
L0017: JG              #01,G2e [TRUE] L0018
       JG              G2e,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#17,G2e)
       STORE           Gee,#02
       JUMP            L0020
L0019: STORE           Gee,G2e
L0020: GET_PROP        Gee,#15 -> Gef
       STORE           L05,Gef
       CALL_2S         R0088 (L05) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0021
       CALL_VS         R0091 (G2e,#15) -> L05
L0021: CALL_VS         R0464 (L00,L05) -> L01
       CALL_2S         R0088 (L01) -> L02
       JE              L02,#03 [FALSE] L0022
       CALL_2N         R0489 (L01)
       NEW_LINE        
       RFALSE          
L0022: JE              L02,#02 [FALSE] L0023
       CALL_VS         R0091 (L00,L05) -> L01
       JE              L01,#01 [TRUE] RTRUE
L0023: JZ              L02 [TRUE] L0024
       JZ              L01 [FALSE] L0029
L0024: JG              #01,L00 [TRUE] L0025
       JG              L00,#0082 [FALSE] L0026
L0025: CALL_VN         R0471 (#17,L00)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L00
L0027: GET_PROP        Gee,#26 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0028
       CALL_VN         R0089 (L00,#26)
L0028: RFALSE          
L0029: JG              #01,L01 [TRUE] L0030
       JG              L01,#0082 [FALSE] L0031
L0030: CALL_VN         R0471 (#03,L01)
       JUMP            L0042
L0031: TEST_ATTR       L01,#07 [FALSE] L0042
       JG              #01,L01 [TRUE] L0032
       JG              L01,#0082 [FALSE] L0033
L0032: CALL_VN         R0471 (#03,L01)
       JUMP            L0034
L0033: TEST_ATTR       L01,#05 [FALSE] L0034
       CALL_VS         R0285 (#1b,#02) -> -(SP)
       RET_POPPED      
L0034: JG              #01,L01 [TRUE] L0035
       JG              L01,#0082 [FALSE] L0036
L0035: CALL_VN         R0471 (#03,L01)
       JUMP            L0037
L0036: TEST_ATTR       L01,#10 [TRUE] L0040
L0037: JE              G2e,#11 [FALSE] L0038
       CALL_VS         R0285 (#1b,#03,L01) -> -(SP)
       RET_POPPED      
L0038: JE              G2e,#12 [FALSE] L0039
       CALL_VS         R0285 (#1b,#04,L01) -> -(SP)
       RET_POPPED      
L0039: CALL_VS         R0285 (#1b,#05,L01) -> -(SP)
       RET_POPPED      
L0040: CALL_VS         R0091 (L01,#13) -> L02
       JZ              L02 [FALSE] L0041
       CALL_VS         R0285 (#1b,#06,L01) -> -(SP)
       RET_POPPED      
L0041: JE              L02,#01 [TRUE] RTRUE
       STORE           L01,L02
L0042: JZ              L04 [FALSE] L0043
       CALL_VN         R0477 (G13,L01)
       JUMP            L0044
L0043: CALL_VN         R0477 (L04,L01)
L0044: STORE           G00,L01
       CALL_1N         R0146
       CALL_2S         R0101 (L01) -> L03
       JZ              L03 [TRUE] L0045
       STORE           G00,L01
       STORE           G16,L01
       STORE           G15,#01
       JUMP            L0047
L0045: JE              L06,#15 [FALSE] L0046
       CALL_1N         R0446
       JZ              G14 [FALSE] RTRUE
L0046: STORE           G16,L01
       STORE           G00,#15
       STORE           G15,#00
L0047: CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_2N         R0200 (#01)
       RTRUE           

Routine R0191, 3 locals

       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> -(SP)
       JE              L00,(SP)+ [TRUE] RFALSE
       JG              #05,L00 [TRUE] L0004
       JG              L00,#0082 [TRUE] L0004
       JIN             L00,"Class" [FALSE] L0005
L0004: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0006
L0005: STORE           Gee,L00
L0006: GET_CHILD       Gee -> -(SP) [FALSE] L0007
L0007: PULL            L01
       JZ              L01 [TRUE] L0019
L0008: JG              #01,L01 [TRUE] L0009
       JG              L01,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,L01)
       JUMP            L0011
L0010: TEST_ATTR       L01,#05 [TRUE] L0015
L0011: JG              #01,L01 [TRUE] L0012
       JG              L01,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,L01)
       JUMP            L0014
L0013: TEST_ATTR       L01,#13 [TRUE] L0015
L0014: STORE           L02,#01
L0015: JG              #05,L01 [TRUE] L0016
       JG              L01,#0082 [TRUE] L0016
       JIN             L01,"Class" [FALSE] L0017
L0016: CALL_VN         R0471 (#0d,L01)
       JUMP            L0019
L0017: JIN             L01,L00 [TRUE] L0018
       CALL_VN         R0471 (#20,L01)
       JUMP            L0019
L0018: GET_SIBLING     L01 -> L01 [TRUE] L0008
L0019: JZ              L02 [TRUE] RFALSE
       CALL_VN         R0285 (#1f,#04,L00)
       RTRUE           

Routine R0192, 2 locals

       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> L01
L0004: JZ              L01 [TRUE] L0011
       JE              L01,G17 [TRUE] L0011
       JE              L01,L00 [TRUE] RFALSE
       JG              #05,L01 [TRUE] L0005
       JG              L01,#0082 [TRUE] L0005
       JIN             L01,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L01
L0007: GET_PARENT      Gee -> L01
       JZ              L01 [TRUE] L0010
       JG              #01,L01 [TRUE] L0008
       JG              L01,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,L01)
       RTRUE           
L0009: TEST_ATTR       L01,#16 [FALSE] RTRUE
L0010: JUMP            L0004
L0011: RTRUE           

Routine R0193, 9 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_CHILD       Gee -> -(SP) [FALSE] L0004
L0004: PULL            L03
       JZ              L03 [TRUE] L0009
L0005: CALL_VN         R0480 (L03,#1b)
       JG              #05,L03 [TRUE] L0006
       JG              L03,#0082 [TRUE] L0006
       JIN             L03,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#0d,L03)
       JUMP            L0009
L0007: JIN             L03,L00 [TRUE] L0008
       CALL_VN         R0471 (#20,L03)
       JUMP            L0009
L0008: GET_SIBLING     L03 -> L03 [TRUE] L0005
L0009: STORE           L04,#00
       JG              #05,L00 [TRUE] L0010
       JG              L00,#0082 [TRUE] L0010
       JIN             L00,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,L00
L0012: GET_CHILD       Gee -> -(SP) [FALSE] L0013
L0013: PULL            L03
       JZ              L03 [TRUE] L0079
L0014: JG              #01,L03 [TRUE] L0015
       JG              L03,#0082 [FALSE] L0016
L0015: CALL_VN         R0471 (#03,L03)
       JUMP            L0017
L0016: TEST_ATTR       L03,#05 [TRUE] L0075
L0017: CALL_2S         R0192 (L03) -> -(SP)
       JZ              (SP)+ [TRUE] L0075
       CALL_2N         R0075 (L03)
       JG              #01,L03 [TRUE] L0018
       JG              L03,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L03)
       JUMP            L0020
L0019: TEST_ATTR       L03,#13 [TRUE] L0068
L0020: CALL_VN         R0479 (L03,#1b)
       INC             L04
       STORE           L05,#1e
       STORE           L07,#00
       JG              #01,L03 [TRUE] L0021
       JG              L03,#0082 [FALSE] L0022
L0021: CALL_VN         R0471 (#03,L03)
       JUMP            L0023
L0022: TEST_ATTR       L03,#07 [TRUE] L0026
L0023: JG              #01,L03 [TRUE] L0024
       JG              L03,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#03,L03)
       JUMP            L0029
L0025: TEST_ATTR       L03,#06 [FALSE] L0029
L0026: JG              #01,L03 [TRUE] L0027
       JG              L03,#0082 [FALSE] L0028
L0027: CALL_VN         R0471 (#03,L03)
       JUMP            L0029
L0028: TEST_ATTR       L03,#10 [FALSE] L0029
       CALL_VS         R0468 (L03,#1f) -> -(SP)
       JZ              (SP)+ [TRUE] L0029
       STORE           L05,#1f
       STORE           L07,#01
       JUMP            L0050
L0029: JG              #01,L03 [TRUE] L0030
       JG              L03,#0082 [FALSE] L0031
L0030: CALL_VN         R0471 (#03,L03)
       JUMP            L0032
L0031: TEST_ATTR       L03,#07 [TRUE] L0035
L0032: JG              #01,L03 [TRUE] L0033
       JG              L03,#0082 [FALSE] L0034
L0033: CALL_VN         R0471 (#03,L03)
       JUMP            L0039
L0034: TEST_ATTR       L03,#06 [FALSE] L0039
L0035: JG              #01,L03 [TRUE] L0036
       JG              L03,#0082 [FALSE] L0037
L0036: CALL_VN         R0471 (#03,L03)
       JUMP            L0038
L0037: TEST_ATTR       L03,#10 [TRUE] L0039
L0038: CALL_VS         R0468 (L03,#20) -> -(SP)
       JZ              (SP)+ [TRUE] L0039
       STORE           L05,#20
       STORE           L07,#01
       JUMP            L0050
L0039: JG              #01,L03 [TRUE] L0040
       JG              L03,#0082 [FALSE] L0041
L0040: CALL_VN         R0471 (#03,L03)
       JUMP            L0044
L0041: TEST_ATTR       L03,#17 [FALSE] L0044
       JG              #01,L03 [TRUE] L0042
       JG              L03,#0082 [FALSE] L0043
L0042: CALL_VN         R0471 (#03,L03)
       JUMP            L0044
L0043: TEST_ATTR       L03,#0f [FALSE] L0044
       CALL_VS         R0468 (L03,#21) -> -(SP)
       JZ              (SP)+ [TRUE] L0044
       STORE           L05,#21
       STORE           L07,#01
       JUMP            L0050
L0044: JG              #01,L03 [TRUE] L0045
       JG              L03,#0082 [FALSE] L0046
L0045: CALL_VN         R0471 (#03,L03)
       JUMP            L0050
L0046: TEST_ATTR       L03,#17 [FALSE] L0050
       JG              #01,L03 [TRUE] L0047
       JG              L03,#0082 [FALSE] L0048
L0047: CALL_VN         R0471 (#03,L03)
       JUMP            L0049
L0048: TEST_ATTR       L03,#0f [TRUE] L0050
L0049: CALL_VS         R0468 (L03,#22) -> -(SP)
       JZ              (SP)+ [TRUE] L0050
       STORE           L05,#22
       STORE           L07,#01
L0050: JG              #01,L03 [TRUE] L0051
       JG              L03,#0082 [FALSE] L0052
L0051: CALL_VN         R0471 (#03,L03)
       JUMP            L0056
L0052: TEST_ATTR       L03,#0e [FALSE] L0056
       JG              #01,L03 [TRUE] L0053
       JG              L03,#0082 [FALSE] L0054
L0053: CALL_VN         R0471 (#17,L03)
       STORE           Gee,#02
       JUMP            L0055
L0054: STORE           Gee,L03
L0055: GET_PROP        Gee,#24 -> Gef
       PUSH            Gef
       JE              (SP)+,#ffff [FALSE] L0056
       JE              L07,#01 [FALSE] L0067
L0056: JG              #01,L03 [TRUE] L0057
       JG              L03,#0082 [FALSE] L0058
L0057: CALL_VN         R0471 (#17,L03)
       STORE           Gee,#02
       JUMP            L0059
L0058: STORE           Gee,L03
L0059: GET_PROP        Gee,#24 -> Gef
       PUSH            Gef
       JE              (SP)+,#ffff [TRUE] L0060
       CALL_VS         R0091 (L03,#24) -> -(SP)
       JZ              (SP)+ [TRUE] L0060
       STORE           L08,#01
       CALL_VN         R0480 (L03,#1b)
       DEC             L04
       JUMP            L0067
L0060: CALL_VS         R0464 (L03,L05) -> L06
       JZ              L06 [TRUE] L0067
       NEW_LINE        
       CALL_VN         R0089 (L03,L05)
       STORE           L08,#01
       CALL_VN         R0480 (L03,#1b)
       DEC             L04
       JG              #01,L03 [TRUE] L0061
       JG              L03,#0082 [FALSE] L0062
L0061: CALL_VN         R0471 (#03,L03)
       JUMP            L0067
L0062: TEST_ATTR       L03,#16 [FALSE] L0067
       JG              #05,L03 [TRUE] L0063
       JG              L03,#0082 [TRUE] L0063
       JIN             L03,"Class" [FALSE] L0064
L0063: CALL_VN         R0471 (#06,L03)
       STORE           Gee,#02
       JUMP            L0065
L0064: STORE           Gee,L03
L0065: GET_CHILD       Gee -> -(SP) [FALSE] L0066
L0066: JZ              (SP)+ [TRUE] L0067
       CALL_2N         R0191 (L03)
L0067: JUMP            L0075
L0068: JG              #01,L03 [TRUE] L0069
       JG              L03,#0082 [FALSE] L0070
L0069: CALL_VN         R0471 (#03,L03)
       JUMP            L0075
L0070: TEST_ATTR       L03,#16 [FALSE] L0075
       JG              #05,L03 [TRUE] L0071
       JG              L03,#0082 [TRUE] L0071
       JIN             L03,"Class" [FALSE] L0072
L0071: CALL_VN         R0471 (#06,L03)
       STORE           Gee,#02
       JUMP            L0073
L0072: STORE           Gee,L03
L0073: GET_CHILD       Gee -> -(SP) [FALSE] L0074
L0074: JZ              (SP)+ [TRUE] L0075
       CALL_2N         R0191 (L03)
L0075: JG              #05,L03 [TRUE] L0076
       JG              L03,#0082 [TRUE] L0076
       JIN             L03,"Class" [FALSE] L0077
L0076: CALL_VN         R0471 (#0d,L03)
       JUMP            L0079
L0077: JIN             L03,L00 [TRUE] L0078
       CALL_VN         R0471 (#20,L03)
       JUMP            L0079
L0078: GET_SIBLING     L03 -> L03 [TRUE] L0014
L0079: JZ              L04 [FALSE] L0080
       RFALSE          
L0080: JZ              L01 [TRUE] L0086
       NEW_LINE        
       JE              L08,#01 [FALSE] L0081
       STORE           L01,L02
L0081: CALL_2N         R0489 (L01)
       PRINT           " "
       JG              #05,L00 [TRUE] L0082
       JG              L00,#0082 [TRUE] L0082
       JIN             L00,"Class" [FALSE] L0083
L0082: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0084
L0083: STORE           Gee,L00
L0084: GET_CHILD       Gee -> -(SP) [FALSE] L0085
L0085: CALL_VN         R0140 ((SP)+,#0ad8)
       RET             L04
L0086: JE              L08,#01 [FALSE] L0087
       CALL_VN         R0285 (#1f,#05,L00)
       JUMP            L0088
L0087: CALL_VN         R0285 (#1f,#06,L00)
L0088: RTRUE           

Routine R0194, 0 locals
    Action routine for:
        "brief"

       STORE           G18,#01
       CALL_2N         R0489 (S001)
       CALL_2N         R0285 (#1c)
       RTRUE           

Routine R0195, 0 locals
    Action routine for:
        "long"

       STORE           G18,#02
       CALL_2N         R0489 (S001)
       CALL_2N         R0285 (#1d)
       RTRUE           

Routine R0196, 0 locals
    Action routine for:
        "short"

       STORE           G18,#03
       CALL_2N         R0489 (S001)
       CALL_2N         R0285 (#1e)
       RTRUE           

Routine R0197, 1 local

       JE              G00,#15 [FALSE] L0001
       STORE           G1a,#15
       RTRUE           
L0001: JE              G00,G1a [TRUE] L0006
       JG              #01,G00 [TRUE] L0002
       JG              G00,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#17,G00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G00
L0004: GET_PROP        Gee,#1e -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0005
       CALL_VN         R0089 (G00,#1e)
L0005: STORE           L00,G00
       CALL_1N         R0447
       STORE           G1a,L00
L0006: RTRUE           

Routine R0198, 0 locals

       JG              #01,G00 [TRUE] L0001
       JG              G00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,G00)
       JUMP            L0003
L0002: TEST_ATTR       G00,#1a [TRUE] L0006
L0003: CALL_VN         R0479 (G00,#1a)
       JG              #01,G00 [TRUE] L0004
       JG              G00,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,G00)
       JUMP            L0006
L0005: TEST_ATTR       G00,#14 [FALSE] L0006
       ADD             G0e,#05 -> G0e
       ADD             G11,#05 -> G11
L0006: RTRUE           

Routine R0199, 1 local

       STORE           L00,#01
       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> G17
L0004: JG              #05,G17 [TRUE] L0005
       JG              G17,#0082 [TRUE] L0005
       JIN             G17,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,G17)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,G17
L0007: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       JG              #01,G17 [TRUE] L0008
       JG              G17,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,G17)
       JUMP            L0015
L0009: TEST_ATTR       G17,#06 [FALSE] L0015
       JG              #01,G17 [TRUE] L0010
       JG              G17,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#03,G17)
       JUMP            L0012
L0011: TEST_ATTR       G17,#10 [TRUE] L0015
L0012: JG              #01,G17 [TRUE] L0013
       JG              G17,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#03,G17)
       JUMP            L0019
L0014: TEST_ATTR       G17,#19 [FALSE] L0019
L0015: JG              #05,G17 [TRUE] L0016
       JG              G17,#0082 [TRUE] L0016
       JIN             G17,"Class" [FALSE] L0017
L0016: CALL_VN         R0471 (#04,G17)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,G17
L0018: GET_PARENT      Gee -> G17
       INC             L00
       JUMP            L0004
L0019: RET             L00

Routine R0200, 5 locals
    Action routine for:
        "l"

       JG              #05,G13 [TRUE] L0001
       JG              G13,#0082 [TRUE] L0001
       JIN             G13,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G13
L0003: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_2S         R0133 (#0a) -> -(SP)
       RET_POPPED      
L0004: JE              G00,#15 [FALSE] L0005
       STORE           G17,#15
       CALL_1N         R0197
       JUMP            L0006
L0005: CALL_1S         R0199 -> L01
       JE              G17,G00 [FALSE] L0006
       CALL_1N         R0197
       JE              G17,G00 [TRUE] L0006
       JUMP            L0004
L0006: NEW_LINE        
       SET_TEXT_STYLE  BOLDFACE
       JZ              L01 [FALSE] L0007
       CALL_2N         R0119 (#15)
       JUMP            L0009
L0007: JE              G17,G00 [TRUE] L0008
       CALL_2N         R0118 (G17)
       JUMP            L0009
L0008: CALL_2N         R0119 (G17)
L0009: SET_TEXT_STYLE  ROMAN
       STORE           L03,#01
       JG              #05,G13 [TRUE] L0010
       JG              G13,#0082 [TRUE] L0010
       JIN             G13,"Class" [FALSE] L0011
L0010: CALL_VN         R0471 (#04,G13)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,G13
L0012: GET_PARENT      Gee -> L02
       JUMP            L0017
L0013: INC             L03
       JG              #05,L02 [TRUE] L0014
       JG              L02,#0082 [TRUE] L0014
       JIN             L02,"Class" [FALSE] L0015
L0014: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0016
L0015: STORE           Gee,L02
L0016: GET_PARENT      Gee -> L02
L0017: JL              L03,L01 [FALSE] L0022
       JG              #01,L02 [TRUE] L0018
       JG              L02,#0082 [FALSE] L0019
L0018: CALL_VN         R0471 (#03,L02)
       JUMP            L0020
L0019: TEST_ATTR       L02,#16 [FALSE] L0020
       CALL_VN         R0285 (#1f,#01,L02)
       JUMP            L0021
L0020: CALL_VN         R0285 (#1f,#02,L02)
L0021: JUMP            L0013
L0022: JE              G19,#01 [FALSE] L0023
       CALL_VN         R0285 (#1f,#03,G13)
L0023: NEW_LINE        
       JL              G18,#03 [FALSE] L0035
       JE              G17,G00 [FALSE] L0035
       JE              L00,#01 [FALSE] L0026
       JE              G18,#02 [TRUE] L0026
       JG              #01,G00 [TRUE] L0024
       JG              G00,#0082 [FALSE] L0025
L0024: CALL_VN         R0471 (#03,G00)
       JUMP            L0026
L0025: TEST_ATTR       G00,#1a [TRUE] L0035
L0026: JG              #01,G00 [TRUE] L0027
       JG              G00,#0082 [FALSE] L0028
L0027: CALL_VN         R0471 (#17,G00)
       STORE           Gee,#02
       JUMP            L0029
L0028: STORE           Gee,G00
L0029: GET_PROP        Gee,#24 -> Gef
       PUSH            Gef
       JE              (SP)+,#ffff [TRUE] L0030
       CALL_VN         R0091 (G00,#24)
       JUMP            L0035
L0030: JG              #01,G00 [TRUE] L0031
       JG              G00,#0082 [FALSE] L0032
L0031: CALL_VN         R0471 (#17,G00)
       STORE           Gee,#02
       JUMP            L0033
L0032: STORE           Gee,G00
L0033: GET_PROP        Gee,#23 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0034
       CALL_VN         R0133 (#0b,G00)
       JUMP            L0035
L0034: CALL_VN         R0089 (G00,#23)
L0035: JZ              L01 [FALSE] L0036
       CALL_2N         R0193 (#15)
       JUMP            L0053
L0036: STORE           L02,G13
       STORE           L03,L01
       JUMP            L0041
L0037: DEC             L03
       JG              #05,L02 [TRUE] L0038
       JG              L02,#0082 [TRUE] L0038
       JIN             L02,"Class" [FALSE] L0039
L0038: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0040
L0039: STORE           Gee,L02
L0040: GET_PARENT      Gee -> L02
L0041: JG              L03,#00 [FALSE] L0042
       CALL_VN         R0479 (L02,#1b)
       JUMP            L0037
L0042: STORE           L03,L01
L0043: JG              L03,#00 [FALSE] L0053
       STORE           L02,G13
       STORE           L04,#00
L0044: JL              L04,L03 [FALSE] L0048
       JG              #05,L02 [TRUE] L0045
       JG              L02,#0082 [TRUE] L0045
       JIN             L02,"Class" [FALSE] L0046
L0045: CALL_VN         R0471 (#04,L02)
       STORE           Gee,#02
       JUMP            L0047
L0046: STORE           Gee,L02
L0047: GET_PARENT      Gee -> L02
       INC             L04
       JUMP            L0044
L0048: JG              #01,L02 [TRUE] L0049
       JG              L02,#0082 [FALSE] L0050
L0049: CALL_VN         R0471 (#17,L02)
       STORE           Gee,#02
       JUMP            L0051
L0050: STORE           Gee,L02
L0051: GET_PROP        Gee,#32 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0052
       NEW_LINE        
       CALL_VN         R0089 (L02,#32)
L0052: CALL_2N         R0193 (L02)
       DEC             L03
       JUMP            L0043
L0053: CALL_1N         R0448
       CALL_1N         R0198
       STORE           G2b,#1f
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0201, 1 local
    Action routine for:
        "l at noun"
        "check noun"
        "read noun"

       JE              G00,#15 [FALSE] L0001
       CALL_VS         R0285 (#20,#01) -> -(SP)
       RET_POPPED      
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#17,G2e)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,G2e
L0004: GET_PROP        Gee,#23 -> Gef
       STORE           L00,Gef
       JZ              L00 [FALSE] L0011
       JG              #01,G2e [TRUE] L0005
       JG              G2e,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,G2e)
       JUMP            L0007
L0006: TEST_ATTR       G2e,#06 [FALSE] L0007
       CALL_VN         R0081 (#22,G2e)
       RTRUE           
L0007: JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,G2e)
       JUMP            L0010
L0009: TEST_ATTR       G2e,#17 [FALSE] L0010
       CALL_VN         R0285 (#20,#03,G2e)
       RFALSE          
L0010: CALL_VS         R0285 (#20,#02,G2e) -> -(SP)
       RET_POPPED      
L0011: CALL_VN         R0089 (G2e,#23)
       JG              #01,G2e [TRUE] L0012
       JG              G2e,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,G2e)
       JUMP            L0014
L0013: TEST_ATTR       G2e,#17 [FALSE] L0014
       CALL_VN         R0285 (#20,#03,G2e)
L0014: CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       RTRUE           

Routine R0202, 0 locals
    Action routine for:
        "l under noun"

       JE              G00,#15 [FALSE] L0001
       CALL_VS         R0285 (#21,#01) -> -(SP)
       RET_POPPED      
L0001: CALL_VN         R0285 (#21,#02)
       RTRUE           

Routine R0203, 2 locals
    Action routine for:
        "l inside / in / into / through noun"
        "search noun"

       JE              G00,#15 [FALSE] L0001
       CALL_VS         R0285 (#22,#01,G2e) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: JG              #05,G2e [TRUE] L0003
       JG              G2e,#0082 [TRUE] L0003
       JIN             G2e,"Class" [FALSE] L0004
L0003: CALL_VN         R0471 (#06,G2e)
       STORE           Gee,#02
       JUMP            L0005
L0004: STORE           Gee,G2e
L0005: GET_CHILD       Gee -> -(SP) [FALSE] L0006
L0006: PULL            L00
       JZ              L00 [TRUE] L0018
L0007: JG              #01,L00 [TRUE] L0008
       JG              L00,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,L00)
       JUMP            L0010
L0009: TEST_ATTR       L00,#05 [TRUE] L0014
L0010: JG              #01,L00 [TRUE] L0011
       JG              L00,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,L00)
       JUMP            L0013
L0012: TEST_ATTR       L00,#13 [TRUE] L0014
L0013: STORE           L01,#01
L0014: JG              #05,L00 [TRUE] L0015
       JG              L00,#0082 [TRUE] L0015
       JIN             L00,"Class" [FALSE] L0016
L0015: CALL_VN         R0471 (#0d,L00)
       JUMP            L0018
L0016: JIN             L00,G2e [TRUE] L0017
       CALL_VN         R0471 (#20,L00)
       JUMP            L0018
L0017: GET_SIBLING     L00 -> L00 [TRUE] L0007
L0018: JG              #01,G2e [TRUE] L0019
       JG              G2e,#0082 [FALSE] L0020
L0019: CALL_VN         R0471 (#03,G2e)
       JUMP            L0022
L0020: TEST_ATTR       G2e,#16 [FALSE] L0022
       JZ              L01 [FALSE] L0021
       CALL_VS         R0285 (#22,#02,G2e) -> -(SP)
       RET_POPPED      
L0021: CALL_VS         R0285 (#22,#03,G2e) -> -(SP)
       RET_POPPED      
L0022: JG              #01,G2e [TRUE] L0023
       JG              G2e,#0082 [FALSE] L0024
L0023: CALL_VN         R0471 (#03,G2e)
       JUMP            L0025
L0024: TEST_ATTR       G2e,#06 [TRUE] L0026
L0025: CALL_VS         R0285 (#22,#04,G2e) -> -(SP)
       RET_POPPED      
L0026: JG              #01,G2e [TRUE] L0027
       JG              G2e,#0082 [FALSE] L0028
L0027: CALL_VN         R0471 (#03,G2e)
       JUMP            L0029
L0028: TEST_ATTR       G2e,#19 [TRUE] L0033
L0029: JG              #01,G2e [TRUE] L0030
       JG              G2e,#0082 [FALSE] L0031
L0030: CALL_VN         R0471 (#03,G2e)
       JUMP            L0032
L0031: TEST_ATTR       G2e,#10 [TRUE] L0033
L0032: CALL_VS         R0285 (#22,#05,G2e) -> -(SP)
       RET_POPPED      
L0033: CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JG              #05,G2e [TRUE] L0034
       JG              G2e,#0082 [TRUE] L0034
       JIN             G2e,"Class" [FALSE] L0035
L0034: CALL_VN         R0471 (#09,G2e)
       STORE           Gee,#02
       JUMP            L0036
L0035: STORE           Gee,G2e
L0036: STORE           Gef,#00
       GET_CHILD       Gee -> -(SP) [FALSE] L0038
L0037: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0037
L0038: PULL            Gee
       STORE           L00,Gef
       JZ              L01 [FALSE] L0039
       CALL_VS         R0285 (#22,#06,G2e) -> -(SP)
       RET_POPPED      
L0039: CALL_VN         R0285 (#22,#07,G2e)
       RTRUE           

Routine R0204, 0 locals
    Action routine for:
        "open noun with held"
        "unlock noun with held"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#0c [TRUE] L0005
L0004: CALL_VS         R0285 (#23,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0008
L0007: TEST_ATTR       G2e,#0d [TRUE] L0009
L0008: CALL_VS         R0285 (#23,#02,G2e) -> -(SP)
       RET_POPPED      
L0009: JG              #01,G2e [TRUE] L0010
       JG              G2e,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#17,G2e)
       STORE           Gee,#02
       JUMP            L0012
L0011: STORE           Gee,G2e
L0012: GET_PROP        Gee,#14 -> Gef
       PUSH            Gef
       JE              (SP)+,G2f [TRUE] L0013
       CALL_VS         R0285 (#23,#03,G2f) -> -(SP)
       RET_POPPED      
L0013: CALL_VN         R0480 (G2e,#0d)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#23,#04,G2e)
       RTRUE           

Routine R0205, 0 locals
    Action routine for:
        "lock noun with held"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#0c [TRUE] L0005
L0004: CALL_VS         R0285 (#24,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0008
L0007: TEST_ATTR       G2e,#0d [FALSE] L0008
       CALL_VS         R0285 (#24,#02,G2e) -> -(SP)
       RET_POPPED      
L0008: JG              #01,G2e [TRUE] L0009
       JG              G2e,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,G2e)
       JUMP            L0011
L0010: TEST_ATTR       G2e,#10 [FALSE] L0011
       CALL_VS         R0285 (#24,#03,G2e) -> -(SP)
       RET_POPPED      
L0011: JG              #01,G2e [TRUE] L0012
       JG              G2e,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#17,G2e)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,G2e
L0014: GET_PROP        Gee,#14 -> Gef
       PUSH            Gef
       JE              (SP)+,G2f [TRUE] L0015
       CALL_VS         R0285 (#24,#04,G2f) -> -(SP)
       RET_POPPED      
L0015: CALL_VN         R0479 (G2e,#0d)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#24,#05,G2e)
       RTRUE           

Routine R0206, 0 locals
    Action routine for:
        "rotate noun on"
        "rotate on noun"
        "switch noun"
        "switch noun on"
        "switch on noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#17 [TRUE] L0005
L0004: CALL_VS         R0285 (#25,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0008
L0007: TEST_ATTR       G2e,#0f [FALSE] L0008
       CALL_VS         R0285 (#25,#02,G2e) -> -(SP)
       RET_POPPED      
L0008: CALL_VN         R0479 (G2e,#0f)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#25,#03,G2e)
       RTRUE           

Routine R0207, 0 locals
    Action routine for:
        "close off noun"
        "rotate noun off"
        "rotate off noun"
        "switch noun off"
        "switch off noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#17 [TRUE] L0005
L0004: CALL_VS         R0285 (#26,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0008
L0007: TEST_ATTR       G2e,#0f [TRUE] L0009
L0008: CALL_VS         R0285 (#26,#02,G2e) -> -(SP)
       RET_POPPED      
L0009: CALL_VN         R0480 (G2e,#0f)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#26,#03,G2e)
       RTRUE           

Routine R0208, 0 locals
    Action routine for:
        "open noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#11 [TRUE] L0005
L0004: CALL_VS         R0285 (#27,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0008
L0007: TEST_ATTR       G2e,#0d [FALSE] L0008
       CALL_VS         R0285 (#27,#02,G2e) -> -(SP)
       RET_POPPED      
L0008: JG              #01,G2e [TRUE] L0009
       JG              G2e,#0082 [FALSE] L0010
L0009: CALL_VN         R0471 (#03,G2e)
       JUMP            L0011
L0010: TEST_ATTR       G2e,#10 [FALSE] L0011
       CALL_VS         R0285 (#27,#03,G2e) -> -(SP)
       RET_POPPED      
L0011: CALL_VN         R0479 (G2e,#10)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       JG              #01,G2e [TRUE] L0012
       JG              G2e,#0082 [FALSE] L0013
L0012: CALL_VN         R0471 (#03,G2e)
       JUMP            L0021
L0013: TEST_ATTR       G2e,#06 [FALSE] L0021
       JG              #01,G2e [TRUE] L0014
       JG              G2e,#0082 [FALSE] L0015
L0014: CALL_VN         R0471 (#03,G2e)
       JUMP            L0016
L0015: TEST_ATTR       G2e,#19 [TRUE] L0021
L0016: JG              #05,G2e [TRUE] L0017
       JG              G2e,#0082 [TRUE] L0017
       JIN             G2e,"Class" [FALSE] L0018
L0017: CALL_VN         R0471 (#06,G2e)
       STORE           Gee,#02
       JUMP            L0019
L0018: STORE           Gee,G2e
L0019: GET_CHILD       Gee -> -(SP) [FALSE] L0020
L0020: JZ              (SP)+ [TRUE] L0021
       CALL_VS         R0169 (G2e,G13) -> -(SP)
       JZ              (SP)+ [FALSE] L0021
       CALL_VS         R0285 (#27,#04,G2e) -> -(SP)
       RET_POPPED      
L0021: CALL_VN         R0285 (#27,#05,G2e)
       RTRUE           

Routine R0209, 0 locals
    Action routine for:
        "close noun"
        "close up noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#11 [TRUE] L0005
L0004: CALL_VS         R0285 (#28,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0008
L0007: TEST_ATTR       G2e,#10 [TRUE] L0009
L0008: CALL_VS         R0285 (#28,#02,G2e) -> -(SP)
       RET_POPPED      
L0009: CALL_VN         R0480 (G2e,#10)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#28,#03,G2e)
       RTRUE           

Routine R0210, 0 locals
    Action routine for:
        "carry off ATTRIBUTE(28)"
        "remove held"
        "disrobe held"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#1c [TRUE] L0005
L0004: CALL_VS         R0285 (#29,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: CALL_VN         R0480 (G2e,#1c)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#29,#02,G2e)
       RTRUE           

Routine R0211, 0 locals
    Action routine for:
        "don held"
        "put on held"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#04 [TRUE] L0005
L0004: CALL_VS         R0285 (#2a,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #05,G2e [TRUE] L0006
       JG              G2e,#0082 [TRUE] L0006
       JIN             G2e,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,G2e
L0008: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0009
       CALL_VS         R0285 (#2a,#02,G2e) -> -(SP)
       RET_POPPED      
L0009: JG              #01,G2e [TRUE] L0010
       JG              G2e,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#03,G2e)
       JUMP            L0012
L0011: TEST_ATTR       G2e,#1c [FALSE] L0012
       CALL_VS         R0285 (#2a,#03,G2e) -> -(SP)
       RET_POPPED      
L0012: CALL_VN         R0479 (G2e,#1c)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#2a,#04,G2e)
       RTRUE           

Routine R0212, 0 locals
    Action routine for:
        "eat held"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#08 [TRUE] L0005
L0004: CALL_VS         R0285 (#2b,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0012
L0007: TEST_ATTR       G2e,#1c [FALSE] L0012
       CALL_VN         R0285 (#10,#03,G2e)
       CALL_VN         R0081 (#29,G2e)
       JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,G2e)
       JUMP            L0012
L0009: TEST_ATTR       G2e,#1c [FALSE] L0012
       JG              #01,G2e [TRUE] L0010
       JG              G2e,#0082 [FALSE] L0011
L0010: CALL_VN         R0471 (#02,G2e)
       JUMP            L0012
L0011: JIN             G2e,G13 [TRUE] RTRUE
L0012: CALL_2N         R0478 (G2e)
       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       JE              G30,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#2b,#02,G2e)
       RTRUE           

Routine R0213, 0 locals
    Action routine for:
        "y"

       CALL_2N         R0285 (#2c)
       RTRUE           

Routine R0214, 0 locals
    Action routine for:
        "no"

       CALL_2N         R0285 (#2d)
       RTRUE           

Routine R0215, 0 locals
    Action routine for:
        "burn noun"
        "burn noun with held"

       CALL_VN         R0285 (#2e,#01,G2e)
       RTRUE           

Routine R0216, 0 locals
    Action routine for:
        "pray"

       CALL_VN         R0285 (#2f,#01,G2e)
       RTRUE           

Routine R0217, 0 locals
    Action routine for:
        "awake"
        "awake up"

       CALL_VN         R0285 (#30,#01,G2e)
       RTRUE           

Routine R0218, 0 locals
    Action routine for:
        "awake creature"
        "awake creature up"
        "awake up creature"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0087 (G2e,#31) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#31,#01,G2e)
       RTRUE           

Routine R0219, 0 locals
    Action routine for:
        "think"

       CALL_VN         R0285 (#33,#01,G2e)
       RTRUE           

Routine R0220, 0 locals
    Action routine for:
        "smell"
        "smell noun"

       CALL_VN         R0285 (#34,#01,G2e)
       RTRUE           

Routine R0221, 0 locals
    Action routine for:
        "hear"
        "hear noun"
        "hear to noun"

       CALL_VN         R0285 (#35,#01,G2e)
       RTRUE           

Routine R0222, 0 locals
    Action routine for:
        "taste noun"

       CALL_VN         R0285 (#36,#01,G2e)
       RTRUE           

Routine R0223, 0 locals
    Action routine for:
        "dig noun"
        "dig noun with held"

       CALL_VN         R0285 (#38,#01,G2e)
       RTRUE           

Routine R0224, 0 locals
    Action routine for:
        "chop noun"

       CALL_VN         R0285 (#39,#01,G2e)
       RTRUE           

Routine R0225, 0 locals
    Action routine for:
        "hop"

       CALL_VN         R0285 (#3a,#01,G2e)
       RTRUE           

Routine R0226, 0 locals
    Action routine for:
        "hop over noun"

       CALL_VN         R0285 (#3b,#01,G2e)
       RTRUE           

Routine R0227, 0 locals
    Action routine for:
        "attach noun"
        "attach noun to noun"

       CALL_VN         R0285 (#3c,#01,G2e)
       RTRUE           

Routine R0228, 0 locals
    Action routine for:
        "drink noun"

       CALL_VN         R0285 (#3d,#01,G2e)
       RTRUE           

Routine R0229, 0 locals
    Action routine for:
        "fill noun"

       CALL_VN         R0285 (#3e,#01,G2e)
       RTRUE           

Routine R0230, 0 locals
    Action routine for:
        "sorry"

       CALL_VN         R0285 (#3f,#01,G2e)
       RTRUE           

Routine R0231, 0 locals
    Action routine for:
        "damn"
        "damn topic"

       CALL_VN         R0285 (#40,#01,G2e)
       RTRUE           

Routine R0232, 0 locals
    Action routine for:
        "bother"
        "bother topic"

       CALL_VN         R0285 (#41,#01,G2e)
       RTRUE           

Routine R0233, 0 locals
    Action routine for:
        

       CALL_VN         R0285 (#43,#01,G2e)
       RTRUE           

Routine R0234, 0 locals
    Action routine for:
        "swing noun"
        "swing on noun"

       CALL_VN         R0285 (#44,#01,G2e)
       RTRUE           

Routine R0235, 0 locals
    Action routine for:
        "blow held"

       CALL_VN         R0285 (#45,#01,G2e)
       RTRUE           

Routine R0236, 0 locals
    Action routine for:
        "clean noun"

       CALL_VN         R0285 (#46,#01,G2e)
       RTRUE           

Routine R0237, 0 locals
    Action routine for:
        "adjust noun"

       CALL_VN         R0285 (#47,#01,G2e)
       RTRUE           

Routine R0238, 0 locals
    Action routine for:
        "adjust noun to special"

       CALL_VN         R0285 (#48,#01,G2e)
       RTRUE           

Routine R0239, 0 locals
    Action routine for:
        "wave"

       CALL_VN         R0285 (#49,#01,G2e)
       RTRUE           

Routine R0240, 0 locals
    Action routine for:
        "buy noun"

       CALL_VN         R0285 (#54,#01,G2e)
       RTRUE           

Routine R0241, 0 locals
    Action routine for:
        "sing"

       CALL_VN         R0285 (#55,#01,G2e)
       RTRUE           

Routine R0242, 0 locals
    Action routine for:
        "climb noun"
        "climb up / over noun"

       CALL_VN         R0285 (#56,#01,G2e)
       RTRUE           

Routine R0243, 0 locals
    Action routine for:
        "nap"

       CALL_VN         R0285 (#58,#01,G2e)
       RTRUE           

Routine R0244, 0 locals
    Action routine for:
        "l up topic in noun"
        "consult noun about topic"
        "consult noun on topic"
        "read about topic in noun"
        "read topic in noun"

       CALL_VN         R0285 (#59,#01,G2e)
       RTRUE           

Routine R0245, 0 locals
    Action routine for:
        "feel noun"

       JE              G2e,G13 [FALSE] L0001
       CALL_VS         R0285 (#37,#03,G2e) -> -(SP)
       RET_POPPED      
L0001: CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       RTRUE           
L0002: JG              #01,G2e [TRUE] L0003
       JG              G2e,#0082 [FALSE] L0004
L0003: CALL_VN         R0471 (#03,G2e)
       JUMP            L0005
L0004: TEST_ATTR       G2e,#02 [FALSE] L0005
       CALL_VS         R0285 (#37,#01,G2e) -> -(SP)
       RET_POPPED      
L0005: CALL_VN         R0285 (#37,#02,G2e)
       RTRUE           

Routine R0246, 0 locals
    Action routine for:
        "wave noun"

       JG              #05,G2e [TRUE] L0001
       JG              G2e,#0082 [TRUE] L0001
       JIN             G2e,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G2e
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,G13 [TRUE] L0004
       CALL_VS         R0285 (#4a,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0285 (#4a,#02,G2e)
       RTRUE           

Routine R0247, 0 locals
    Action routine for:
        "drag noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#15 [FALSE] L0004
       CALL_VS         R0285 (#4b,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: JG              #01,G2e [TRUE] L0005
       JG              G2e,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,G2e)
       JUMP            L0007
L0006: TEST_ATTR       G2e,#13 [FALSE] L0007
       CALL_VS         R0285 (#4b,#02,G2e) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,G2e)
       JUMP            L0010
L0009: TEST_ATTR       G2e,#02 [FALSE] L0010
       CALL_VS         R0285 (#4b,#04,G2e) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0285 (#4b,#03,G2e)
       RTRUE           

Routine R0248, 0 locals
    Action routine for:
        "clear noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#15 [FALSE] L0004
       CALL_VS         R0285 (#4c,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: JG              #01,G2e [TRUE] L0005
       JG              G2e,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,G2e)
       JUMP            L0007
L0006: TEST_ATTR       G2e,#13 [FALSE] L0007
       CALL_VS         R0285 (#4c,#02,G2e) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,G2e)
       JUMP            L0010
L0009: TEST_ATTR       G2e,#02 [FALSE] L0010
       CALL_VS         R0285 (#4b,#04,G2e) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0285 (#4c,#03,G2e)
       RTRUE           

Routine R0249, 0 locals
    Action routine for:
        "rotate noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#15 [FALSE] L0004
       CALL_VS         R0285 (#4d,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: JG              #01,G2e [TRUE] L0005
       JG              G2e,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,G2e)
       JUMP            L0007
L0006: TEST_ATTR       G2e,#13 [FALSE] L0007
       CALL_VS         R0285 (#4d,#02,G2e) -> -(SP)
       RET_POPPED      
L0007: JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#03,G2e)
       JUMP            L0010
L0009: TEST_ATTR       G2e,#02 [FALSE] L0010
       CALL_VS         R0285 (#4b,#04,G2e) -> -(SP)
       RET_POPPED      
L0010: CALL_VN         R0285 (#4d,#03,G2e)
       RTRUE           

Routine R0250, 0 locals
    Action routine for:
        "wait"

       CALL_1S         R0086 -> -(SP)
       JE              (SP)+,#01 [TRUE] RTRUE
       CALL_VN         R0285 (#57,#01,G2e)
       RTRUE           

Routine R0251, 0 locals
    Action routine for:
        "clear noun noun"

       CALL_VN         R0285 (#4e,#01,G2e)
       RTRUE           

Routine R0252, 1 local

       JG              #05,G2f [TRUE] L0001
       JG              G2f,#0082 [TRUE] L0001
       JIN             G2f,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G2f)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G2f
L0003: GET_PARENT      Gee -> -(SP)
       JE              (SP)+,#08 [TRUE] L0004
       CALL_VS         R0285 (#4e,#02,G2e) -> -(SP)
       RET_POPPED      
L0004: JE              G2f,#11,#12 [FALSE] L0005
       CALL_VS         R0285 (#4e,#03,G2e) -> -(SP)
       RET_POPPED      
L0005: CALL_1N         R0086
       STORE           L00,G2e
       CALL_VN         R0477 (L00,G13)
       CALL_VN         R0081 (#1b,G2f)
       JE              G00,#15 [FALSE] L0006
       CALL_VN         R0477 (L00,G16)
       JUMP            L0007
L0006: CALL_VN         R0477 (L00,G00)
L0007: RTRUE           

Routine R0253, 0 locals
    Action routine for:
        "squash noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#02 [FALSE] L0004
       CALL_VS         R0285 (#4f,#01,G2e) -> -(SP)
       RET_POPPED      
L0004: CALL_VN         R0285 (#4f,#02,G2e)
       RTRUE           

Routine R0254, 0 locals
    Action routine for:
        "discard held at / against / on / onto noun"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              G2f,#01 [FALSE] L0003
       STORE           G2b,#1002
       CALL_VS         R0091 (G2f,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       STORE           G2b,#50
       RTRUE           
L0002: STORE           G2b,#50
L0003: JG              #01,G2e [TRUE] L0004
       JG              G2e,#0082 [FALSE] L0005
L0004: CALL_VN         R0471 (#03,G2e)
       JUMP            L0010
L0005: TEST_ATTR       G2e,#1c [FALSE] L0010
       CALL_VN         R0285 (#10,#03,G2e)
       CALL_VN         R0081 (#29,G2e)
       JG              #01,G2e [TRUE] L0006
       JG              G2e,#0082 [FALSE] L0007
L0006: CALL_VN         R0471 (#03,G2e)
       JUMP            L0010
L0007: TEST_ATTR       G2e,#1c [FALSE] L0010
       JG              #01,G2e [TRUE] L0008
       JG              G2e,#0082 [FALSE] L0009
L0008: CALL_VN         R0471 (#02,G2e)
       JUMP            L0010
L0009: JIN             G2e,G13 [TRUE] RTRUE
L0010: JG              #01,G2f [TRUE] L0011
       JG              G2f,#0082 [FALSE] L0012
L0011: CALL_VN         R0471 (#03,G2f)
       JUMP            L0013
L0012: TEST_ATTR       G2f,#02 [TRUE] L0014
L0013: CALL_VS         R0285 (#50,#01) -> -(SP)
       RET_POPPED      
L0014: CALL_VS         R0087 (G2f,#50) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#50,#02,G2e)
       RTRUE           

Routine R0255, 0 locals
    Action routine for:
        

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: JG              #01,G2e [TRUE] L0002
       JG              G2e,#0082 [FALSE] L0003
L0002: CALL_VN         R0471 (#03,G2e)
       JUMP            L0004
L0003: TEST_ATTR       G2e,#02 [FALSE] L0004
       CALL_VS         R0087 (G2e,#42) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0004: CALL_VN         R0285 (#42,#01,G2e)
       RTRUE           

Routine R0256, 0 locals
    Action routine for:
        "embrace creature"

       CALL_2S         R0171 (G2e) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VS         R0087 (G2e,#32) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       JE              G2e,G13 [FALSE] L0002
       CALL_VS         R0285 (#37,#03,G2e) -> -(SP)
       RET_POPPED      
L0002: CALL_VN         R0285 (#32,#01,G2e)
       RTRUE           

Routine R0257, 0 locals
    Action routine for:
        "answer topic to creature"

       JZ              G2f [TRUE] L0001
       CALL_VS         R0087 (G2f,#52) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
L0001: CALL_VN         R0285 (#52,#01,G2e)
       RTRUE           

Routine R0258, 0 locals
    Action routine for:
        "tell creature about topic"

       JE              G2e,G13 [FALSE] L0001
       CALL_VS         R0285 (#51,#01,G2e) -> -(SP)
       RET_POPPED      
L0001: CALL_VS         R0087 (G2e,#51) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#51,#02,G2e)
       RTRUE           

Routine R0259, 0 locals
    Action routine for:
        "ask creature about topic"

       CALL_VS         R0087 (G2e,#53) -> -(SP)
       JZ              (SP)+ [FALSE] RFALSE
       CALL_VN         R0285 (#53,#01,G2e)
       RTRUE           

Routine R0260, 0 locals
    Action routine for:
        "ask creature for noun"

       JE              G2e,G13 [FALSE] L0001
       CALL_2N         R0081 (#0e)
       RTRUE           
L0001: CALL_VN         R0285 (#1003,#01,G2e)
       RTRUE           

Routine R0261, 0 locals
    Action routine for:
        "trace"
        "trace on"

       STORE           G33,#01
       PRINT_RET       "[Trace on.]"

Routine R0262, 0 locals
    Action routine for:
        "trace number"

       STORE           G33,G2e
       PRINT           "[Parser tracing set to level "
       PRINT_NUM       G33
       PRINT           ".]
"
       RTRUE           

Routine R0263, 0 locals
    Action routine for:
        "trace off"

       STORE           G33,#00
       PRINT_RET       "Trace off."

Routine R0264, 0 locals
    Action routine for:
        "messages"
        "messages on"

       OR              G29,#01 -> G29
       PRINT_RET       "[Message listing on.]"

Routine R0265, 0 locals
    Action routine for:
        "messages off"

       AND             G29,#0e -> G29
       PRINT_RET       "[Message listing off.]"

Routine R0266, 0 locals
    Action routine for:
        "actions"
        "actions on"

       OR              G29,#02 -> G29
       PRINT_RET       "[Action listing on.]"

Routine R0267, 0 locals
    Action routine for:
        "actions off"

       AND             G29,#0d -> G29
       PRINT_RET       "[Action listing off.]"

Routine R0268, 0 locals
    Action routine for:
        "daemons"
        "daemons on"

       OR              G29,#04 -> G29
       PRINT_RET       "[Timers listing on.]"

Routine R0269, 0 locals
    Action routine for:
        "daemons off"

       AND             G29,#0b -> G29
       PRINT_RET       "[Timers listing off.]"

Routine R0270, 0 locals
    Action routine for:
        "changes"
        "changes on"

       OR              G29,#08 -> G29
       PRINT_RET       "[Changes listing on.]"

Routine R0271, 0 locals
    Action routine for:
        "changes off"

       AND             G29,#07 -> G29
       PRINT_RET       "[Changes listing off.]"

Routine R0272, 0 locals
    Action routine for:
        "recording"
        "recording on"

       OUTPUT_STREAM   RECORD_ENABLE
       STORE           G08,#01
       PRINT_RET       "[Command recording on.]"

Routine R0273, 0 locals
    Action routine for:
        "recording off"

       JE              G08,#01 [FALSE] L0001
       OUTPUT_STREAM   #fffc
L0001: STORE           G08,#00
       PRINT_RET       "[Command recording off.]"

Routine R0274, 0 locals
    Action routine for:
        "replay"

       INPUT_STREAM    #01
       STORE           G08,#02
       PRINT_RET       "[Replaying commands.]"

Routine R0275, 1 local
    Action routine for:
        "random"

       RANDOM          #ff9c -> L00
       PRINT_PADDR     S141
       NEW_LINE        
       RTRUE           

Routine R0276, 2 locals

       JG              L00,#18 [FALSE] L0003
       JE              L00,#1a [TRUE] L0003
       JG              #01,L00 [TRUE] L0001
       JG              L00,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,L00)
       JUMP            L0004
L0002: JIN             L00,"Class" [FALSE] L0004
L0003: PRINT           "[Can't move "
       CALL_2N         R0119 (L00)
       PRINT_RET       ": it's a system object.]"
L0004: JZ              L01 [TRUE] L0009
       JE              L01,L00 [FALSE] L0005
       PRINT           "[Can't move "
       CALL_2N         R0119 (L00)
       PRINT_RET       ": it would contain itself.]"
L0005: JG              #05,L01 [TRUE] L0006
       JG              L01,#0082 [TRUE] L0006
       JIN             L01,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#04,L01)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L01
L0008: GET_PARENT      Gee -> L01
       JUMP            L0004
L0009: RFALSE          

Routine R0277, 0 locals
    Action routine for:
        "purloin multi"

       CALL_VS         R0276 (G2e,G13) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VN         R0477 (G2e,G13)
       CALL_VN         R0479 (G2e,#0e)
       CALL_VN         R0480 (G2e,#05)
       PRINT_RET       "[Purloined.]"

Routine R0278, 0 locals
    Action routine for:
        "abstract noun to noun"

       CALL_VS         R0276 (G2e,G2f) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       RTRUE           
L0001: CALL_VN         R0477 (G2e,G2f)
       PRINT_RET       "[Abstracted.]"

Routine R0279, 2 locals

       JG              #05,L00 [TRUE] L0001
       JG              L00,#0082 [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,L00
L0003: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       CALL_2N         R0119 (L00)
       JUMP            L0005
L0004: CALL_2N         R0116 (L00)
L0005: PRINT           " ("
       PRINT_NUM       L00
       PRINT           ") "
       JE              L01,#01 [FALSE] L0015
       JG              #05,L00 [TRUE] L0006
       JG              L00,#0082 [TRUE] L0006
       JIN             L00,"Class" [FALSE] L0007
L0006: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0008
L0007: STORE           Gee,L00
L0008: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0015
       PRINT           "(in "
       JG              #05,L00 [TRUE] L0009
       JG              L00,#0082 [TRUE] L0009
       JIN             L00,"Class" [FALSE] L0010
L0009: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0011
L0010: STORE           Gee,L00
L0011: GET_PARENT      Gee -> -(SP)
       CALL_2N         R0119 ((SP)+)
       PRINT           " "
       JG              #05,L00 [TRUE] L0012
       JG              L00,#0082 [TRUE] L0012
       JIN             L00,"Class" [FALSE] L0013
L0012: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0014
L0013: STORE           Gee,L00
L0014: GET_PARENT      Gee -> -(SP)
       PRINT_NUM       (SP)+
       PRINT           ")"
L0015: NEW_LINE        
       JG              #05,L00 [TRUE] L0016
       JG              L00,#0082 [TRUE] L0016
       JIN             L00,"Class" [FALSE] L0017
L0016: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0018
L0017: STORE           Gee,L00
L0018: GET_CHILD       Gee -> -(SP) [FALSE] L0019
L0019: JZ              (SP)+ [TRUE] RTRUE
       JE              L00,#01 [FALSE] L0024
       JG              #05,L00 [TRUE] L0020
       JG              L00,#0082 [TRUE] L0020
       JIN             L00,"Class" [FALSE] L0021
L0020: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0022
L0021: STORE           Gee,L00
L0022: GET_CHILD       Gee -> -(SP) [FALSE] L0023
L0023: CALL_VN         R0140 ((SP)+,#1023,#01)
       JUMP            L0029
L0024: JG              #05,L00 [TRUE] L0025
       JG              L00,#0082 [TRUE] L0025
       JIN             L00,"Class" [FALSE] L0026
L0025: CALL_VN         R0471 (#06,L00)
       STORE           Gee,#02
       JUMP            L0027
L0026: STORE           Gee,L00
L0027: GET_CHILD       Gee -> -(SP) [FALSE] L0028
L0028: CALL_VN         R0140 ((SP)+,#27,#01)
L0029: RTRUE           

Routine R0280, 1 local
    Action routine for:
        "tree"
        "tree noun"

       JZ              G2e [FALSE] L0007
       STORE           L00,#01
L0001: CALL_VS         R0469 (L00,#02) -> -(SP)
       JZ              (SP)+ [TRUE] L0005
       JG              #05,L00 [TRUE] L0002
       JG              L00,#0082 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_2N         R0279 (L00)
L0005: INC             L00
       JG              L00,#0082 [TRUE] L0006
       JUMP            L0001
L0006: JUMP            L0008
L0007: CALL_VN         R0279 (G2e,#01)
L0008: RTRUE           

Routine R0281, 0 locals
    Action routine for:
        "goto number"

       CALL_VS         R0469 (G2e,#02) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       JG              #05,G2e [TRUE] L0001
       JG              G2e,#0082 [TRUE] L0001
       JIN             G2e,"Class" [FALSE] L0002
L0001: CALL_VN         R0471 (#04,G2e)
       STORE           Gee,#02
       JUMP            L0003
L0002: STORE           Gee,G2e
L0003: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       PRINT_RET       "[Not a safe place.]"
L0004: CALL_2N         R0147 (G2e)
       RTRUE           

Routine R0282, 1 local
    Action routine for:
        "gonear noun"

       STORE           L00,G2e
L0001: JG              #05,L00 [TRUE] L0002
       JG              L00,#0082 [TRUE] L0002
       JIN             L00,"Class" [FALSE] L0003
L0002: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0004
L0003: STORE           Gee,L00
L0004: GET_PARENT      Gee -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JG              #05,L00 [TRUE] L0005
       JG              L00,#0082 [TRUE] L0005
       JIN             L00,"Class" [FALSE] L0006
L0005: CALL_VN         R0471 (#04,L00)
       STORE           Gee,#02
       JUMP            L0007
L0006: STORE           Gee,L00
L0007: GET_PARENT      Gee -> L00
       JUMP            L0001
L0008: CALL_2N         R0147 (L00)
       RTRUE           

Routine R0283, 1 local

       INC             G2a
       PUSH            G2a
       PRINT_NUM       (SP)+
       PRINT           ": "
       CALL_2N         R0116 (L00)
       PRINT           " ("
       PRINT_NUM       L00
       PRINT_RET       ")"

Routine R0284, 0 locals
    Action routine for:
        "scope"
        "scope noun"

       STORE           G2a,#00
       CALL_VN         R0084 (#4835,G2e)
       JZ              G2a [FALSE] L0001
       PRINT_RET       "Nothing is in scope."
L0001: RTRUE           

Routine R0285, 4 locals

       STORE           L03,Ge9
       STORE           Ge9,L00
       JZ              L01 [FALSE] L0001
       STORE           L01,#01
L0001: CALL_VN         R0286 (L01,L02)
       STORE           Ge9,L03
       RTRUE           

Routine R0286, 3 locals

       STORE           L02,G2b
       STORE           G27,L00
       STORE           G28,L01
       STORE           G2b,Ge9
       CALL_VS         R0091 (#1a,#04) -> -(SP)
       JZ              (SP)+ [TRUE] L0001
       STORE           G2b,L02
       RFALSE          
L0001: STORE           G2b,L02
       CALL_VN         R0014 (L00,L01)
       RTRUE           

Routine R0287, 1 local

       STORE           Gef,L00
       JE              Gef,#00 [FALSE] L0001
       PRINT_RET       "Jumping over the lava"
L0001: JE              Gef,#01 [FALSE] L0002
       PRINT_RET       "Killed Grunt #1"
L0002: JE              Gef,#02 [FALSE] L0003
       PRINT_RET       "Killed Grunt #2"
L0003: JE              Gef,#03 [FALSE] L0004
       PRINT_RET       "Killed Rottweiler #1"
L0004: JE              Gef,#04 [FALSE] L0005
       PRINT_RET       "Killed Rottweiler #2"
L0005: JE              Gef,#05 [FALSE] L0006
       PRINT_RET       "Killed Grunt #3"
L0006: JE              Gef,#06 [FALSE] L0007
       PRINT_RET       "Killed Rottweiler #3"
L0007: JE              Gef,#07 [FALSE] L0008
       PRINT_RET       "Killed Grunt #4"
L0008: JE              Gef,#08 [FALSE] L0009
       PRINT_RET       "Killed Crazy Rottweiler"
L0009: JE              Gef,#09 [FALSE] L0010
       PRINT_RET       "Released platform over acid"
L0010: JE              Gef,#0a [FALSE] L0011
       PRINT_RET       "Killed Grunt #5"
L0011: JE              Gef,#0b [FALSE] L0012
       PRINT_RET       "Killed Grunt #6"
L0012: JE              Gef,#0c [FALSE] L0013
       PRINT_RET       "Killed Grunt #7"
L0013: JE              Gef,#0d [FALSE] L0014
       PRINT_RET       "Killed Grunt #8"
L0014: JE              Gef,#0e [FALSE] L0015
       PRINT_RET       "KIlled Grunt #9"
L0015: JE              Gef,#0f [FALSE] L0016
       PRINT_RET       "Found the Blue Armor"
L0016: JE              Gef,#10 [FALSE] L0017
       PRINT_RET       "Found hidden ammo"
L0017: JE              Gef,#11 [FALSE] L0018
       PRINT_RET       "Got that sweet, sweet pudding"
L0018: JE              Gef,#12 [FALSE] L0019
       PRINT_RET       "Completed button sequence"
L0019: JE              Gef,#13 [FALSE] L0020
       PRINT_RET       "Killed Grunt #10"
L0020: JE              Gef,#14 [FALSE] L0021
       PRINT_RET       "Killed Grunt #11"
L0021: RTRUE           

Routine R0288, 0 locals

       PRINT           "
The Rottweiler "
       RANDOM          #04 -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0002
       CALL_2N         R0125 (#01)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S142
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S143
       NEW_LINE        
       RTRUE           
       JUMP            L0009
L0002: JE              Gef,#02 [FALSE] L0004
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S144
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S145
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of health."
       JUMP            L0009
L0004: JE              Gef,#03 [FALSE] L0006
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S146
       NEW_LINE        
       RTRUE           
L0005: PRINT_PADDR     S147
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0009
L0006: JE              Gef,#04 [FALSE] L0008
       CALL_2N         R0125 (#08)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S148
       NEW_LINE        
       RTRUE           
L0007: PRINT           "gets a good chunk of you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of health."
       JUMP            L0009
L0008: JE              Gef,#05 [FALSE] L0009
       PRINT_PADDR     S149
       NEW_LINE        
       RTRUE           
L0009: RTRUE           

Routine R0289, 0 locals

       PRINT           "
The Grunt's shotgun "
       RANDOM          #0a -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0002
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S150
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S151
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S152
       NEW_LINE        
       RTRUE           
       JUMP            L0020
L0002: JE              Gef,#02 [FALSE] L0004
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S153
       NEW_LINE        
       RTRUE           
L0003: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S154
       NEW_LINE        
       RTRUE           
       JUMP            L0020
L0004: JE              Gef,#03 [FALSE] L0006
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S155
       NEW_LINE        
       RTRUE           
L0005: PRINT_PADDR     S156
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0020
L0006: JE              Gef,#04 [FALSE] L0008
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S157
       NEW_LINE        
       RTRUE           
L0007: PRINT_PADDR     S158
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S159
       NEW_LINE        
       RTRUE           
       JUMP            L0020
L0008: JE              Gef,#05 [FALSE] L0010
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_PADDR     S160
       NEW_LINE        
       RTRUE           
L0009: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S161
       NEW_LINE        
       RTRUE           
       JUMP            L0020
L0010: JE              Gef,#06 [FALSE] L0012
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       PRINT_PADDR     S162
       NEW_LINE        
       RTRUE           
L0011: PRINT           "hits your foot, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S163
       NEW_LINE        
       RTRUE           
       JUMP            L0020
L0012: JE              Gef,#07 [FALSE] L0014
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0013
       PRINT_PADDR     S164
       NEW_LINE        
       RTRUE           
L0013: PRINT_PADDR     S165
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0020
L0014: JE              Gef,#08 [FALSE] L0016
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0015
       PRINT_PADDR     S166
       NEW_LINE        
       RTRUE           
L0015: PRINT_PADDR     S167
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0020
L0016: JE              Gef,#09 [FALSE] L0018
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       PRINT_PADDR     S168
       NEW_LINE        
       RTRUE           
L0017: PRINT_PADDR     S169
       NEW_LINE        
       RTRUE           
       JUMP            L0020
L0018: JE              Gef,#0a [FALSE] L0020
       CALL_2N         R0125 (#14)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       PRINT_PADDR     S170
       NEW_LINE        
       RTRUE           
L0019: PRINT           "wounds your torso for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
L0020: RTRUE           

Routine R0290, 0 locals

       CALL_VS         R0464 (#05,#53) -> -(SP)
       JL              (SP)+,#02 [FALSE] L0001
       PRINT_PADDR     S171
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "help"
       SET_TEXT_STYLE  ROMAN
       PRINT           " for help, "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "inventory "
       SET_TEXT_STYLE  ROMAN
       PRINT           "for your inventory and "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "health "
       SET_TEXT_STYLE  ROMAN
       PRINT           "to check your health. Type "
       SET_TEXT_STYLE  BOLDFACE
       PRINT           "credits "
       SET_TEXT_STYLE  ROMAN
       PRINT           "for a complete list of credits.
"
       CALL_VN         R0463 (#05,#53,#02)
L0001: RFALSE          

Routine R0291, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S174
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0292, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S176
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0293, 0 locals

       JE              Ge9,#1b,#17 [FALSE] L0001
       CALL_VN         R0093 (#0079,#01)
L0001: RFALSE          

Routine R0294, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       CALL_VS         R0464 (#05,#58) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S180
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0295, 0 locals

       JE              Ge9,#2b [FALSE] L0001
       CALL_2N         R0162 (#11)
       PRINT_PADDR     S181
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0296, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S184
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0297, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0298, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0299, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0300, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0301, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0302, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0303, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0304, 0 locals

       JE              Ge9,#27 [FALSE] L0001
       CALL_2N         R0147 (#0037)
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_RET       "I'd like to see you try."
L0002: RFALSE          

Routine R0305, 0 locals

       JE              Ge9,#17,#43,#5f [TRUE] L0001
       JE              Ge9,#1b [FALSE] L0002
L0001: CALL_2N         R0147 (#002f)
       RTRUE           
L0002: RFALSE          

Routine R0306, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0307, 0 locals

       CALL_2N         R0125 (#0a)
       PRINT_PADDR     S199
       NEW_LINE        
       RTRUE           

Routine R0308, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0309, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S203
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0310, 0 locals

       JE              Ge9,#3d [FALSE] L0001
       PRINT_PADDR     S207
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_RET       "It's too far away."
L0002: RFALSE          

Routine R0311, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0312, 0 locals

       JE              Ge9,#27 [FALSE] L0001
       CALL_2N         R0147 (#0039)
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_RET       "I'd like to see you try."
L0002: RFALSE          

Routine R0313, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_2N         R0147 (#1e)
       RTRUE           
L0001: RFALSE          

Routine R0314, 0 locals

       CALL_VN         R0463 (#05,#5b,#01)
       CALL_2N         R0147 (#20)
       RTRUE           

Routine R0315, 0 locals

       CALL_VN         R0463 (#05,#5b,#02)
       CALL_2N         R0147 (#20)
       RTRUE           

Routine R0316, 0 locals

       CALL_VS         R0464 (#05,#4b) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       PRINT_PADDR     S215
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S216
       NEW_LINE        
       RTRUE           

Routine R0317, 0 locals

       CALL_VS         R0464 (#05,#48) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0463 (#05,#48,#01)
       PRINT_PADDR     S217
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0464 (#05,#48) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (#05,#4b) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       STORE           G14,#03
       PRINT_PADDR     S218
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0318, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S221
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#2b [FALSE] L0002
       CALL_VN         R0463 (#05,#58,#01)
       PRINT_PADDR     S222
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0319, 0 locals

       JE              Ge9,#3d [FALSE] L0001
       CALL_2N         R0125 (#0a)
       PRINT_PADDR     S224
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_PADDR     S225
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#17 [FALSE] L0005
       CALL_VS         R0464 (#05,#49) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VN         R0463 (#05,#49,#01)
       PRINT_PADDR     S226
       NEW_LINE        
       RTRUE           
L0003: CALL_VS         R0464 (#05,#49) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0004
       STORE           G14,#03
       PRINT_PADDR     S227
       NEW_LINE        
       RTRUE           
L0004: RFALSE          
L0005: JE              Ge9,#3b [FALSE] L0006
       CALL_VN         R0481 (#3c,#07,#20)
       CALL_VN         R0463 (#05,#4b,#01)
       CALL_VN         R0463 (#05,#5b,#03)
       CALL_2N         R0162 (#00)
       PRINT_PADDR     S228
       NEW_LINE        
       RTRUE           
L0006: RFALSE          

Routine R0320, 0 locals

       CALL_VS         R0464 (#05,#5a) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT           "LOADING."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           ".
"
       CALL_2N         R0412 (#02)
       CALL_VN         R0463 (#05,#5a,#01)
L0001: RFALSE          

Routine R0321, 0 locals

       CALL_VS         R0464 (#05,#5a) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0463 (#05,#5a,#01)
       PRINT_PADDR     S229
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S230
       NEW_LINE        
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0322, 0 locals

       JE              Ge9,#27 [FALSE] L0001
       CALL_2N         R0147 (#0048)
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_RET       "I'd like to see you try."
L0002: RFALSE          

Routine R0323, 0 locals

       JE              Ge9,#60,#17 [FALSE] L0001
       CALL_VN         R0477 (G13,Geb)
       CALL_VN         R0463 (Geb,#69,#01)
       CALL_VN         R0477 (#0046,Geb)
       PRINT_PADDR     S233
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_RET       "I'd like to see you try."
L0002: RFALSE          

Routine R0324, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: JE              Ge9,#17 [FALSE] L0002
       PRINT_PADDR     S235
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0325, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: JE              Ge9,#60 [FALSE] L0002
       CALL_2N         R0162 (#0f)
       CALL_2N         R0147 (#0044)
L0002: RFALSE          

Routine R0326, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       ADD             G8a,#64 -> G8a
       PRINT_PADDR     S240
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0327, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S245
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0002
       CALL_2N         R0147 (#004b)
       RTRUE           
L0002: RFALSE          

Routine R0328, 0 locals

       CALL_1N         R0289
       RFALSE          

Routine R0329, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S247
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0330, 0 locals

       PRINT_PADDR     S248
       CALL_VS         R0464 (#4a,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0331, 0 locals

       CALL_VS         R0464 (#05,#5d) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0463 (#05,#5d,#01)
       CALL_VS         R0464 (#0051,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0464 (#0052,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S249
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S250
       NEW_LINE        
       RTRUE           
       JUMP            L0004
L0002: CALL_VS         R0464 (#0051,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       CALL_VS         R0464 (#0052,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S251
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S252
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0332, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S254
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0333, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S256
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0002
       CALL_2N         R0147 (#48)
       RTRUE           
L0002: RFALSE          

Routine R0334, 0 locals

       RTRUE           

Routine R0335, 0 locals

       JE              Ge9,#0f [FALSE] L0003
       JG              G89,#14 [TRUE] L0001
       STORE           G89,#00
       CALL_VS         R0464 (#05,#5e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#5e,(SP)+)
       CALL_2N         R0478 (Geb)
       JUMP            L0002
L0001: SUB             G89,#14 -> G89
       CALL_VS         R0464 (#05,#5e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#5e,(SP)+)
       CALL_2N         R0478 (Geb)
L0002: PRINT_PADDR     S257
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0336, 0 locals

       RTRUE           

Routine R0337, 0 locals

       JE              Ge9,#0f [FALSE] L0003
       JG              G89,#14 [TRUE] L0001
       STORE           G89,#00
       CALL_VS         R0464 (#05,#5e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#5e,(SP)+)
       CALL_2N         R0478 (Geb)
       JUMP            L0002
L0001: SUB             G89,#14 -> G89
       CALL_VS         R0464 (#05,#5e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#5e,(SP)+)
       CALL_2N         R0478 (Geb)
L0002: PRINT_PADDR     S258
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0338, 0 locals

       CALL_VS         R0464 (#05,#5e) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0001
       PRINT_RET       "You can see three Medkits here."
L0001: CALL_VS         R0464 (#05,#5e) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0002
       PRINT_PADDR     S259
       NEW_LINE        
       RTRUE           
L0002: PRINT_PADDR     S260
       NEW_LINE        
       RTRUE           

Routine R0339, 0 locals

       JE              Ge9,#0f [FALSE] L0003
       JG              G89,#14 [TRUE] L0001
       STORE           G89,#00
       CALL_VS         R0464 (#05,#5e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#5e,(SP)+)
       CALL_2N         R0478 (Geb)
       JUMP            L0002
L0001: SUB             G89,#14 -> G89
       CALL_VS         R0464 (#05,#5e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#5e,(SP)+)
       CALL_2N         R0478 (Geb)
L0002: PRINT_PADDR     S262
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0340, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
       JUMP            L0002
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0002: RFALSE          

Routine R0341, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S264
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0342, 0 locals

       PRINT_PADDR     S265
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0343, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0288
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0002
       PRINT_PADDR     S267
       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
       JUMP            L0003
L0002: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0003: RFALSE          

Routine R0344, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S268
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0345, 0 locals

       PRINT_PADDR     S269
       CALL_VS         R0464 (#52,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0346, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S272
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0347, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0288
       JUMP            L0002
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0002: RFALSE          

Routine R0348, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S274
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0349, 0 locals

       PRINT_PADDR     S275
       CALL_VS         R0464 (#52,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0350, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
       JUMP            L0002
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0002: RFALSE          

Routine R0351, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S277
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0352, 0 locals

       PRINT_PADDR     S278
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0353, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S281
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0354, 0 locals

       JE              Ge9,#0f [FALSE] L0003
       JG              G89,#14 [TRUE] L0001
       STORE           G89,#00
       CALL_2N         R0478 (Geb)
       JUMP            L0002
L0001: SUB             G89,#14 -> G89
       CALL_2N         R0478 (Geb)
L0002: PRINT_PADDR     S283
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0355, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0288
       JUMP            L0002
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0002: RFALSE          

Routine R0356, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S286
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0357, 0 locals

       PRINT_PADDR     S287
       CALL_VS         R0464 (#52,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0358, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
       JUMP            L0002
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0002: RFALSE          

Routine R0359, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S289
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0360, 0 locals

       PRINT_PADDR     S290
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0361, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S292
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0362, 0 locals

       PRINT_PADDR     S293
       CALL_VS         R0464 (#52,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0363, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_RET       "I'd like to see you try."
L0001: RFALSE          

Routine R0364, 0 locals

       JE              G00,Geb [FALSE] L0003
       CALL_VS         R0464 (#05,#51) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#51) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#51,(SP)+)
       PRINT_PADDR     S297
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0464 (#05,#51) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#51) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#51,(SP)+)
       PRINT_PADDR     S298
       NEW_LINE        
       RTRUE           
L0002: CALL_2N         R0125 (#05)
       PRINT_PADDR     S299
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0365, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_VN         R0477 (G13,Geb)
       RFALSE          
L0001: JE              Ge9,#0f [FALSE] L0002
       PRINT_PADDR     S300
       NEW_LINE        
       RTRUE           
L0002: JE              Ge9,#3d [FALSE] L0003
       PRINT_RET       "Oh you can't be serious."
L0003: RFALSE          

Routine R0366, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0022
       PRINT           "
Grunt #1's shotgun "
       RANDOM          #0b -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0002
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S301
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S302
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S303
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0002: JE              Gef,#02 [FALSE] L0004
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S304
       NEW_LINE        
       RTRUE           
L0003: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S305
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0004: JE              Gef,#03 [FALSE] L0006
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S306
       NEW_LINE        
       RTRUE           
L0005: PRINT_PADDR     S307
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0021
L0006: JE              Gef,#04 [FALSE] L0008
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S308
       NEW_LINE        
       RTRUE           
L0007: PRINT_PADDR     S309
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S310
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0008: JE              Gef,#05 [FALSE] L0010
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_PADDR     S311
       NEW_LINE        
       RTRUE           
L0009: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S312
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0010: JE              Gef,#06 [FALSE] L0012
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       PRINT_PADDR     S313
       NEW_LINE        
       RTRUE           
L0011: PRINT           "hits your foot, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S314
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0012: JE              Gef,#07 [FALSE] L0014
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0013
       PRINT_PADDR     S315
       NEW_LINE        
       RTRUE           
L0013: PRINT_PADDR     S316
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0021
L0014: JE              Gef,#08 [FALSE] L0016
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0015
       PRINT_PADDR     S317
       NEW_LINE        
       RTRUE           
L0015: PRINT_PADDR     S318
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0021
L0016: JE              Gef,#09 [FALSE] L0018
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       PRINT_PADDR     S319
       NEW_LINE        
       RTRUE           
L0017: PRINT_PADDR     S320
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0018: JE              Gef,#0a [FALSE] L0020
       CALL_2N         R0125 (#14)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       PRINT_PADDR     S321
       NEW_LINE        
       RTRUE           
L0019: PRINT           "wounds your torso for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0021
L0020: JE              Gef,#0b [FALSE] L0021
       PRINT_RET       "misses you entirely."
L0021: JUMP            L0023
L0022: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0023: RFALSE          

Routine R0367, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S322
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0368, 0 locals

       RTRUE           

Routine R0369, 0 locals

       RTRUE           

Routine R0370, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0022
       PRINT           "
Grunt #2's shotgun "
       RANDOM          #0b -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0002
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S323
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S324
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S325
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0002: JE              Gef,#02 [FALSE] L0004
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S326
       NEW_LINE        
       RTRUE           
L0003: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S327
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0004: JE              Gef,#03 [FALSE] L0006
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S328
       NEW_LINE        
       RTRUE           
L0005: PRINT_PADDR     S329
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0021
L0006: JE              Gef,#04 [FALSE] L0008
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S330
       NEW_LINE        
       RTRUE           
L0007: PRINT_PADDR     S331
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S332
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0008: JE              Gef,#05 [FALSE] L0010
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_PADDR     S333
       NEW_LINE        
       RTRUE           
L0009: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S334
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0010: JE              Gef,#06 [FALSE] L0012
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       PRINT_PADDR     S335
       NEW_LINE        
       RTRUE           
L0011: PRINT           "hits your foot, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S336
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0012: JE              Gef,#07 [FALSE] L0014
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0013
       PRINT_PADDR     S337
       NEW_LINE        
       RTRUE           
L0013: PRINT_PADDR     S338
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0021
L0014: JE              Gef,#08 [FALSE] L0016
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0015
       PRINT_PADDR     S339
       NEW_LINE        
       RTRUE           
L0015: PRINT_PADDR     S340
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0021
L0016: JE              Gef,#09 [FALSE] L0018
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       PRINT_PADDR     S341
       NEW_LINE        
       RTRUE           
L0017: PRINT_PADDR     S342
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0018: JE              Gef,#0a [FALSE] L0020
       CALL_2N         R0125 (#14)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       PRINT_PADDR     S343
       NEW_LINE        
       RTRUE           
L0019: PRINT           "wounds your torso for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0021
L0020: JE              Gef,#0b [FALSE] L0021
       PRINT_RET       "misses you entirely."
L0021: JUMP            L0023
L0022: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0023: RFALSE          

Routine R0371, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S344
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0372, 0 locals

       RTRUE           

Routine R0373, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0022
       PRINT           "
Grunt #3's shotgun "
       RANDOM          #0b -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0002
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S345
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S346
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S347
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0002: JE              Gef,#02 [FALSE] L0004
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S348
       NEW_LINE        
       RTRUE           
L0003: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S349
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0004: JE              Gef,#03 [FALSE] L0006
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S350
       NEW_LINE        
       RTRUE           
L0005: PRINT_PADDR     S351
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0021
L0006: JE              Gef,#04 [FALSE] L0008
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S352
       NEW_LINE        
       RTRUE           
L0007: PRINT_PADDR     S353
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S354
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0008: JE              Gef,#05 [FALSE] L0010
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0009
       PRINT_PADDR     S355
       NEW_LINE        
       RTRUE           
L0009: PRINT           "nicks your leg, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S356
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0010: JE              Gef,#06 [FALSE] L0012
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0011
       PRINT_PADDR     S357
       NEW_LINE        
       RTRUE           
L0011: PRINT           "hits your foot, hitting you for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S358
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0012: JE              Gef,#07 [FALSE] L0014
       CALL_2N         R0125 (#05)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0013
       PRINT_PADDR     S359
       NEW_LINE        
       RTRUE           
L0013: PRINT_PADDR     S360
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0021
L0014: JE              Gef,#08 [FALSE] L0016
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0015
       PRINT_PADDR     S361
       NEW_LINE        
       RTRUE           
L0015: PRINT_PADDR     S362
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points of damage."
       JUMP            L0021
L0016: JE              Gef,#09 [FALSE] L0018
       CALL_2N         R0125 (#0a)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0017
       PRINT_PADDR     S363
       NEW_LINE        
       RTRUE           
L0017: PRINT_PADDR     S364
       NEW_LINE        
       RTRUE           
       JUMP            L0021
L0018: JE              Gef,#0a [FALSE] L0020
       CALL_2N         R0125 (#14)
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       JZ              (SP)+ [FALSE] L0019
       PRINT_PADDR     S365
       NEW_LINE        
       RTRUE           
L0019: PRINT           "wounds your torso for "
       CALL_VS         R0464 (#05,#5f) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " points."
       JUMP            L0021
L0020: JE              Gef,#0b [FALSE] L0021
       PRINT_RET       "misses you entirely."
L0021: JUMP            L0023
L0022: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0023: RFALSE          

Routine R0374, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S366
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0375, 0 locals

       CALL_VS         R0464 (Geb,#6d) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0463 (Geb,#6d,#01)
       PRINT_PADDR     S367
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0464 (#05,#60) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0002
       PRINT_PADDR     S368
       NEW_LINE        
       RTRUE           
L0002: CALL_VS         R0464 (#05,#60) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0003
       PRINT_PADDR     S369
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S370
       NEW_LINE        
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0376, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S372
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0003
       CALL_VS         R0464 (Geb,#6f) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0481 (#5e,#07,#0064)
       CALL_2N         R0162 (#09)
       CALL_2N         R0478 (#5f)
       PRINT_PADDR     S373
       NEW_LINE        
       RTRUE           
L0002: PRINT_PADDR     S374
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0377, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
       PRINT_PADDR     S377
       JUMP            L0003
L0002: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0003: RFALSE          

Routine R0378, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S378
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0379, 0 locals

       PRINT_PADDR     S379
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0380, 0 locals

       CALL_VS         R0464 (#05,#4e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0463 (#05,#4e,#01)
       PRINT_PADDR     S380
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S381
       NEW_LINE        
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0381, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S384
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0006
       CALL_VS         R0464 (#05,#55) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#55,#01)
       PRINT_PADDR     S385
       NEW_LINE        
       RTRUE           
L0002: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#55,#01)
       PRINT_PADDR     S386
       NEW_LINE        
       RTRUE           
L0003: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0004
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#55,#01)
       CALL_VN         R0481 (#006c,#07,#006f)
       CALL_2N         R0162 (#12)
       PRINT_PADDR     S387
       NEW_LINE        
       RTRUE           
L0004: JUMP            L0006
L0005: PRINT_RET       "You've already pushed this one!"
L0006: RFALSE          

Routine R0382, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
       PRINT_PADDR     S389
       JUMP            L0003
L0002: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0003: RFALSE          

Routine R0383, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S390
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0384, 0 locals

       PRINT_PADDR     S391
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0385, 0 locals

       CALL_VS         R0464 (#05,#4f) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VN         R0463 (#05,#4f,#01)
       PRINT_PADDR     S392
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S393
       NEW_LINE        
       RTRUE           

orphan code fragment:

       RFALSE          

Routine R0386, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S396
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0006
       CALL_VS         R0464 (#05,#56) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#56,#01)
       PRINT_PADDR     S397
       NEW_LINE        
       RTRUE           
L0002: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#56,#01)
       PRINT_PADDR     S398
       NEW_LINE        
       RTRUE           
L0003: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0004
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#56,#01)
       CALL_VN         R0481 (#006c,#07,#006f)
       CALL_2N         R0162 (#12)
       PRINT_PADDR     S399
       NEW_LINE        
       RTRUE           
L0004: JUMP            L0006
L0005: PRINT_RET       "You've already pushed this one!"
L0006: RFALSE          

Routine R0387, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
       PRINT_PADDR     S401
       JUMP            L0003
L0002: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0003: RFALSE          

Routine R0388, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S402
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0389, 0 locals

       PRINT_PADDR     S403
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0390, 0 locals

       CALL_VS         R0464 (#05,#50) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VN         R0463 (#05,#50,#01)
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0001
       PRINT_PADDR     S404
       NEW_LINE        
       RTRUE           
L0001: PRINT_PADDR     S405
       NEW_LINE        
       RTRUE           
       JUMP            L0004
L0002: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0003
       PRINT_PADDR     S406
       NEW_LINE        
       RTRUE           
L0003: PRINT_PADDR     S407
       NEW_LINE        
       RTRUE           
L0004: RFALSE          

Routine R0391, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S410
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#4c [FALSE] L0006
       CALL_VS         R0464 (#05,#59) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#59,#01)
       PRINT_PADDR     S411
       NEW_LINE        
       RTRUE           
L0002: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0003
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#59,#01)
       PRINT_PADDR     S412
       NEW_LINE        
       RTRUE           
L0003: CALL_VS         R0464 (#05,#4d) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0004
       CALL_VS         R0464 (#05,#4d) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#4d,(SP)+)
       CALL_VN         R0463 (#05,#59,#01)
       CALL_VN         R0481 (#6c,#07,#006f)
       CALL_2N         R0162 (#12)
       PRINT_PADDR     S413
       NEW_LINE        
       RTRUE           
L0004: JUMP            L0006
L0005: PRINT_RET       "You've already pushed this one!"
L0006: RFALSE          

Routine R0392, 0 locals

       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_1N         R0289
L0001: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
       PRINT_PADDR     S415
       JUMP            L0003
L0002: CALL_VS         R0464 (Geb,#6e) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#6e,(SP)+)
L0003: RFALSE          

Routine R0393, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S416
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0394, 0 locals

       PRINT_PADDR     S417
       CALL_VS         R0464 (#51,#6a) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " health."

Routine R0395, 0 locals

       JE              Ge9,#1b,#17 [FALSE] L0001
       CALL_VN         R0093 (#0070,#01)
L0001: RFALSE          

Routine R0396, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S420
       NEW_LINE        
       RTRUE           
L0001: JE              Ge9,#53,#52,#51 [TRUE] L0002
       JE              Ge9,#61 [FALSE] L0003
L0002: PRINT_RET       "
You get no reply"
L0003: RFALSE          

Routine R0397, 0 locals

       JE              G00,#6f [FALSE] L0008
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S421
       NEW_LINE        
       RTRUE           
L0001: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PRINT_PADDR     S422
       NEW_LINE        
       RTRUE           
L0002: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0003
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S423
       NEW_LINE        
       RTRUE           
L0003: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#03 [FALSE] L0004
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       PRINT_PADDR     S424
       NEW_LINE        
       RTRUE           
L0004: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#04 [FALSE] L0005
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0005
       PRINT_PADDR     S425
       NEW_LINE        
       RTRUE           
L0005: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#05 [FALSE] L0006
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0006
       PRINT_PADDR     S426
       NEW_LINE        
       RTRUE           
L0006: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#06 [FALSE] L0007
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0007
       PRINT_PADDR     S427
       NEW_LINE        
       RTRUE           
L0007: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#07 [FALSE] L0008
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#70,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0008
       PRINT_PADDR     S428
       STORE           G14,#02
L0008: RFALSE          

Routine R0398, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_VN         R0463 (#05,#5b,#02)
       CALL_2N         R0147 (#20)
       RTRUE           
L0001: RFALSE          

Routine R0399, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_2N         R0147 (#20)
       RTRUE           
L0001: RFALSE          

Routine R0400, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_2N         R0147 (#3f)
       RTRUE           
L0001: RFALSE          

Routine R0401, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_2N         R0147 (#20)
       CALL_VN         R0463 (#05,#5b,#01)
       RTRUE           
L0001: RFALSE          

Routine R0402, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_VS         R0464 (#05,#4b) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_RET       "There's lava in the way."
L0001: RFALSE          

Routine R0403, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_VS         R0464 (#05,#4b) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0001
       CALL_VN         R0463 (#05,#5b,#01)
       CALL_2N         R0147 (#20)
       RTRUE           
L0001: RFALSE          

Routine R0404, 0 locals

       JE              Ge9,#17 [FALSE] L0001
       CALL_VN         R0463 (#05,#5b,#03)
       CALL_2N         R0147 (#1b)
       RTRUE           
L0001: RFALSE          

Routine R0405, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S437
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0406, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S440
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0407, 0 locals

       JE              G00,#1e [FALSE] L0004
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#79,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_RET       "
Sal scratches himself loudly."
L0001: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#79,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0002
       PRINT_RET       "
Sal belches."
L0002: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JE              (SP)+,#02 [FALSE] L0003
       CALL_VS         R0464 (Geb,#5c) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (Geb,#5c,(SP)+)
       CALL_VN         R0093 (#79,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0003
       PRINT_PADDR     S441
       NEW_LINE        
       RTRUE           
L0003: CALL_VS         R0464 (Geb,#5c) -> -(SP)
       JG              (SP)+,#02 [FALSE] L0004
       CALL_VN         R0463 (Geb,#5c,#00)
       CALL_VN         R0093 (#79,#01)
       CALL_VS         R0464 (Geb,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0004
       PRINT_RET       "
Sal yawns."
L0004: RFALSE          

Routine R0408, 0 locals

       JE              Ge9,#53,#52,#51 [TRUE] L0001
       JE              Ge9,#61 [FALSE] L0002
L0001: PRINT_PADDR     S442
       NEW_LINE        
       RTRUE           
L0002: RFALSE          

Routine R0409, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S447
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0410, 0 locals

       JE              Ge9,#0f [FALSE] L0001
       PRINT_PADDR     S450
       NEW_LINE        
       RTRUE           
L0001: RFALSE          

Routine R0411, 0 locals

       JE              Ge9,#0f [FALSE] L0003
       JG              G89,#14 [TRUE] L0001
       STORE           G89,#00
       CALL_2N         R0478 (Geb)
       JUMP            L0002
L0001: SUB             G89,#14 -> G89
       CALL_2N         R0478 (Geb)
L0002: PRINT_PADDR     S455
       NEW_LINE        
       RTRUE           
L0003: RFALSE          

Routine R0412, 1 local

       JZ              L00 [TRUE] L0001
       READ_CHAR       #01,L00,R0412 -> L00
L0001: RTRUE           

Routine R0413, 0 locals
    Action routine for:
        "load"
        "load noun"

       JZ              G2e [FALSE] L0001
       PRINT_RET       "I'm a load of what?"
L0001: RTRUE           

Routine R0414, 0 locals
    Action routine for:
        "god"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S456
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0415, 0 locals
    Action routine for:
        "noclip"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S457
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0416, 0 locals
    Action routine for:
        "unreal"

       JZ              G2e [FALSE] L0001
       PRINT_RET       "Wrong game, man."
L0001: RTRUE           

Routine R0417, 0 locals
    Action routine for:
        "blue"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S458
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0418, 0 locals
    Action routine for:
        "shack"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S459
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0419, 0 locals
    Action routine for:
        "sue"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S460
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0420, 0 locals
    Action routine for:
        "id"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S461
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0421, 0 locals
    Action routine for:
        "bergman"

       JZ              G2e [FALSE] L0003
       RANDOM          #03 -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0001
       PRINT_RET       "Truly a king among men."
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_RET       "Thy lord and master."
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S462
       NEW_LINE        
       RTRUE           
L0003: RTRUE           

Routine R0422, 0 locals
    Action routine for:
        "quake"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S463
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0423, 0 locals
    Action routine for:
        "summon"
        "summon cthulhu"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S464
       STORE           G14,#03
L0001: RTRUE           

Routine R0424, 0 locals
    Action routine for:
        "zork"

       JZ              G2e [FALSE] L0001
       PRINT_RET       "At your ser- hey! Cut that out!"
L0001: RTRUE           

Routine R0425, 0 locals
    Action routine for:
        "carmack"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S465
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0426, 0 locals
    Action routine for:
        "credits"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S466
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0427, 0 locals
    Action routine for:
        "notarget"

       JZ              G2e [FALSE] L0001
       PRINT_RET       "Yeah, you wish."
L0001: RTRUE           

Routine R0428, 0 locals
    Action routine for:
        "talk"
        "talk to noun"
        "talk at noun"

       JE              G2e,#79 [FALSE] L0001
       PRINT_PADDR     S467
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0429, 0 locals
    Action routine for:
        "impulse"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S468
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0430, 0 locals
    Action routine for:
        "help"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S469
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0431, 0 locals
    Action routine for:
        

       JZ              G2e [TRUE] RTRUE
       RTRUE           

Routine R0432, 0 locals
    Action routine for:
        "hop in noun"
        "hop on noun"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S470
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0433, 0 locals
    Action routine for:
        "hop downwo noun"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S471
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0434, 0 locals
    Action routine for:
        "suicide"

       JZ              G2e [FALSE] L0001
       CALL_2N         R0125 (#0a)
L0001: PRINT_PADDR     S472
       NEW_LINE        
       RTRUE           

Routine R0435, 0 locals
    Action routine for:
        "stupidfac"

       SET_TEXT_STYLE  BOLDFACE
       PRINT           "Stupid Fact: "
       SET_TEXT_STYLE  ROMAN
       RANDOM          #0a -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0001
       PRINT_PADDR     S473
       NEW_LINE        
       RTRUE           
L0001: JE              Gef,#02 [FALSE] L0002
       PRINT_PADDR     S474
       NEW_LINE        
       RTRUE           
L0002: JE              Gef,#03 [FALSE] L0003
       PRINT_PADDR     S475
       NEW_LINE        
       RTRUE           
L0003: JE              Gef,#04 [FALSE] L0004
       PRINT_PADDR     S476
       NEW_LINE        
       RTRUE           
L0004: JE              Gef,#05 [FALSE] L0005
       PRINT_PADDR     S477
       NEW_LINE        
       RTRUE           
L0005: JE              Gef,#06 [FALSE] L0006
       PRINT_PADDR     S478
       NEW_LINE        
       RTRUE           
L0006: JE              Gef,#07 [FALSE] L0007
       PRINT_PADDR     S479
       NEW_LINE        
       RTRUE           
L0007: JE              Gef,#08 [FALSE] L0008
       PRINT_PADDR     S480
       NEW_LINE        
       RTRUE           
L0008: JE              Gef,#09 [FALSE] L0009
       PRINT_PADDR     S481
       NEW_LINE        
       RTRUE           
L0009: JE              Gef,#0a [FALSE] L0010
       PRINT_PADDR     S482
       NEW_LINE        
       RTRUE           
L0010: RTRUE           

Routine R0436, 0 locals
    Action routine for:
        "health"

       JZ              G2e [FALSE] L0001
       SUB             #64,G89 -> -(SP)
       JG              (SP)+,#0a [TRUE] L0001
       PRINT           "You have a mere "
       SUB             #64,G89 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S483
       PRINT_NUM       G8a
       PRINT_RET       " armor points."
L0001: SUB             #64,G89 -> -(SP)
       JG              (SP)+,#0a [FALSE] L0002
       SUB             #64,G89 -> -(SP)
       JG              (SP)+,#28 [TRUE] L0002
       PRINT           "You have "
       SUB             #64,G89 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S484
       PRINT_NUM       G8a
       PRINT_RET       " armor points."
L0002: SUB             #64,G89 -> -(SP)
       JE              (SP)+,#64 [FALSE] L0003
       PRINT_PADDR     S485
       PRINT_NUM       G8a
       PRINT_RET       " armor points."
L0003: SUB             #64,G89 -> -(SP)
       JL              (SP)+,#5a [TRUE] L0004
       SUB             #64,G89 -> -(SP)
       JL              (SP)+,#64 [FALSE] L0004
       PRINT           "You have "
       SUB             #64,G89 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S486
       PRINT_NUM       G8a
       PRINT_RET       " armor points."
L0004: SUB             #64,G89 -> -(SP)
       JL              (SP)+,#46 [TRUE] L0005
       SUB             #64,G89 -> -(SP)
       JL              (SP)+,#5a [FALSE] L0005
       PRINT           "You have "
       SUB             #64,G89 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S487
       PRINT_NUM       G8a
       PRINT_RET       " armor points."
L0005: SUB             #64,G89 -> -(SP)
       JG              (SP)+,#0a [FALSE] L0006
       SUB             #64,G89 -> -(SP)
       JL              (SP)+,#46 [FALSE] L0006
       PRINT           "You have "
       SUB             #64,G89 -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S488
       PRINT_NUM       G8a
       PRINT_RET       " armor points."
L0006: RTRUE           

Routine R0437, 0 locals
    Action routine for:
        "belch"
        "belch at noun"

       JZ              G2e [FALSE] L0001
       PRINT_RET       "I beg your pardon sir!"
L0001: JE              G2e,#79 [FALSE] L0002
       PRINT_PADDR     S489
       NEW_LINE        
       RTRUE           
L0002: RTRUE           

Routine R0438, 0 locals
    Action routine for:
        "attack at noun with noun"

       JZ              G2e [FALSE] L0001
       PRINT_PADDR     S490
       NEW_LINE        
       RTRUE           
L0001: RTRUE           

Routine R0439, 0 locals
    Action routine for:
        "attack"
        "attack noun with noun"
        "fire noun with noun"
        "fire noun"

       CALL_VS         R0468 (G2e,#6a) -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       JG              #01,G2f [TRUE] L0001
       JG              G2f,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#03,G2f)
       JUMP            L0023
L0002: TEST_ATTR       G2f,#00 [FALSE] L0023
       JE              G2e,#70 [TRUE] L0023
       JE              G2e,#79 [FALSE] L0003
       JE              G2f,#79 [TRUE] L0003
       CALL_2N         R0478 (G2e)
       CALL_VN         R0463 (#79,#6c,#01)
       PRINT_PADDR     S491
       NEW_LINE        
       RTRUE           
L0003: JZ              G2e [FALSE] L0004
       PRINT_RET       "Attack who with what?"
L0004: JG              #01,G2f [TRUE] L0005
       JG              G2f,#0082 [FALSE] L0006
L0005: CALL_VN         R0471 (#03,G2f)
       JUMP            L0021
L0006: TEST_ATTR       G2f,#00 [FALSE] L0021
       RANDOM          #0d -> Gef
       DEC             Gef
       LOADW           #24af,Gef -> -(SP)
       CALL_VN         R0463 (#06,#63,(SP)+)
       JE              G2f,#81 [FALSE] L0007
       CALL_VN         R0463 (#06,#62,#01)
L0007: JE              G2f,#80 [FALSE] L0008
       CALL_VN         R0463 (#06,#62,#02)
L0008: CALL_VS         R0464 (#06,#62) -> -(SP)
       CALL_VS         R0464 (#06,#63) -> -(SP)
       MUL             (SP)+,(SP)+ -> -(SP)
       CALL_VN         R0463 (#06,#63,(SP)+)
       CALL_VS         R0464 (#06,#63) -> -(SP)
       CALL_VS         R0464 (G2e,#6a) -> -(SP)
       SUB             (SP)+,(SP)+ -> -(SP)
       CALL_VN         R0463 (G2e,#6a,(SP)+)
       CALL_VS         R0464 (G2e,#6a) -> -(SP)
       JG              (SP)+,#00 [FALSE] L0009
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_RET       " from his health."
L0009: CALL_VS         R0464 (G2e,#6a) -> -(SP)
       JG              (SP)+,#00 [TRUE] L0020
       CALL_2N         R0478 (G2e)
       JE              G2e,#60 [FALSE] L0010
       CALL_VS         R0464 (#05,#60) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#60,(SP)+)
L0010: JE              G2e,#61 [FALSE] L0011
       CALL_VS         R0464 (#05,#60) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#60,(SP)+)
L0011: JE              G2e,#62 [FALSE] L0012
       CALL_VS         R0464 (#05,#60) -> -(SP)
       SUB             (SP)+,#01 -> -(SP)
       CALL_VN         R0463 (#05,#60,(SP)+)
L0012: CALL_VN         R0463 (G2e,#6c,#01)
       CALL_VS         R0464 (G2e,#6b) -> -(SP)
       CALL_2N         R0162 ((SP)+)
       JG              #01,G2f [TRUE] L0013
       JG              G2f,#0082 [FALSE] L0014
L0013: CALL_VN         R0471 (#03,G2f)
       JUMP            L0015
L0014: TEST_ATTR       G2f,#01 [FALSE] L0015
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S492
       NEW_LINE        
       RTRUE           
L0015: RANDOM          #05 -> -(SP)
       PULL            Gef
       JE              Gef,#01 [FALSE] L0016
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S493
       NEW_LINE        
       RTRUE           
L0016: JE              Gef,#02 [FALSE] L0017
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S494
       NEW_LINE        
       RTRUE           
L0017: JE              Gef,#03 [FALSE] L0018
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S495
       NEW_LINE        
       RTRUE           
L0018: JE              Gef,#04 [FALSE] L0019
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S496
       NEW_LINE        
       RTRUE           
L0019: JE              Gef,#05 [FALSE] L0020
       PRINT           "You hit "
       CALL_2N         R0117 (G2e)
       PRINT           " taking off "
       CALL_VS         R0464 (#06,#63) -> -(SP)
       PRINT_NUM       (SP)+
       PRINT_PADDR     S497
       NEW_LINE        
       RTRUE           
L0020: JUMP            L0022
L0021: PRINT_PADDR     S498
       NEW_LINE        
       RTRUE           
L0022: JUMP            L0044
L0023: JE              G2e,#70 [FALSE] L0024
       CALL_2N         R0478 (G2f)
       PRINT_PADDR     S499
       NEW_LINE        
       RTRUE           
L0024: JE              G2e,#7a [FALSE] L0025
       JE              G2f,#81 [FALSE] L0025
       CALL_2N         R0478 (G2e)
       PRINT_PADDR     S500
       NEW_LINE        
       RTRUE           
L0025: JE              G2e,#7a [FALSE] L0026
       JE              G2f,#80 [FALSE] L0026
       CALL_2N         R0478 (G2e)
       PRINT_PADDR     S501
       NEW_LINE        
       RTRUE           
L0026: JG              #01,G2e [TRUE] L0027
       JG              G2e,#0082 [FALSE] L0028
L0027: CALL_VN         R0471 (#03,G2e)
       JUMP            L0031
L0028: TEST_ATTR       G2e,#13 [FALSE] L0031
       JG              #01,G2f [TRUE] L0029
       JG              G2f,#0082 [FALSE] L0030
L0029: CALL_VN         R0471 (#03,G2f)
       JUMP            L0031
L0030: TEST_ATTR       G2f,#00 [FALSE] L0031
       JE              G2f,#81 [FALSE] L0031
       PRINT_PADDR     S502
       NEW_LINE        
       RTRUE           
L0031: JG              #01,G2e [TRUE] L0032
       JG              G2e,#0082 [FALSE] L0033
L0032: CALL_VN         R0471 (#03,G2e)
       JUMP            L0043
L0033: TEST_ATTR       G2e,#13 [FALSE] L0043
       JG              #01,G2f [TRUE] L0034
       JG              G2f,#0082 [FALSE] L0035
L0034: CALL_VN         R0471 (#03,G2f)
       JUMP            L0043
L0035: TEST_ATTR       G2f,#00 [FALSE] L0043
       JE              G2f,#81 [TRUE] L0043
       JE              G2e,#46 [TRUE] L0036
       JE              G2e,#57 [TRUE] L0036
       PRINT_PADDR     S503
       NEW_LINE        
       RTRUE           
L0036: JE              G2e,#57 [FALSE] L0040
       CALL_VS         R0464 (#56,#6c) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0037
       CALL_VS         R0464 (#55,#6c) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0037
       CALL_2N         R0125 (#19)
       PRINT_PADDR     S504
       NEW_LINE        
       RTRUE           
L0037: CALL_VS         R0464 (#56,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0038
       CALL_VS         R0464 (#55,#6c) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0038
       CALL_2N         R0478 (#56)
       CALL_2N         R0162 (#05)
       CALL_2N         R0125 (#05)
       PRINT_PADDR     S505
       NEW_LINE        
       RTRUE           
L0038: CALL_VS         R0464 (#56,#6c) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0039
       CALL_VS         R0464 (#55,#6c) -> -(SP)
       JZ              (SP)+ [FALSE] L0039
       CALL_2N         R0478 (#55)
       CALL_2N         R0162 (#04)
       CALL_2N         R0125 (#0a)
       PRINT_PADDR     S506
       NEW_LINE        
       RTRUE           
L0039: CALL_2N         R0478 (#56)
       CALL_2N         R0162 (#05)
       CALL_2N         R0478 (#55)
       CALL_2N         R0162 (#04)
       PRINT_PADDR     S507
       NEW_LINE        
       RTRUE           
       JUMP            L0042
L0040: CALL_VS         R0464 (#05,#57) -> -(SP)
       JZ              (SP)+ [FALSE] L0041
       CALL_2N         R0162 (#10)
       CALL_VN         R0477 (#47,#41)
       CALL_VN         R0463 (#05,#57,#01)
       PRINT_PADDR     S508
       NEW_LINE        
       RTRUE           
L0041: PRINT_PADDR     S509
       NEW_LINE        
       RTRUE           
L0042: JUMP            L0044
L0043: PRINT_PADDR     S510
       NEW_LINE        
       RTRUE           
L0044: RTRUE           

Routine R0440, 0 locals
    Action routine for:
        "fly"

       JZ              G2e [FALSE] L0001
       CALL_VS         R0464 (#05,#61) -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       PRINT_PADDR     S511
       CALL_VS         R0464 (#05,#61) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0463 (#05,#61,(SP)+) -> -(SP)
       PRINT_NUM       (SP)+
       NEW_LINE        
       RTRUE           
L0001: JZ              G2e [FALSE] L0002
       CALL_VS         R0464 (#05,#61) -> -(SP)
       JE              (SP)+,#01 [FALSE] L0002
       PRINT           "It's a bird! It's a plane!"
       CALL_VS         R0464 (#05,#61) -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0463 (#05,#61,(SP)+) -> -(SP)
       PRINT_NUM       (SP)+
       NEW_LINE        
       RTRUE           
L0002: JZ              G2e [FALSE] L0003
       CALL_VS         R0464 (#05,#61) -> -(SP)
       JG              (SP)+,#01 [FALSE] L0003
       PRINT_PADDR     S512
       NEW_LINE        
       RTRUE           
L0003: RTRUE           

Routine R0441, 0 locals

       STORE           G00,#1b
       CALL_VN         R0477 (#81,G13)
       CALL_VN         R0477 (#80,G13)
       CALL_VN         R0463 (#05,#53,#01)
       PRINT_PADDR     S513
       PRINT_PADDR     S514
       PRINT_PADDR     S515
       PRINT_PADDR     S516
       PRINT_PADDR     S517
       PRINT_PADDR     S518
       PRINT_PADDR     S519
       PRINT_PADDR     S520
       PRINT_PADDR     S521
       PRINT_PADDR     S522
       PRINT_PADDR     S523
       PRINT_PADDR     S524
       PRINT_PADDR     S525
       PRINT_PADDR     S526
       PRINT_PADDR     S527
       PRINT_PADDR     S528
       PRINT_PADDR     S529
       PRINT_PADDR     S530
       PRINT_PADDR     S531
       PRINT_PADDR     S532
       PRINT_PADDR     S533
       PRINT_PADDR     S534
       PRINT_PADDR     S535
       PRINT_PADDR     S536
       PRINT_PADDR     S537
       CALL_2N         R0412 (#01)
       PRINT           "UPP INTIALIZED
"
       PRINT           "EXE: 10:40:27 10/15/02
"
       PRINT           "128.0 MEGABYTE HEAP
"
       PRINT_PADDR     S538
       PRINT_PADDR     S539
       PRINT           "LOADING GL_QUAKE."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           ".
"
       CALL_2N         R0412 (#02)
       PRINT           "USING LUMINANCE LIGHTMAPS."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           ".
"
       CALL_2N         R0412 (#02)
       PRINT_PADDR     S540
       PRINT           "
SOUND INITIALIZATION."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "
INITIALIZING CORE AUDIO."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "
FAILED!
AUDIO SUPPORT DISABLED
"
       PRINT           "QUICKTIME CD DRIVER FAILED.
"
       PRINT           "BUILDING MESHES."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           ".
"
       CALL_2N         R0412 (#02)
       PRINT           "BUILDING ARENA."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           ".
"
       CALL_2N         R0412 (#02)
       PRINT           "RETICULATING SPLINES."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           "."
       CALL_2N         R0412 (#02)
       PRINT           ".
"
       CALL_2N         R0412 (#02)
       PRINT           "EXECING QUAKE.RC
"
       PRINT           "EXECING DEFAULT.CFG
"
       PRINT           "COULDN'T EXEC AUTOEXEC.CFG
"
       PRINT           "DEMO PLAYBACK DISABLED
"
       PRINT_PADDR     S541
       CALL_2N         R0412 (#14)
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       CALL_2N         R0412 (#01)
       PRINT           "."
       PRINT_RET       "

"

Routine R0442, 0 locals
    Parsing routine for:
        "go noun = [parse $5300]"

       JG              #01,G2e [TRUE] L0001
       JG              G2e,#0082 [FALSE] L0002
L0001: CALL_VN         R0471 (#02,G2e)
       JUMP            L0003
L0002: JIN             G2e,"compass" [TRUE] RTRUE
L0003: RFALSE          

Routine R0443, 1 local

       STORE           G40,G79
L0001: CALL_1S         R0060 -> L00
       JE              L00,#ffff [TRUE] L0002
       JE              L00,"to" [FALSE] L0001
       JE              G52,#52 [FALSE] L0001
L0002: DEC             G79
       SUB             G79,G40 -> G41
       JZ              G41 [FALSE] L0003
       RET             #ffff
L0003: JE              G52,#53,#52,#51 [FALSE] L0005
       STORE           L00,G79
       STORE           G79,G40
       CALL_1S         R0059 -> G3f
       JE              G3f,"the" [FALSE] L0004
       JG              G41,#01 [FALSE] L0004
       CALL_1S         R0059 -> G3f
L0004: STORE           G79,L00
       RTRUE           
L0005: RFALSE          

Routine R0444, 0 locals

       RFALSE          

Routine R0445, 0 locals

       RFALSE          

Routine R0446, 0 locals

       RFALSE          

Routine R0447, 0 locals

       RFALSE          

Routine R0448, 0 locals

       RFALSE          

Routine R0449, 0 locals

       RFALSE          

Routine R0450, 0 locals

       RFALSE          

Routine R0451, 0 locals

       RFALSE          

Routine R0452, 0 locals

       RFALSE          

Routine R0453, 0 locals

       RFALSE          

Routine R0454, 1 local

       RFALSE          

Routine R0455, 1 local

       RFALSE          

Routine R0456, 1 local

       RFALSE          

Routine R0457, 1 local

       RFALSE          

Routine R0458, 2 locals

       RFALSE          

Routine R0459, 2 locals

       RFALSE          

Routine R0460, 0 locals

       PRINT_RET       "."

Routine R0461, 1 local

       STORE           L00,L00
       RET             #ffff

Routine R0462, 5 locals

       AND             L00,#c000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L00,#ff -> -(SP)
       LOADW           #150a,(SP)+ -> L03
       CALL_2N         R0119 (L03)
       PRINT           "::"
       AND             L00,#8000 -> -(SP)
       JZ              (SP)+ [FALSE] L0001
       AND             L00,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       JUMP            L0004
L0001: AND             L00,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L00
       GET_PROP        L03,#03 -> Gef
       STORE           L04,Gef
L0002: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       JG              L00,#00 [FALSE] L0003
       LOADB           L04,#02 -> -(SP)
       ADD             L04,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L04
       DEC             L00
       JUMP            L0002
L0003: LOADW           L04,#00 -> -(SP)
       AND             (SP)+,#7fff -> L00
L0004: STORE           L01,#1516
       LOADW           L01,#00 -> L02
       JG              L00,#00 [FALSE] L0005
       JL              L00,L02 [FALSE] L0005
       LOADW           L01,L00 -> -(SP)
       JZ              (SP)+ [FALSE] L0006
L0005: PRINT           "<number "
       PRINT_NUM       L00
       PRINT           ">"
       JUMP            L0007
L0006: LOADW           L01,L00 -> -(SP)
       CALL_2N         R0489 ((SP)+)
L0007: RTRUE           

Routine R0463, 4 locals

       CALL_VS         R0466 (L00,L01) -> L03
       JZ              L03 [FALSE] L0001
       CALL_VN         R0471 (S542,L00,L01)
       RTRUE           
L0001: AND             G29,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       CALL_VN         R0482 (L00,L01,L02)
L0002: STOREW          L03,#00,L02
       RTRUE           

Routine R0464, 3 locals

       CALL_VS         R0466 (L00,L01) -> L02
       JZ              L02 [FALSE] L0002
       JL              L01,#01 [TRUE] L0001
       JL              L01,#40 [FALSE] L0001
       GET_PROP        L00,L01 -> Gef
       PUSH            Gef
       RET_POPPED      
L0001: CALL_VN         R0471 (S543,L00,L01)
       RTRUE           
L0002: LOADW           L02,#00 -> -(SP)
       RET_POPPED      

Routine R0465, 15 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0007
L0001: CALL_2S         R0472 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0003
       JE              L01,#45 [FALSE] L0002
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           Ge9,G2b
       CALL_VS2        L00 (L02,L03,L04,L05,L06,L07) -> L08
       STORE           Geb,Gea
       STORE           Gea,L0b
       RET             L08
L0002: JUMP            L0022
L0003: JE              Gef,#03 [FALSE] L0006
       JE              L01,#46 [FALSE] L0004
       PRINT_PADDR     L00
       RTRUE           
L0004: JE              L01,#47 [FALSE] L0005
       OUTPUT_STREAM   REDIRECT_ENABLE,L02
       PRINT_PADDR     L00
       OUTPUT_STREAM   #fffd
       LOADW           L02,#00 -> -(SP)
       RET_POPPED      
L0005: JUMP            L0022
L0006: JUMP            L0022
L0007: CHECK_ARG_COUNT #03 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #04 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #05 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #06 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #07 [FALSE] L0008
       INC             L09
       CHECK_ARG_COUNT #08 [FALSE] L0008
       INC             L09
L0008: AND             G29,#01 -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       STORE           L0d,#01
L0009: JE              L0d,#01 [FALSE] L0016
       AND             G29,#01 -> L0d
       SUB             G29,L0d -> G29
       PRINT           "[ ""
       CALL_2N         R0119 (L00)
       PRINT           ""."
       CALL_2N         R0462 (L01)
       PRINT           "("
       STORE           Gef,L09
       JE              Gef,#01 [FALSE] L0010
       PRINT_NUM       L02
       JUMP            L0015
L0010: JE              Gef,#02 [FALSE] L0011
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       JUMP            L0015
L0011: JE              Gef,#03 [FALSE] L0012
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       JUMP            L0015
L0012: JE              Gef,#04 [FALSE] L0013
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       JUMP            L0015
L0013: JE              Gef,#05 [FALSE] L0014
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       PRINT           ","
       PRINT_NUM       L06
       JUMP            L0015
L0014: JE              Gef,#06 [FALSE] L0015
       PRINT_NUM       L02
       PRINT           ","
       PRINT_NUM       L03
       PRINT           ","
       PRINT_NUM       L04
       PRINT           ","
       PRINT_NUM       L05
       PRINT           ","
       PRINT_NUM       L06
       PRINT           ","
       PRINT_NUM       L07
L0015: PRINT           ") ]
"
       ADD             G29,L0d -> G29
L0016: JG              L01,#00 [FALSE] L0020
       JL              L01,#40 [FALSE] L0020
       GET_PROP_ADDR   L00,L01 -> Gef
       STORE           L08,Gef
       JZ              L08 [FALSE] L0017
       SUB             L01,#01 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       LOADW           #0a,#00 -> -(SP)
       ADD             (SP)+,(SP)+ -> L08
       STORE           L0d,#02
       JUMP            L0019
L0017: GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0018
       GET_PROP_LEN    Gef -> Gef
L0018: STORE           L0d,Gef
L0019: JUMP            L0026
L0020: JL              L01,#40 [TRUE] L0021
       JL              L01,#45 [FALSE] L0021
       JIN             L00,"Class" [FALSE] L0021
       CALL_VS2        R0476 (L00,L01,L09,L02,L03,L04,L05) -> -(SP)
       RET_POPPED      
L0021: CALL_VS         R0466 (L00,L01) -> L08
       JZ              L08 [FALSE] L0023
L0022: CALL_VN         R0471 (S544,L00,L01)
       RTRUE           
L0023: SUB             L08,#01 -> -(SP)
       LOADB           #00,(SP)+ -> L0d
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0026
       AND             L0d,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0024
       STORE           L0d,#01
       JUMP            L0026
L0024: JE              Gef,#40 [FALSE] L0025
       STORE           L0d,#02
       JUMP            L0026
L0025: JE              Gef,#80 [FALSE] L0026
       AND             L0d,#3f -> L0d
L0026: MUL             #02,L0e -> -(SP)
       JL              (SP)+,L0d [FALSE] L0040
       LOADW           L08,L0e -> -(SP)
       JE              (SP)+,#ffff [TRUE] RFALSE
       LOADW           L08,L0e -> -(SP)
       CALL_2S         R0472 ((SP)+) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0037
       STORE           L0b,Gea
       STORE           Gea,Geb
       STORE           Geb,L00
       STORE           L0c,Ge9
       JE              L01,#06 [FALSE] L0027
       STORE           Ge9,G31
       JUMP            L0028
L0027: STORE           Ge9,G2b
L0028: STORE           Gef,L09
       JE              Gef,#00 [FALSE] L0029
       LOADW           L08,L0e -> -(SP)
       CALL_1S         (SP)+ -> L0a
       JUMP            L0035
L0029: JE              Gef,#01 [FALSE] L0030
       LOADW           L08,L0e -> -(SP)
       CALL_2S         (SP)+ (L02) -> L0a
       JUMP            L0035
L0030: JE              Gef,#02 [FALSE] L0031
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03) -> L0a
       JUMP            L0035
L0031: JE              Gef,#03 [FALSE] L0032
       LOADW           L08,L0e -> -(SP)
       CALL_VS         (SP)+ (L02,L03,L04) -> L0a
       JUMP            L0035
L0032: JE              Gef,#04 [FALSE] L0033
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05) -> L0a
       JUMP            L0035
L0033: JE              Gef,#05 [FALSE] L0034
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06) -> L0a
       JUMP            L0035
L0034: JE              Gef,#06 [FALSE] L0035
       LOADW           L08,L0e -> -(SP)
       CALL_VS2        (SP)+ (L02,L03,L04,L05,L06,L07) -> L0a
L0035: STORE           Geb,Gea
       STORE           Gea,L0b
       STORE           Ge9,L0c
       JZ              L0a [TRUE] L0036
       RET             L0a
L0036: JUMP            L0039
L0037: JE              Gef,#03 [FALSE] L0038
       LOADW           L08,L0e -> -(SP)
       CALL_2N         R0489 ((SP)+)
       NEW_LINE        
       RTRUE           
L0038: LOADW           L08,L0e -> -(SP)
       RET_POPPED      
L0039: INC             L0e
       JUMP            L0026
L0040: RFALSE          

Routine R0466, 5 locals

       JZ              L00 [TRUE] RFALSE
       JL              L01,#40 [FALSE] L0001
       JG              L01,#00 [FALSE] L0001
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       RET_POPPED      
L0001: AND             L01,#8000 -> -(SP)
       JZ              (SP)+ [TRUE] L0004
       AND             L01,#ff -> -(SP)
       LOADW           #150a,(SP)+ -> L04
       GET_PROP_ADDR   L04,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       CALL_VS         R0469 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       AND             L01,#7f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       GET_PROP        L04,#03 -> Gef
       STORE           L02,Gef
L0002: JG              L01,#00 [FALSE] L0003
       DEC             L01
       LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0002
L0003: ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0004: AND             L01,#4000 -> -(SP)
       JZ              (SP)+ [TRUE] L0006
       AND             L01,#ff -> -(SP)
       LOADW           #150a,(SP)+ -> L04
       AND             L01,#3f00 -> -(SP)
       DIV             (SP)+,#0100 -> L01
       CALL_VS         R0469 (L00,L04) -> -(SP)
       JZ              (SP)+ [TRUE] RFALSE
       LOADW           #00,#05 -> L02
       JE              L04,#02 [FALSE] L0005
       MUL             #02,L01 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       SUB             (SP)+,#02 -> -(SP)
       RET_POPPED      
L0005: MUL             L04,#0e -> -(SP)
       ADD             L02,#7c -> -(SP)
       ADD             (SP)+,(SP)+ -> -(SP)
       DIV             (SP)+,#02 -> -(SP)
       LOADW           #00,(SP)+ -> L02
       LOADB           #00,L02 -> -(SP)
       MUL             #02,(SP)+ -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#01 -> -(SP)
       CALL_VS         R0475 ((SP)+,#ffff) -> -(SP)
       ADD             (SP)+,#06 -> L02
       CALL_VS         R0475 (L02,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PROP_ADDR   L00,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] RFALSE
       JIN             L00,"Class" [FALSE] L0007
       JL              L01,#40 [TRUE] RFALSE
       JL              L01,#48 [FALSE] RFALSE
L0007: JE              Geb,L00 [FALSE] L0008
       OR              L01,#8000 -> L03
L0008: GET_PROP        L00,#03 -> Gef
       STORE           L02,Gef
L0009: LOADW           L02,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0011
       LOADW           L02,#00 -> -(SP)
       JE              (SP)+,L01,L03 [FALSE] L0010
       ADD             L02,#03 -> -(SP)
       RET_POPPED      
L0010: LOADB           L02,#02 -> -(SP)
       ADD             L02,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L02
       JUMP            L0009
L0011: RFALSE          

Routine R0467, 3 locals

       JL              L01,#40 [FALSE] L0002
       JG              L01,#00 [FALSE] L0002
       GET_PROP_ADDR   L00,L01 -> Gef
       JZ              Gef [TRUE] L0001
       GET_PROP_LEN    Gef -> Gef
L0001: PUSH            Gef
       RET_POPPED      
L0002: CALL_VS         R0466 (L00,L01) -> L02
       JZ              L02 [TRUE] RFALSE
       AND             L01,#c000 -> -(SP)
       JE              (SP)+,#4000 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#c0 -> -(SP)
       PULL            Gef
       JE              Gef,#00 [FALSE] L0003
       RTRUE           
L0003: JE              Gef,#40 [FALSE] L0004
       RET             #02
L0004: JE              Gef,#80 [FALSE] L0005
       SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       AND             (SP)+,#3f -> -(SP)
       RET_POPPED      
L0005: SUB             L02,#01 -> -(SP)
       LOADB           (SP)+,#00 -> -(SP)
       RET_POPPED      

Routine R0468, 2 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0004
L0001: JE              L01,#46,#47,#45 [FALSE] RFALSE
       CALL_2S         R0472 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0002
       JE              L01,#45 [TRUE] RTRUE
       JUMP            L0003
L0002: JE              Gef,#03 [FALSE] L0003
       JE              L01,#46,#47 [TRUE] RTRUE
L0003: RFALSE          
L0004: JL              L01,#40 [FALSE] L0005
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] RTRUE
       RFALSE          
L0005: CALL_VS         R0466 (L00,L01) -> -(SP)
       JZ              (SP)+ [FALSE] RTRUE
       JL              L01,#48 [FALSE] L0006
       JIN             L00,"Class" [TRUE] RTRUE
L0006: RFALSE          

Routine R0469, 5 locals

       JL              L00,#01 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] L0002
L0001: JE              L01,#03,#04 [FALSE] RFALSE
       SUB             L01,#01 -> -(SP)
       CALL_2S         R0472 (L00) -> -(SP)
       JE              (SP)+,(SP)+ [TRUE] RTRUE
       RFALSE          
L0002: STORE           Gef,L01
       JE              Gef,#01 [FALSE] L0003
       JG              L00,#04 [FALSE] RTRUE
       JIN             L00,"Class" [TRUE] RTRUE
       RFALSE          
L0003: JE              Gef,#02 [FALSE] L0004
       JG              L00,#04 [FALSE] RFALSE
       JIN             L00,"Class" [TRUE] RFALSE
       RTRUE           
L0004: JE              Gef,#03,#04 [FALSE] L0005
       RFALSE          
L0005: JIN             L01,"Class" [TRUE] L0006
       CALL_VN         R0471 (S545,L01,#ffff)
       RFALSE          
L0006: GET_PROP_ADDR   L00,#02 -> Gef
       STORE           L03,Gef
       JZ              L03 [TRUE] RFALSE
       GET_PROP_ADDR   L00,#02 -> Gef
       JZ              Gef [TRUE] L0007
       GET_PROP_LEN    Gef -> Gef
L0007: STORE           L04,Gef
       STORE           L02,#00
L0008: DIV             L04,#02 -> -(SP)
       JL              L02,(SP)+ [FALSE] L0009
       LOADW           L03,L02 -> -(SP)
       JE              (SP)+,L01 [TRUE] RTRUE
       INC             L02
       JUMP            L0008
L0009: RFALSE          

Routine R0470, 9 locals

       STORE           L04,#00
L0001: JL              L04,#30 [FALSE] L0007
       STORE           Gef,L01
       STORE           Gee,L04
       JL              Gee,#00 [TRUE] L0002
       JL              Gee,#30 [TRUE] L0003
L0002: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0004
L0003: TEST_ATTR       L01,L04 [FALSE] L0005
L0004: CALL_VN         R0479 (L00,L04)
       JUMP            L0006
L0005: CALL_VN         R0480 (L00,L04)
L0006: INC             L04
       JUMP            L0001
L0007: STORE           L04,#01
L0008: JL              L04,#40 [FALSE] L0013
       JE              L04,#02,#03 [TRUE] L0012
       GET_PROP_ADDR   L00,L04 -> Gef
       STORE           L02,Gef
       GET_PROP_ADDR   L01,L04 -> Gef
       STORE           L03,Gef
       GET_PROP_ADDR   L00,L04 -> Gef
       JZ              Gef [TRUE] L0009
       GET_PROP_LEN    Gef -> Gef
L0009: STORE           L07,Gef
       JZ              L02 [TRUE] L0012
       JZ              L03 [TRUE] L0012
       GET_PROP_ADDR   L01,L04 -> Gef
       JZ              Gef [TRUE] L0010
       GET_PROP_LEN    Gef -> Gef
L0010: PUSH            Gef
       JE              L07,(SP)+ [FALSE] L0012
       STORE           L05,#00
L0011: JL              L05,L07 [FALSE] L0012
       LOADB           L03,L05 -> -(SP)
       STOREB          L02,L05,(SP)+
       INC             L05
       JUMP            L0011
L0012: INC             L04
       JUMP            L0008
L0013: GET_PROP_ADDR   L00,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [TRUE] L0014
       GET_PROP_ADDR   L01,#03 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0015
L0014: RTRUE           
L0015: GET_PROP        L01,#03 -> Gef
       STORE           L04,Gef
       JUMP            L0017
L0016: ADD             L04,L07 -> -(SP)
       ADD             (SP)+,#03 -> L04
L0017: LOADW           L04,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0023
       LOADW           L04,#00 -> L08
       LOADB           L04,#02 -> L07
       GET_PROP        L00,#03 -> Gef
       STORE           L05,Gef
       JUMP            L0019
L0018: LOADB           L05,#02 -> -(SP)
       ADD             L05,(SP)+ -> -(SP)
       ADD             (SP)+,#03 -> L05
L0019: LOADW           L05,#00 -> -(SP)
       JZ              (SP)+ [TRUE] L0022
       LOADW           L05,#00 -> -(SP)
       AND             (SP)+,#7fff -> -(SP)
       AND             L08,#7fff -> -(SP)
       JE              (SP)+,(SP)+ [FALSE] L0021
       LOADB           L05,#02 -> -(SP)
       JE              L07,(SP)+ [FALSE] L0021
       STORE           L06,#03
L0020: ADD             L07,#03 -> -(SP)
       JL              L06,(SP)+ [FALSE] L0021
       LOADB           L04,L06 -> -(SP)
       STOREB          L05,L06,(SP)+
       INC             L06
       JUMP            L0020
L0021: JUMP            L0018
L0022: JUMP            L0016
L0023: RTRUE           

Routine R0471, 6 locals

       PRINT           "
[** Programming error: "
       JL              L00,#00 [FALSE] L0001
       JUMP            L0047
L0001: JE              L00,#01 [FALSE] L0002
       PRINT           "class "
       PRINT_OBJ       L01
       PRINT_PADDR     S546
       NEW_LINE        
       RTRUE           
L0002: JE              L00,#20 [FALSE] L0003
       PRINT_PADDR     S547
       CALL_2N         R0119 (L01)
       PRINT_PADDR     S548
       NEW_LINE        
       RTRUE           
L0003: JE              L00,#21 [FALSE] L0004
       PRINT           "tried to print (char) "
       PRINT_NUM       L01
       PRINT_PADDR     S549
       NEW_LINE        
       RTRUE           
L0004: JE              L00,#22 [FALSE] L0005
       PRINT_PADDR     S550
       PRINT_RET       "byte address of a string **]"
L0005: JE              L00,#23 [FALSE] L0006
       PRINT_PADDR     S551
       PRINT_RET       "string **]"
L0006: JE              L00,#24 [FALSE] L0007
       PRINT_PADDR     S552
       PRINT_RET       "object or class **]"
L0007: JL              L00,#20 [FALSE] L0047
       PRINT           "tried to "
       JL              L00,#1c [TRUE] L0016
       JE              L00,#1c,#1d [FALSE] L0008
       PRINT           "read from "
       JUMP            L0009
L0008: PRINT           "write to "
L0009: JE              L00,#1d,#1f [FALSE] L0010
       PRINT           "-"
L0010: PRINT           "->"
       PRINT_NUM       L01
       PRINT           " in the"
       JL              L03,#08 [TRUE] L0011
       PRINT           " (->)"
       SUB             L03,#08 -> L03
L0011: JL              L03,#04 [TRUE] L0012
       PRINT           " (-->)"
       SUB             L03,#04 -> L03
L0012: STORE           Gef,L03
       JE              Gef,#00,#01 [FALSE] L0013
       STORE           L05,#00
       JUMP            L0015
L0013: JE              Gef,#02 [FALSE] L0014
       PRINT           " string"
       STORE           L05,#01
       JUMP            L0015
L0014: JE              Gef,#03 [FALSE] L0015
       PRINT           " table"
       STORE           L05,#01
L0015: PRINT           " array ""
       LOADW           #179a,L04 -> -(SP)
       CALL_2N         R0489 ((SP)+)
       PRINT           "", which has entries "
       PRINT_NUM       L05
       PRINT           " up to "
       PRINT_NUM       L02
       PRINT_RET       " **]"
L0016: JL              L00,#18 [TRUE] L0020
       JG              L00,#1b [TRUE] L0020
       JG              L00,#19 [TRUE] L0017
       PRINT           "read"
       JUMP            L0018
L0017: PRINT           "write"
L0018: PRINT           " outside memory using "
       STORE           Gef,L00
       JE              Gef,#18,#1a [FALSE] L0019
       PRINT_RET       "-> **]"
L0019: JE              Gef,#19,#1b [FALSE] L0020
       PRINT_RET       "--> **]"
L0020: JL              L00,#04 [FALSE] L0021
       PRINT           "test "
       JUMP            L0024
L0021: JL              L00,#0c [TRUE] L0022
       JG              L00,#14 [FALSE] L0023
L0022: PRINT           "find the "
       JUMP            L0024
L0023: JL              L00,#0e [FALSE] L0024
       PRINT           "use "
L0024: JE              L00,#14 [FALSE] L0025
       PRINT_RET       "divide by zero **]"
L0025: PRINT           """
       STORE           Gef,L00
       JE              Gef,#02 [FALSE] L0026
       PRINT           "in" or "notin"
       JUMP            L0046
L0026: JE              Gef,#03 [FALSE] L0027
       PRINT           "has" or "hasnt"
       JUMP            L0046
L0027: JE              Gef,#04 [FALSE] L0028
       PRINT           "parent"
       JUMP            L0046
L0028: JE              Gef,#05 [FALSE] L0029
       PRINT           "eldest"
       JUMP            L0046
L0029: JE              Gef,#06 [FALSE] L0030
       PRINT           "child"
       JUMP            L0046
L0030: JE              Gef,#07 [FALSE] L0031
       PRINT           "younger"
       JUMP            L0046
L0031: JE              Gef,#08 [FALSE] L0032
       PRINT           "sibling"
       JUMP            L0046
L0032: JE              Gef,#09 [FALSE] L0033
       PRINT           "children"
       JUMP            L0046
L0033: JE              Gef,#0a [FALSE] L0034
       PRINT           "youngest"
       JUMP            L0046
L0034: JE              Gef,#0b [FALSE] L0035
       PRINT           "elder"
       JUMP            L0046
L0035: JE              Gef,#0c [FALSE] L0036
       PRINT           "objectloop"
       JUMP            L0046
L0036: JE              Gef,#0d [FALSE] L0037
       PRINT           "}" at end of "objectloop"
       JUMP            L0046
L0037: JE              Gef,#0e [FALSE] L0038
       PRINT           "give" an attribute to "
       CALL_2N         R0119 (L01)
       PRINT_RET       " **]"
L0038: JE              Gef,#0f [FALSE] L0039
       PRINT           "remove" "
       CALL_2N         R0119 (L01)
       PRINT_RET       " **]"
L0039: JE              Gef,#10,#11,#12 [FALSE] L0042
       PRINT           "move" "
       CALL_2N         R0119 (L01)
       PRINT           " to "
       CALL_2N         R0119 (L02)
       JE              L00,#12 [FALSE] L0041
       PRINT           ", which would make a loop: "
       CALL_2N         R0119 (L01)
       STORE           L04,L02
L0040: PRINT           " in "
       CALL_2N         R0119 (L04)
       GET_PARENT      L04 -> L04
       JE              L04,L01 [FALSE] L0040
       PRINT           " in "
       CALL_2N         R0119 (L04)
       PRINT_RET       " **]"
L0041: PRINT_RET       " **]"
L0042: JE              Gef,#13 [FALSE] L0043
       PRINT_PADDR     S553
       CALL_2N         R0119 (L01)
       PRINT_RET       " **]"
L0043: JE              Gef,#15 [FALSE] L0044
       PRINT           ".&"
       JUMP            L0046
L0044: JE              Gef,#16 [FALSE] L0045
       PRINT           ".#"
       JUMP            L0046
L0045: JE              Gef,#17 [FALSE] L0046
       PRINT           "."
L0046: PRINT           "" of "
       CALL_2N         R0119 (L01)
       PRINT_RET       " **]"
L0047: JL              L01,#00 [TRUE] L0051
       SUB             #0181,#ff -> -(SP)
       JG              L01,(SP)+ [TRUE] L0051
       JZ              L01 [TRUE] L0048
       JIN             L01,"Class" [FALSE] L0048
       PRINT           "class "
L0048: JZ              L01 [TRUE] L0049
       PRINT_OBJ       L01
       JUMP            L0050
L0049: PRINT           "nothing"
L0050: PRINT           " "
L0051: PRINT           "(object number "
       PRINT_NUM       L01
       PRINT           ") "
       JL              L02,#00 [FALSE] L0052
       PRINT           "is not of class "
       SUB             #00,L02 -> -(SP)
       CALL_2N         R0119 ((SP)+)
       JUMP            L0054
L0052: PRINT           " has no property "
       CALL_2N         R0462 (L02)
       STORE           L04,#1516
       LOADW           L04,#00 -> L03
       JL              L02,#00 [TRUE] L0053
       JL              L02,L03 [TRUE] L0054
L0053: PRINT           " (and nor has any other object)"
L0054: PRINT           " to "
       CALL_2N         R0489 (L00)
       PRINT           " **]
"
       RTRUE           

Routine R0472, 1 local

       JZ              L00 [TRUE] RFALSE
       JL              L00,#01 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [FALSE] RTRUE
L0001: CALL_VS         R0473 (L00,S001) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       RET             #03
L0002: CALL_VS         R0473 (L00,#0f4b) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       RET             #02
L0003: RFALSE          

Routine R0473, 4 locals

       JE              L00,L01 [FALSE] L0001
       RFALSE          
L0001: JL              L00,#00 [FALSE] L0002
       JL              L01,#00 [TRUE] L0002
       RTRUE           
L0002: JL              L00,#00 [TRUE] L0003
       JL              L01,#00 [FALSE] L0003
       RET             #ffff
L0003: AND             L00,#7fff -> L02
       AND             L01,#7fff -> L03
       JG              L02,L03 [FALSE] L0004
       RTRUE           
L0004: RET             #ffff

Routine R0474, 1 local

       CALL_2S         R0472 (L00) -> -(SP)
       PULL            Gef
       JE              Gef,#02 [FALSE] L0001
       RET             #03
L0001: JE              Gef,#03 [FALSE] L0002
       RET             #04
L0002: JE              Gef,#01 [FALSE] L0005
       JIN             L00,"Class" [TRUE] L0003
       JG              L00,#04 [TRUE] L0004
L0003: RTRUE           
L0004: RET             #02
L0005: RFALSE          

Routine R0475, 4 locals

L0001: LOADB           #00,L00 -> L02
       JZ              L02 [TRUE] L0006
       AND             L02,#80 -> -(SP)
       JZ              (SP)+ [TRUE] L0002
       INC             L00
       LOADB           #00,L00 -> -(SP)
       AND             (SP)+,#3f -> L03
       JUMP            L0004
L0002: AND             L02,#40 -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       STORE           L03,#02
       JUMP            L0004
L0003: STORE           L03,#01
L0004: INC             L00
       AND             L02,#3f -> -(SP)
       JE              (SP)+,L01 [FALSE] L0005
       RET             L00
L0005: ADD             L00,L03 -> L00
       JUMP            L0001
L0006: JL              L01,#00 [FALSE] L0007
       ADD             L00,#01 -> -(SP)
       RET_POPPED      
L0007: RFALSE          

Routine R0476, 8 locals

       STORE           Gef,L01
       JE              Gef,#40 [FALSE] L0009
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0002
L0001: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0001
L0002: PULL            Gee
       PUSH            Gef
       JG              (SP)+,#01 [FALSE] RFALSE
       GET_CHILD       L00 -> L07 [FALSE] L0003
L0003: REMOVE_OBJ      L07
       CALL_VS         R0468 (L07,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       JZ              L02 [FALSE] L0004
       CALL_VN         R0465 (L07,#40)
L0004: JE              L02,#01 [FALSE] L0005
       CALL_VN         R0465 (L07,#40,L03)
L0005: JE              L02,#02 [FALSE] L0006
       CALL_VN2        R0465 (L07,#40,L03,L04)
L0006: JG              L02,#03 [FALSE] L0007
       CALL_VN         R0471 (#01,L00)
L0007: JL              L02,#03 [TRUE] L0008
       CALL_VN2        R0465 (L07,#40,L03,L04,L05)
L0008: RET             L07
L0009: JE              Gef,#41 [FALSE] L0017
       CALL_VS         R0469 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0010
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0471 (S554,L03,(SP)+)
       RFALSE          
L0010: GET_CHILD       L00 -> -(SP) [FALSE] L0011
L0011: CALL_VN         R0470 (L03,(SP)+)
       CALL_VS         R0468 (L03,#40) -> -(SP)
       JZ              (SP)+ [TRUE] L0016
       JE              L02,#01 [FALSE] L0012
       CALL_VN         R0465 (L03,#40)
L0012: JE              L02,#02 [FALSE] L0013
       CALL_VN         R0465 (L03,#40,L04)
L0013: JE              L02,#03 [FALSE] L0014
       CALL_VN2        R0465 (L03,#40,L04,L05)
L0014: JG              L02,#04 [FALSE] L0015
       CALL_VN         R0471 (#01,L00)
L0015: JL              L02,#04 [TRUE] L0016
       CALL_VN2        R0465 (L03,#40,L04,L05,L06)
L0016: RFALSE          
L0017: JE              Gef,#42 [FALSE] L0021
       CALL_VS         R0469 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0018
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0471 (S555,L03,(SP)+)
       RFALSE          
L0018: CALL_VS         R0468 (L03,#42) -> -(SP)
       JZ              (SP)+ [TRUE] L0019
       CALL_VN         R0465 (L03,#42)
L0019: GET_CHILD       L00 -> -(SP) [FALSE] L0020
L0020: CALL_VN         R0470 (L03,(SP)+)
       INSERT_OBJ      L03,L00
       RFALSE          
L0021: JE              Gef,#43 [FALSE] L0024
       STORE           Gef,#00
       GET_CHILD       L00 -> -(SP) [FALSE] L0023
L0022: INC             Gef
       GET_SIBLING     (SP)+ -> -(SP) [TRUE] L0022
L0023: PULL            Gee
       PUSH            Gef
       SUB             (SP)+,#01 -> -(SP)
       RET_POPPED      
L0024: JE              Gef,#44 [FALSE] L0027
       CALL_VS         R0469 (L03,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0025
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0471 (S556,L03,(SP)+)
       RFALSE          
L0025: CALL_VS         R0469 (L04,L00) -> -(SP)
       JZ              (SP)+ [FALSE] L0026
       SUB             #00,L00 -> -(SP)
       CALL_VN         R0471 (S557,L04,(SP)+)
       RFALSE          
L0026: CALL_VN         R0470 (L03,L04)
       RFALSE          
L0027: RTRUE           

Routine R0477, 3 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0471 (#10,L00,L01) -> -(SP)
       RET_POPPED      
L0002: JL              L01,#05 [TRUE] L0003
       SUB             #0181,#ff -> -(SP)
       JG              L01,(SP)+ [TRUE] L0003
       JIN             L01,"Class" [FALSE] L0004
L0003: CALL_VS         R0471 (#11,L00,L01) -> -(SP)
       RET_POPPED      
L0004: STORE           L02,L01
L0005: JZ              L02 [TRUE] L0007
       JE              L02,L00 [FALSE] L0006
       CALL_VS         R0471 (#12,L00,L01) -> -(SP)
       RET_POPPED      
L0006: GET_PARENT      L02 -> L02
       JUMP            L0005
L0007: AND             G29,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0008
       PRINT           "[Moving "
       CALL_2N         R0119 (L00)
       PRINT           " to "
       CALL_2N         R0119 (L01)
       PRINT           "]
"
L0008: INSERT_OBJ      L00,L01
       RTRUE           

Routine R0478, 1 local

       JL              L00,#05 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0471 (#0f,L00) -> -(SP)
       RET_POPPED      
L0002: AND             G29,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       PRINT           "[Removing "
       CALL_2N         R0119 (L00)
       PRINT           "]
"
L0003: REMOVE_OBJ      L00
       RTRUE           

Routine R0479, 2 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0471 (#0e,L00) -> -(SP)
       RET_POPPED      
L0002: JL              L01,#00 [TRUE] L0003
       JL              L01,#30 [TRUE] L0004
L0003: CALL_VS         R0471 (#13,L00) -> -(SP)
       RET_POPPED      
L0004: STORE           Gef,L00
       STORE           Gee,L01
       JL              Gee,#00 [TRUE] L0005
       JL              Gee,#30 [TRUE] L0006
L0005: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0007
L0006: TEST_ATTR       L00,L01 [FALSE] L0008
L0007: RTRUE           
L0008: JE              L01,#1b [TRUE] L0009
       AND             G29,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       PRINT           "[Giving "
       CALL_2N         R0119 (L00)
       PRINT           " "
       CALL_2N         R0107 (L01)
       PRINT           "]
"
L0009: SET_ATTR        L00,L01
       RTRUE           

Routine R0480, 2 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [FALSE] L0002
L0001: CALL_VS         R0471 (#0e,L00) -> -(SP)
       RET_POPPED      
L0002: JL              L01,#00 [TRUE] L0003
       JL              L01,#30 [TRUE] L0004
L0003: CALL_VS         R0471 (#13,L00) -> -(SP)
       RET_POPPED      
L0004: STORE           Gef,L00
       STORE           Gee,L01
       JL              Gee,#00 [TRUE] L0005
       JL              Gee,#30 [TRUE] L0006
L0005: CALL_VN         R0471 (#13,Gef,Gee)
       JUMP            L0007
L0006: TEST_ATTR       L00,L01 [TRUE] L0008
L0007: RTRUE           
L0008: JE              L01,#1b [TRUE] L0009
       AND             G29,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0009
       PRINT           "[Giving "
       CALL_2N         R0119 (L00)
       PRINT           " ~"
       CALL_2N         R0107 (L01)
       PRINT           "]
"
L0009: CLEAR_ATTR      L00,L01
       RTRUE           

Routine R0481, 3 locals

       JL              L00,#05 [TRUE] L0001
       SUB             #0181,#ff -> -(SP)
       JG              L00,(SP)+ [TRUE] L0001
       JIN             L00,"Class" [TRUE] L0001
       GET_PROP_ADDR   L00,L01 -> Gef
       PUSH            Gef
       JZ              (SP)+ [FALSE] L0002
L0001: CALL_VS         R0471 (S558,L00,L01) -> -(SP)
       RET_POPPED      
L0002: PUT_PROP        L00,L01,L02
       AND             G29,#0f -> -(SP)
       JZ              (SP)+ [TRUE] L0003
       CALL_VN         R0482 (L00,L01,L02)
L0003: RET             L02

Routine R0482, 3 locals

       PRINT           "[Setting "
       CALL_2N         R0119 (L00)
       PRINT           "."
       CALL_2N         R0462 (L01)
       PRINT           " to "
       PRINT_NUM       L02
       PRINT           "]
"
       RTRUE           

Routine R0483, 4 locals

       ADD             L00,L01 -> L02
       CALL_VS         R0473 (L02," b jsjnjzik ") -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_2S         R0471 (#18) -> -(SP)
       RET_POPPED      
L0001: LOADB           L00,L01 -> L03
       RET             L03

Routine R0484, 4 locals

       MUL             #02,L01 -> -(SP)
       ADD             L00,(SP)+ -> L02
       CALL_VS         R0473 (L02," b jsjnjzik ") -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_2S         R0471 (#19) -> -(SP)
       RET_POPPED      
L0001: LOADW           L00,L01 -> L03
       RET             L03

Routine R0485, 5 locals

       ADD             L00,L01 -> L03
       CALL_VS         R0473 (L03,#1c0c) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_VS         R0473 (L03,#24ca) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0001
       STORE           L04,#01
       JUMP            L0004
L0001: CALL_VS         R0473 (L03,#08a4) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       CALL_VS         R0473 (L03,#150a) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0002
       STORE           L04,#01
       JUMP            L0004
L0002: CALL_VS         R0473 (L03,#179c) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       CALL_VS         R0473 (L03,#1a2c) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       STORE           L04,#01
       JUMP            L0004
L0003: JE              L03,#11 [FALSE] L0004
       STORE           L04,#01
L0004: JZ              L04 [FALSE] L0005
       CALL_2S         R0471 (#1a) -> -(SP)
       RET_POPPED      
L0005: STOREB          L00,L01,L02
       RTRUE           

Routine R0486, 5 locals

       MUL             #02,L01 -> -(SP)
       ADD             L00,(SP)+ -> L03
       CALL_VS         R0473 (L03,#1c0c) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_VS         R0473 (L03,#24ca) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0001
       STORE           L04,#01
       JUMP            L0004
L0001: CALL_VS         R0473 (L03,#08a4) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0002
       CALL_VS         R0473 (L03,#150a) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0002
       STORE           L04,#01
       JUMP            L0004
L0002: CALL_VS         R0473 (L03,#179c) -> -(SP)
       JL              (SP)+,#00 [TRUE] L0003
       CALL_VS         R0473 (L03,#1a2c) -> -(SP)
       JL              (SP)+,#00 [FALSE] L0003
       STORE           L04,#01
       JUMP            L0004
L0003: JE              L03,#10 [FALSE] L0004
       STORE           L04,#01
L0004: JZ              L04 [FALSE] L0005
       CALL_2S         R0471 (#1b) -> -(SP)
       RET_POPPED      
L0005: STOREW          L00,L01,L02
       RTRUE           

Routine R0487, 2 locals

       JE              L00,#00,#09,#0b [TRUE] L0001
       JE              L00,#0d [FALSE] L0002
L0001: STORE           L01,#01
L0002: JL              L00,#20 [TRUE] L0003
       JG              L00,#7e [TRUE] L0003
       STORE           L01,#01
L0003: JL              L00,#9b [TRUE] L0004
       JG              L00,#fb [TRUE] L0004
       STORE           L01,#01
L0004: JZ              L01 [FALSE] L0005
       CALL_VS         R0471 (#21,L00) -> -(SP)
       RET_POPPED      
L0005: PRINT_CHAR      L00
       RTRUE           

Routine R0488, 1 local

       CALL_VS         R0473 (L00," b jsjnjzik ") -> -(SP)
       JL              (SP)+,#00 [TRUE] L0001
       CALL_2S         R0471 (#22) -> -(SP)
       RET_POPPED      
L0001: PRINT_ADDR      L00
       RTRUE           

Routine R0489, 1 local

       CALL_2S         R0472 (L00) -> -(SP)
       JE              (SP)+,#03 [TRUE] L0001
       CALL_2S         R0471 (#23) -> -(SP)
       RET_POPPED      
L0001: PRINT_PADDR     L00
       RTRUE           

Routine R0490, 2 locals

       RFALSE          

[End of code]

[Start of text]

S001: "QUAKE"
S002: "
Copyright (c) 1996: id Software
"
S003: "991113"
S004: "6/10"
S005: "a"
S006: "---"
S007: "the"
S008: "The "
S009: "the "
S010: "a "
S011: "The "
S012: "the "
S013: "an "
S014: "The "
S015: "the "
S016: "some "
S017: "The "
S018: "the "
S019: "some "
S020: "N = next subject"
S021: "P = previous"
S022: "  Q = resume game"
S023: "Q = previous menu"
S024: "RETURN = read subject"
S025: "Score: "
S026: "Moves: "
S027: "Time: "
S028: "You can't go that way."
S029: "your former self"
S030: "yourself"
S031: "Darkness"
S032: "those things"
S033: "that"
S034: " or "
S035: "nothing"
S036: " is"
S037: " are"
S038: "is "
S039: "are "
S040: " and "
S041: "whom "
S042: "which "
S043: "(considering the first sixteen objects only)
"
S044: "
Would you like to RESTART, RESTORE a saved game"
S045: ", give the FULL score for that game"
S046: ", see some suggestions for AMUSING things to do"
S047: "[Your interpreter does not provide "undo".  Sorry!]"
S048: ""Undo" failed.  [Not all interpreters provide it.]"
S049: "Please give one of the answers above."
S050: "[You can't "undo" what hasn't been done!]"
S051: "[Can't "undo" twice in succession. Sorry!]"
S052: ""Oops" can only correct a single word."
S053: "It is pitch dark, and you can't see a thing."
S054: "To repeat a command like "frog, jump", just say "again", not "frog,
again"."
S055: "You seem to want to talk to someone, but I can't see whom."
S056: "To talk to someone, try "someone, hello" or some such."
S057: "I didn't understand that sentence."
S058: "I only understood you as far as wanting to "
S059: "You seem to have said too little!"
S060: "You can't use multiple objects with that verb."
S061: "You can only use multiple objects once on a line."
S062: "You excepted something not included anyway!"
S063: "You can only do that to something animate."
S064: "That's not something you need to refer to in the course of this game."
S065: "I didn't understand the way that finished."
S066: "Sorry, you can only have one item here. Which exactly?"
S067: "(Since something dramatic has happened, your list of commands has been
cut short.)"
S068: " (closed, empty and providing light)"
S069: "no pronouns are known to the game."
S070: "If you press Y to quit, I will summon Satan all over your hard drive! "
S071: "Are you sure you want to restart? "
S072: "The game file has verified as intact."
S073: "The game file did not verify as intact, and may be corrupt."
S074: "Attempt to begin transcript failed."
S075: "Attempt to end transcript failed."
S076: "You're carrying too many things already."
S077: "You can't put something on top of itself."
S078: "You can't put something inside itself."
S079: "That would scarcely empty anything."
S080: " for a while, but don't achieve much."
S081: "You can only get into something free-standing."
S082: "But you aren't in anything at the moment."
S083: "You'll have to say which compass direction to go in."
S084: " is now in its normal "brief" printing mode, which gives long
descriptions of places never before visited and short descriptions otherwise."
S085: " is now in its "verbose" mode, which always gives long descriptions of
locations (even if you've been there before)."
S086: " is now in its "superbrief" mode, which always gives short descriptions
of locations (even if you haven't been there before)."
S087: "Darkness, noun.  An absence of light to see by."
S088: "seem to be something you can unlock."
S089: "seem to be something you can lock."
S090: "This dangerous act would achieve little."
S091: "Nothing practical results from your prayer."
S092: "The dreadful truth is, this is not a dream."
S093: "Digging would achieve nothing here."
S094: "You jump on the spot, fruitlessly."
S095: "You would achieve nothing by this."
S096: "There's nothing suitable to drink here."
S097: "But there's no water here to carry."
S098: "Real adventurers do not use such language."
S099: "Violence isn't the answer to this one."
S100: "There's not enough water to swim in."
S101: "There's nothing sensible to swing here."
S102: "That would be less than courteous."
S103: "Is that the best you can think of?"
S104: "You lack the nerve when it comes to the crucial moment."
S105: "I don't think much is to be achieved by that."
S106: "You aren't feeling especially drowsy."
S107: "You discover nothing of interest in "
S108: "  [Read special word at word number "
S109: "  [Outside parsing routine returned "
S110: "  [Scope routine returned multiple-flag of "
S111: "  [Calling NounDomain on location and actor]
"
S112: "  [ND appended to the multiple object list:
"
S113: "[Gluing in inference with pattern code "
S114: "   [Adjudicating match list of size "
S115: "   Single best-scoring object returned.]
"
S116: "   Unable to choose best group, so ask player.]
"
S117: "   Best choices are all from the same group.
"
S118: "   Revising multiple object list of size "
S119: "   Token 2 plural case: number with actor "
S120: "   Scoring match list: indef mode "
S121: " is rejected (doesn't match descriptors)
"
S122: "   Best guess ran out of choices
"
S123: "    Match filtered out: token filter "
S124: "Try typing "showverb" and then the name of a verb."
S125: "It appears that that last blow was too much for you. I'm afraid you are
dead."
S126: "You are in perfect health.
You can be killed by a serious wound."
S127: "You have a light wound, which will be cured after "
S128: " moves.
You can be killed by a serious wound."
S129: "You have a serious wound, which will be cured after "
S130: " moves.
You can be killed by one more light wound."
S131: "preposition not found (this should not occur)"
S132: "Property value not routine or string: ""
S133: "Entry in property list not routine or string: ""
S134: "Too many timers/daemons are active simultaneously.  The limit is the
library constant MAX_TIMERS (currently "
S135: "" can only be used as a player object if it has the "number" property"
S136: "Attempt to take random entry from an empty table array"
S137: " is not a valid direction property number"
S138: "The player-object is outside the object tree"
S139: "Tried to set a non-existent pronoun using SetPronoun"
S140: "A 'topic' token can only be followed by a preposition"
S141: "[Random number generator now predictable.]"
S142: "chews on your armor a bit, but fails to harm you."
S143: "nips at your feet, only barely scratching you for one point."
S144: "attacks your armor viciously, but succeeds only in drooling on its
stylish veneer."
S145: "takes a bite at your leg, chomping "
S146: "hangs on your arm a bit, but can't quite seem to grasp the concept of
armor."
S147: "chomps off part of your hand for "
S148: "thinks he managed to hurt you, but in actuality only scratched your
armor a bit. You don't have the heart to tell him otherwise, so you act like it
hurt really, really badly."
S149: "does no damage at all. Poor, poor doggie."
S150: "only manages to dent your badass armor."
S151: "shoots across your shoulder, hitting you for "
S152: " points. It's only a flesh wound."
S153: "only manages to dent your swanky armor."
S154: " points. It won't kill you, but you'd really rather it not happen
again."
S155: "only manages to scuff your life-saving armor."
S156: "grazes your scalp, hitting you for "
S157: "only manages to scuff your life-saving armor."
S158: "hits you right in the thigh, taking off "
S159: " points. That could have been much worse."
S160: "only manages to dent your stylish armor."
S161: " points. It won't kill you, but you'd really rather it not happen
again."
S162: "only manages to dent your apparently superior armor."
S163: " points. You'll be fine tomorrow, but it really smarts."
S164: "only manages to scuff your life-saving armor."
S165: "shoots you in the pinky, causing you to wail like a little girl and
taking off "
S166: "only manages to scuff your life-saving armor."
S167: "hits you square in the chest, missing any major organs, but still
inflicting "
S168: "only manages to scuff your life-saving armor."
S169: "hits you right in the ear, taking it clean off. It's a good thing those
Medkits are so effective, because you've really grown quite attached to that
ear."
S170: "only manages to scuff your life-saving armor."
S171: "
Welcome to QUAKE! 
Newbie tips: Type "
S172: "You find yourself in a room with three corridors, each leading to a
slipgate. On either side of you are stone pyres, their flames flickering
softly. Directly in front of you is a metal structure with the word QUAKE
carved into it. The structure splits into three corridors, to the northwest,
north and northeast respectively."
S173: "It's a simple enough torch, flickering quietly to itself and not
bothering you."
S174: "This game is lit well enough as is, so you really won't be needing a
torch. Besides, you're much too badass to let a measly Grue kill you."
S175: "It's big and metal, with the word QUAKE carved into it."
S176: "Yeah, I'd like to see you try, Hercules."
S177: "You are standing in a dingy room with flickering lights. There are tools
everywhere and wooden planks scattered across the floor. The slipgate you
entered through lies directly behind you to the south."
S178: "There is a small bowl of pudding sitting on the table, looking awfully
tasty."
S179: "The pudding is white, creamy and very likely extremely yummy."
S180: "How can you have any pudding if you don't eat your meat?"
S181: "The pudding is simply heavenly...it's far better than you could ever
possibly have hoped it could be. It makes this whole adventure of yours
worthwhile."
S182: "You emerge from the slipgate into a room with four hallways. To the
West, a metallic frame beckons you, with bright red arrows pointing to it,
making you wonder why on Earth someone would bother putting bright red arrows
on a doorway. To the Northwest is an oddly shaped doorway covered in some sort
of latticework, with checkered stone steps leading you into a gothic hallway.
To the Northeast is a box-like doorway adorned with what can only be described
as "Gothic Aztec" wallpaper, and a pair of pseudo-Nordic runes. And to the East
is a plain old wooden doorway, with plain old wooden steps. You can see the
flickering light from a torch coming down its hallway. 

Directly beneath your feet is a metal plate with something scratched on its
surface.

Behind you to the south lies the slipgate you just emerged from."
S183: "They're bright, red arrows. Perhaps you should follow them to the west?"
S184: "They're just decoration, man! Can't you find something more important to
do?"
S185: "Plain old latticework. If you want more than that, I'm afraid you'll
have to enable OpenGL."
S186: ""Gothic Aztec" is so last year."
S187: "You have an advanced degree in Nordic languages, so it's only a trivial
matter to read the runes that are affixed to the doorway. As you suspected,
they don't mean a damn thing."
S188: "They're stone and you step on them."
S189: "As you enter the West portal room, the words "THIS IS THE FIRST EPISODE:
DIMENSION OF THE DOOMED" materialize in front of you. After briefly panicking
slightly, you continue, when all of a sudden the words, "THE MYSTICAL PAST
COMES ALIVE..." pop up. Carefully, doing your best not to trip any more mystery
words, you tiptoe your way into the room.

The room is dimly lit, and one light keeps flickering on and off in a strobe
effect that you find to be quite annoying after a few seconds. The walls are
metallic and rusted, a theme you see repeated on the slipgate directly in front
of you to the north. "
S190: "Metal, rusted walls."
S191: "If the light keeps flickering like that, it's going to give you a
migraine."
S192: "You walk past the lattice archway into a gray corridor with flickering
torches and a checkerboard floor. As you make your way down the hallway, the
words "THIS IS THE SECOND EPISODE: THE REALM OF BLACK MAGIC. ANCIENT CASTLES
AND STRANGE BEASTS AHEAD..." pops into your head. There is a large metal door
directly to the North at the end of the hallway, and the way you came in
beckons to the southeast."
S193: "You know, if you had some giant chess pieces, this would be really
cool."
S194: "The large metal door has no keyhole that you can see, nor does there
seem to be any opening mechanism. Perhaps all you need to do is simply walk
through it?"
S195: "You walk up the rather dull wooden steps to come to a plain room with
two flickering torches and a big pool of water in the center. As you approach,
the words "THIS IS THE FOURTH EPISODE: THE ELDER WORLD. YOUR WORST NIGHTMARES
COME TRUE..." appears in your mind.

You find this peculiar, because as of this morning your worst nightmare was
mysterious words appearing in your mind.

The only path by land is the one by which you arrived here, to the west."
S196: "The pool of water looks inviting. Perhaps you should take a swim?"
S197: "The pool of water sits there motionless, just asking to be dived into."
S198: "They're made of wood and you step on them."
S199: "You dive into the water, only to discover that it in fact has no bottom,
but rather is puzzlingly suspended in mid-air. You think about this for a
moment, before realizing that while this water may not be bound by the laws of
physics, you are, and the next thing you know, you are falling.

You land right on your rear, causing you no small amount of discomfort. That's
sure to leave a mark, and it robs you of 10 hit points."
S200: "You find yourself in a circular stone room with wooden planks positioned
around, presumably holding the ceiling (and by proxy, the water that's just
hovering there) in place. Directly in front of you to the north, at the top of
some plain wooden stairs, lies a small room with metal bars blocking the
entrance. Behind you to the south lies a plain old boring (but still quite
pretty) slipgate."
S201: "They're just plain old wooden planks. You want to know more? Install
OpenGL and look for yourself."
S202: "You're no scientician, but something just seems odd to you about a large
pool of water hovering over your head."
S203: "It's much too high to attempt that."
S204: "As you walk up the plain wooden stairs, the metal bars retract into
holes in the ceiling, like some sort of medieval supermarket door. To call the
area you walk into next a room would be a deep insult to rooms everywhere (and
lord knows they're an easily offended lot). This closet has two very small
bodies writhing in agony on the walls and an archaic-looking metal slipgate in
front of you to the north. And that's it. Clearly the designers of this room
expected you to be wowed by the aquatic passageway they installed in lieu of a
normal door to the previous room."
S205: "As you ascend the steps to this corridor, the words "THIS IS THE THIRD
EPISODE: THE NETHERWORLD.  PRIMAL FEAR IN A STRANGE DIMENSION..." pops into
your head. You really wish that sort of thing would stop. It's quite
disconcerting. 

Directly in front of you, past a metal grate that flows over some lava to the
north, lies what appears to be a thick  metal door of some kind. The path by
which you entered lies behind you to the southwest."
S206: "It's too far down for you to reach, or else you'd have yourself a nice,
steaming cup of lava."
S207: "It's too far down for you to reach, or else you'd have yourself a nice,
steaming cup of lava."
S208: "It's big and metal, and is the only thing keeping you from falling to
your certain death in boiling hot lava."
S209: "It's big and metal, and doesn't seem to have any keyhole or doorknob or
anything else you would expect to find in a door."
S210: "As you approach the door, it opens for you automatically. How
convenient. You continue up the stone steps to come to a rusty slipgate
directly in front of you to the north."
S211: "OpenGL does nothing for this slipgate. Whereas the other slipgates
you've seen are intoxicatingly easy on the eyes, this one is rustic, to say the
least. It consists of two metal grates, which are so rusted they look as if
they're bleeding, connected by an equally ugly mass of machinery and wires.
There seems to be a monitor of some sort in the center of the slipgate,
although it appears to be merely painted on."
S212: "As you walk towards the door, the thick metal frames swing open,
disappearing into the walls on either side of you. You follow the metal bridge
around the corner and up, eventually coming to an empty and poorly lit room
containing a single, rusted slipgate in front of you to the north."
S213: "As you walk down the northwest corridor, the phrase "THIS HALL SELECTS
EASY SKILL" mysteriously pops into your head. Directly in front of you to the
north is a slipgate which pulsates mysteriously. Carved into each side is the
word "EASY". There is a stained glass window here depicting a flaming torch,
which, in an odd bit of artistic redundancy, is directly opposite an actual
flaming torch. The opening of the structure you came from lies behind you to
the southeast."
S214: "As you make your way into the north corridor, the phrase "THIS HALL
SELECTS NORMAL SKILL" manifests itself in front of you. The effect is quite
disconcerting. To the north is a pulsating, rectangular slipgate with the word
"NORMAL" etched on each side. To your right and left are stone carvings of some
sort of demon. The path you followed to get here lies behind you to the south."
S215: "You are standing in a dank and disturbing corridor. Above, pinned to the
walls on either side of you are emaciated bodies that seem to be writhing in
agony. Directly in front of you to the north is a slipgate marked "HARD"."
S216: "You are standing in a dank and disturbing corridor. The floor is cracked
and broken directly in front of you, creating a gap that prevents you from
reaching the slipgate at the end. As you approach the gap, the phrase, "THIS
HALL SELECTS THE HARD SKILL" hits you like a ton of bricks. Above, pinned to
the walls on either side of you are emaciated bodies that seem to be writhing
in agony. You might be more comfortable going back the way you came to the
southwest."
S217: "What are you, an idiot? That's the lava!"
S218: "Hey, you were warned. It's your life."
S219: "A single gib bounces in and out of the lava, leaping up as if to grasp
for freedom before plunging back down."
S220: "A smallish bit of meat, you stare at it in mid flight for a moment and
wonder what miracle of physics is causing it to leap so intoxicatingly."
S221: "You grab the giblet in mid bounce. It's a bit warm, but then, that's the
way you like your meat."
S222: "Mmm...meat. It's a bit salty and stringy, but by and large, it's some
fine eatins."
S223: "It's lava. Orange-reddish, flowing and probably quite hot. I wouldn't go
in there if I were you."
S224: "You bend down to take a sip of the lava (as it looks
ever-so-refreshing), and as you cup some in your hand, you're amazed to
discover that it's BOILING HOT LAVA, you nitwit.

This brazen act of stupidity costs you ten points off your health."
S225: "I tell you what: if you can come up with a way to take a pit of boiling
lava, I'll let you take it with you. I'll just wait while you come up with
something."
S226: "What are you, an idiot? That's the lava!"
S227: "Hey, you were warned. It's your life."
S228: "You scoff at the pathetic lava as you jump over to the other side. You
can now proceed through the slipgate to the north."
S229: "You step out of the slipgate into a metallic corridor with rusted walls
and flickering lights. On either side of you, the metal floor is raised,
leading to an indentation in the wall, which is filled with some kind of vague
electronics of some sort. At the north end of the room are metal structures,
which are arranged in what appear to be steps of some kind. The only visible
path from this room is to the west, where a thick metal door lies. "
S230: "You are standing in a room with a metallic corridor containing rusted
walls and flickering lights. On either side of you, the metal floor is raised,
leading to an indentation in the wall, which is filled with some kind of vague
electronics of some sort. At the north end of the room are metal structures,
which are arranged in what appear to be steps of some kind. The only visible
path from this room is to the west, where a thick metal door lies. "
S231: "Like everything in this dank world you find yourself in, the door is an
uninviting shade of brown. The door consists of two interlocking pieces of
metal, which look quite heavy. It's quite likely that this is the automated
sort of door, which is quite convenient for you."
S232: "As you peer over to take a look, the words "YOU CAN JUMP UP HERE..." pop
into your mind."
S233: "You jump onto the indentation, squeezing yourself in it. As you manuever
your way into the tight passageway, the words "SHOOT THIS SECRET DOOR" appear
in your mind."
S234: "It's a rather plain looking indentation in the wall. Not nearly as
exciting as the one on the other side of the room."
S235: "There's really no reason to get into this thing. It wouldn't be very
comfortable. Now that right indentation...that's the money one."
S236: "These metal platforms are arranged to look like stairs. If this is a
secret, it's clearly not a very well hidden one."
S237: "As you approach the structure, the words "YOU CAN JUMP ACROSS..."
materialize in your mind. Looking behind you, you notice that there is a
slightly raised portion of the floor. As you are of at least moderate
intelligence, you take a few steps back, get a good running start, and leap
across to the metal platform. You then walk up the virtual stairs and follow it
around the corner until you reach a small inlet."
S238: "There's nothing here really, save for the blue armor that's floating in
front of you. Behind you to the south lies the room you just came from."
S239: "The blue armor rotates invitingly."
S240: "You grab the blue armor and slap it on your chest. While the blue
clashes slightly with your otherwise brown appearance, its benefits more than
outweigh any snickers you'll hear because of it."
S241: "It really looks just like the rest of this passageway, except for the
fact that these mysterious voices in your head are telling you to shoot it."
S242: "It's a rather plain and nondescript box containing shotgun shells. You'd
really have been happier if there were gold doubloons back here, but hey -- you
earned the right to be bored by this gift, dammit."
S243: "This room is really more of an inlet off the previous corridor, as it
consists only of some metal walls, and a bright red button that is flashing."
S244: "It's a shiny red button, which blinks on and off. On. Off. On. Off. On.
Off..."
S245: "Now what would you want to do with that?"
S246: "A grunt is standing here, armed with a shotgun and looking rather
surly."
S247: "I don't think he would like that very much."
S248: "The grunt doesn't look amused at all. He has "
S249: "The elevator springs to life, jerking sharply and then moving downward.
You walk out of the elevator and find yourself in an open yard consisting of
two patches of grass connected by a rusted iron bridge. On the other side of
the bridge, a Grunt and Rottweiler are patrolling back and forth and they
notice your presence pretty quickly. Above you, the sky is a peaceful shade of
gray, with clouds moving by so fast you feel like you're watching a time-lapse
film. To your north is the entrance to a large, metallic complex, while the
elevator you emerged from lies behind you to the south."
S250: "The elevator springs to life, jerking sharply and then moving downward.
You walk out of the elevator and find yourself in an open yard consisting of
two patches of grass connected by a rusted iron bridge. Above you, the sky is a
peaceful shade of gray, with clouds moving by so fast you feel like you're
watching a time-lapse film. To your north is the entrance to a large, metallic
complex, while behind you to the south lies the elevator you just emerged
from."
S251: "You are standing in an open yard consisting of two patches of grass
connected by a rusted iron bridge. On the other side of the bridge, a Grunt and
Rottweiler are patrolling back and forth and they notice your presence pretty
quickly. Above you, the sky is a peaceful shade of gray, with clouds moving by
so fast you feel like you're watching a time-lapse film. To your north is the
entrance to a large, metallic complex, and an elevator to take you back up lies
to the south."
S252: "You are standing in an open yard consisting of two patches of grass
connected by a rusted iron bridge.  Above you, the sky is a peaceful shade of
gray, with clouds moving by so fast you feel like you're watching a time-lapse
film. To your north is the entrance to a large, metallic complex, while an
elevator to take you back up lies to the south."
S253: "All the leaves are brown, and the sky is gray."
S254: "If I could pluck the sky down and give it to you I would, my dear."
S255: "It's a shiny red button, which blinks on and off. On. Off. On. Off. On.
Off..."
S256: "Now what would you want to do with that?"
S257: "Ah...that's better. Your health increases by 20 points."
S258: "Ah...that's better. Your health increases by 20 points."
S259: "You can see a pair of Medkits sitting here."
S260: "There is a Medkit here, sitting all by its lonesome self."
S261: "Your standard issue first person shooter medkit. You don't know how it
works, but damn does it ever come in handy."
S262: "Ah...that's better. Your health increases by 20 points."
S263: "A Grunt is on patrol here, armed with a shotgun and looking rather
surly. As you enter the room, he looks up and turns in your direction."
S264: "I don't think he would like that very much."
S265: "The grunt doesn't look amused at all. He has "
S266: "The Rottweiler sniffs you immediately and runs in your direction"
S267: "
The Rottweiler, smelling the presence of fresh meat, starts running towards
you, his tongue flapping out of his drooling mouth."
S268: "I don't think he would like that very much."
S269: "The rottweiler is angry and hungry. He has "
S270: "You are standing at the entrance to what appears to be some sort of
military complex. This room consists of thick metal walls that are covered in a
fine, brown rust, and lumpy metal floors. Directly in front of you is a big
hazardous materials canister. To your right is a pillar, containing several
monitors that appear to be painted on. There is a corridor leading deeper into
the complex to the west, and a door leading back out into the yard to the
south. "
S271: "It's probably a load-bearing column, as it clearly has no technical
value and adds little to the overall aesthetic of the room."
S272: "Now why would you want to try a thing like that?"
S273: "The Rottweiler sniffs you immediately and runs in your direction"
S274: "I don't think he would like that very much."
S275: "The rottweiler is angry and hungry. He has "
S276: "A Grunt is on patrol here, armed with a shotgun and looking rather
surly. As you enter the room, he looks up and turns in your direction."
S277: "I don't think he would like that very much."
S278: "The grunt doesn't look amused at all. He has "
S279: "It's a metal canister, marked with a red hazardous materials seal. Just
in case it wasn't absolutely obvious that you really don't want to be near this
thing, the seal is flashing in a rather effective shade of red."
S280: "It's a metal canister, marked with a red hazardous materials seal. Just
in case it wasn't absolutely obvious that you really don't want to be near this
thing, the seal is flashing in a rather effective shade of red."
S281: "Do you not see the big "DO NOT TAKE THIS CANISTER YOU MORON" seal
flashing on its side?"
S282: "Your standard issue first person shooter medkit. You don't know how it
works, but damn does it ever come in handy."
S283: "Ah...that's better. Your health increases by 20 points."
S284: "You are standing in a metal corridor consisting of several raised metal
structures. The walls are heavily rusted, and the floor is metal and lumpy.
There are some metal stairs in front of you, continuing the corridor to the
north, and a path leading back to the entrance to the east."
S285: "The Rottweiler sniffs the air a few times immediately and runs in your
direction"
S286: "I don't think he would like that very much."
S287: "The rottweiler is angry and hungry. He has "
S288: "A Grunt is standing here, leaning against a wall, clearly sleeping on
the job. As you approach, he wakes up and turns in your direction."
S289: "I don't think he would like that very much."
S290: "The grunt doesn't look amused at all. He has "
S291: "As you enter the room, a Rottweiler that is perched on top of a metal
structure catches your scent and begins running back and forth. There's clearly
no way for him to reach you, but he doesn't seem to know that yet."
S292: "You can't reach him, and even if you could, he'd probably bite your hand
off."
S293: "The Rottweiler has worked himself into a frenzy. He has "
S294: "They're metal and you stand on them."
S295: "You are standing at the top of some metal stairs, facing a giant gap,
which is filed with some brown, ugly water. There are some stairs to the north
leading down into the water, and a path leading back to the south. On the wall
to your right is a button that's blinking softly to itself."
S296: "The water pit is filled with a murky, pea-soup colored liquid that has a
rather uninviting odor."
S297: "Ouch! This water hurts!

You feel five health points get eaten away. Maybe you should consider leaving?
"
S298: "Ouch! You know, you will die if you don't get out of this water."
S299: "Ouch! There goes another five points..."
S300: "It's bad enough to look at...you want to take it with you?"
S301: "only manages to dent your badass armor."
S302: "shoots across your shoulder, hitting you for "
S303: " points. It's only a flesh wound."
S304: "only manages to dent your swanky armor."
S305: " points. It won't kill you, but you'd really rather it not happen
again."
S306: "only manages to scuff your life-saving armor."
S307: "grazes your scalp, hitting you for "
S308: "only manages to scuff your life-saving armor."
S309: "hits you right in the thigh, taking off "
S310: " points. That could have been much worse."
S311: "only manages to dent your stylish armor."
S312: " points. It won't kill you, but you'd really rather it not happen
again."
S313: "only manages to dent your apparently superior armor."
S314: " points. You'll be fine tomorrow, but it really smarts."
S315: "only manages to scuff your life-saving armor."
S316: "shoots you in the pinky, causing you to wail like a little girl and
taking off "
S317: "only manages to scuff your life-saving armor."
S318: "hits you square in the chest, missing any major organs, but still
inflicting "
S319: "only manages to scuff your life-saving armor."
S320: "hits you right in the ear, taking it clean off. It's a good thing those
Medkits are so effective, because you've really grown quite attached to that
ear."
S321: "only manages to scuff your life-saving armor."
S322: "I don't think he would like that very much."
S323: "only manages to dent your badass armor."
S324: "shoots across your shoulder, hitting you for "
S325: " points. It's only a flesh wound."
S326: "only manages to dent your swanky armor."
S327: " points. It won't kill you, but you'd really rather it not happen
again."
S328: "only manages to scuff your life-saving armor."
S329: "grazes your scalp, hitting you for "
S330: "only manages to scuff your life-saving armor."
S331: "hits you right in the thigh, taking off "
S332: " points. That could have been much worse."
S333: "only manages to dent your stylish armor."
S334: " points. It won't kill you, but you'd really rather it not happen
again."
S335: "only manages to dent your apparently superior armor."
S336: " points. You'll be fine tomorrow, but it really smarts."
S337: "only manages to scuff your life-saving armor."
S338: "shoots you in the pinky, causing you to wail like a little girl and
taking off "
S339: "only manages to scuff your life-saving armor."
S340: "hits you square in the chest, missing any major organs, but still
inflicting "
S341: "only manages to scuff your life-saving armor."
S342: "hits you right in the ear, taking it clean off. It's a good thing those
Medkits are so effective, because you've really grown quite attached to that
ear."
S343: "only manages to scuff your life-saving armor."
S344: "I don't think he would like that very much."
S345: "only manages to dent your badass armor."
S346: "shoots across your shoulder, hitting you for "
S347: " points. It's only a flesh wound."
S348: "only manages to dent your swanky armor."
S349: " points. It won't kill you, but you'd really rather it not happen
again."
S350: "only manages to scuff your life-saving armor."
S351: "grazes your scalp, hitting you for "
S352: "only manages to scuff your life-saving armor."
S353: "hits you right in the thigh, taking off "
S354: " points. That could have been much worse."
S355: "only manages to dent your stylish armor."
S356: " points. It won't kill you, but you'd really rather it not happen
again."
S357: "only manages to dent your apparently superior armor."
S358: " points. You'll be fine tomorrow, but it really smarts."
S359: "only manages to scuff your life-saving armor."
S360: "shoots you in the pinky, causing you to wail like a little girl and
taking off "
S361: "only manages to scuff your life-saving armor."
S362: "hits you square in the chest, missing any major organs, but still
inflicting "
S363: "only manages to scuff your life-saving armor."
S364: "hits you right in the ear, taking it clean off. It's a good thing those
Medkits are so effective, because you've really grown quite attached to that
ear."
S365: "only manages to scuff your life-saving armor."
S366: "I don't think he would like that very much."
S367: "
As you enter the room, you notice three Grunts that are sitting here. They look
up at you, and seem to be quite annoyed that you have shown up like this,
inadvertently disrupting their otherwise peaceful game of Diamondback."
S368: "
Three angry grunts are here, clearly not amused by your intrusion."
S369: "Two angry grunts are here, and they ain't gonna take no guff from you."
S370: "There is one angry grunt here, who seems to be taking out his loss on
you."
S371: "It's a shiny red button, which blinks on and off. On. Off. On. Off. On.
Off..."
S372: "Now what would you want to do with that?"
S373: "You press the button, which causes a platform to slide out and cover up
the noxious water pit. Phew. You can now continue on to the north."
S374: "You've already pushed this button!"
S375: "You are standing in a straight hallway with metal walls and floor. It
continues on to the north, or back to the south."
S376: "A Grunt is standing here, patrolling his way down the hallway. He
doesn't seem to have noticed you yet."
S377: "
The Grunt swings around and raises his shotgun menacingly."
S378: "I don't think he would like that very much."
S379: "The grunt doesn't look amused at all. He has "
S380: "You are standing at the top of a ramp leading downwards to the north. As
you approach the ramp, a light goes on above you. There is a curious looking
red button here, blinking quietly to itself."
S381: "You are standing at the top of a ramp leading downwards to the north. A
path leads back out to the south.  There is a curious looking red button here,
blinking quietly to itself."
S382: "A shiny red button is sitting here, blinking to itself quietly. On. Off.
On. Off. On. Off."
S383: "It's a shiny red button, which blinks on and off. On. Off. On. Off. On.
Off..."
S384: "Now what would you want to do with that?"
S385: "As you press the shiny red button, the button turns yellow and the words
"TWO MORE TO GO..." pop into your head."
S386: "As you press the shiny red button, the button turns yellow and the words
"ONE MORE TO GO..." pop into your head."
S387: "As you press the shiny red button, the button turns yellow and the words
"SEQUENCE COMPLETE!" pop into your head. In the distance, you can see that a
door has opened up at the end of the ramp."
S388: "A Grunt is standing here, patrolling his way down the hallway. He
doesn't seem to have noticed you yet."
S389: "
The Grunt swings around and raises his shotgun menacingly."
S390: "I don't think he would like that very much."
S391: "The grunt doesn't look amused at all. He has "
S392: "You are standing in the middle of a lengthy ramp that twists around and
leads downwards to the north. As you continue your descent, a light goes on
above you. A path back out lies behind you to the south. There is a curious
looking red button here, blinking quietly to itself."
S393: "You are standing in the middle of a lengthy ramp that twists around and
leads downwards to the north, or back up behind you to the south. There is a
curious looking red button here, blinking quietly to itself."
S394: "A shiny red button is sitting here, blinking to itself quietly. On. Off.
On. Off. On. Off."
S395: "It's a shiny red button, which blinks on and off. On. Off. On. Off. On.
Off..."
S396: "Now what would you want to do with that?"
S397: "As you press the shiny red button, the button turns yellow and the words
"TWO MORE TO GO..." pop into your head."
S398: "As you press the shiny red button, the button turns yellow and the words
"ONE MORE TO GO..." pop into your head."
S399: "As you press the shiny red button, the button turns yellow and the words
"SEQUENCE COMPLETE!" pop into your head. In the distance, you can see that a
door has opened up at the end of the ramp."
S400: "A Grunt is standing here, patrolling his way down the hallway. He
doesn't seem to have noticed you yet."
S401: "
The Grunt swings around and raises his shotgun menacingly."
S402: "I don't think he would like that very much."
S403: "The grunt doesn't look amused at all. He has "
S404: "You are standing at the bottom of a long and twisting ramp. As you
continue your descent, a light goes on above you. You can see an opening in the
wall in front of you to the north.  There is a curious looking red button here,
blinking quietly to itself."
S405: "You are standing at the bottom of a long and twisting ramp. As you
continue your descent, a light goes on above you.  There is a curious looking
red button here, blinking quietly to itself."
S406: "You are standing at the bottom of a long and twisting ramp. You can see
an opening in the wall in front of you to the north. There is a curious looking
red button here, blinking quietly to itself."
S407: "You are standing at the bottom of a long and twisting ramp. The only
perceivable path lies behind you to the south. There is a curious looking red
button here, blinking quietly to itself."
S408: "A shiny red button is sitting here, blinking to itself quietly. On. Off.
On. Off. On. Off."
S409: "It's a shiny red button, which blinks on and off. On. Off. On. Off. On.
Off..."
S410: "Now what would you want to do with that?"
S411: "As you press the shiny red button, the button turns yellow and the words
"TWO MORE TO GO..." pop into your head."
S412: "As you press the shiny red button, the button turns yellow and the words
"ONE MORE TO GO..." pop into your head."
S413: "As you press the shiny red button, the button turns yellow and the words
"SEQUENCE COMPLETE!" pop into your head. In the distance, you can see that a
door has opened up at the end of the ramp."
S414: "A Grunt is standing here, patrolling his way down the hallway. He
doesn't seem to have noticed you yet."
S415: "
The Grunt swings around and raises his shotgun menacingly."
S416: "I don't think he would like that very much."
S417: "The grunt doesn't look amused at all. He has "
S418: "You are standing in a white and utterly bare room, with no perceivable
exit. The doorway you came in from has completely disappeared behind you. In
fact the only thing in the room at all (aside from yourself) is a grungy
looking chap who has his fingers tented in a Mr. Burns-esque pose."
S419: "Seeing you suddenly appear in front of him apparently comes as no
surprise to this person, as he nods, acknowledging your presence."
S420: "Somehow I don't think that's a very good idea."
S421: "
The person stands up from his chair and begins to walk around the room,
stroking his dingy beard."
S422: "
The person turns towards you and says, "I suppose you probably want to know
what's going on here." He ponders this for a moment."
S423: "
The stranger continues, "The game you are currently playing elaborate as it may
be, is in actuality an April Fool's gag." The stranger continues to walk around
the room."
S424: "
"You see, this whole thing," he gestures around the completely empty white
room, "is nothing more than a joke." He stops his pacing for a moment. "Or at
least, that was the idea, anyway.""
S425: "
"Odd as it may seem, the idea of an interactive fiction version of the original
Quake struck me as being a very, very funny idea. And so I created everything
you see here. Well, not everything you see HERE, because obviously there's
nothing to see in this room, but I'm referring to the game as a whole.""
S426: "
"And so here you are, having completed the entire game, as it currently stands.
I must confess, I didn't actually expect you to get this far. But I suppose I
underestimated you.""
S427: "
"So I tell you what -- you've been an awfully good sport here, and you've
played this far without killing yourself, so I'm going to let you 'win' this
game. For now, anyway. But hopefully you've enjoyed playing this as much as
I've enjoyed creating it, as I do believe I will continue this project. I will
of course confess to the portions of it that are intended to be part of the
April Fool's gag (if you really put this in the same directory as your Quake
PAK files, I've got a bridge to sell you.""
S428: "
"So thank you for playing. Be sure to check the IF Quake site periodically for
a new release. It may take me a while, but there's a lot of stuff I intend to
put in. Besides...you haven't even seen a Shambler yet. Thanks again, and good
night.""
S429: "The Creator is not the cleanest looking fellow you've ever seen. But he
does carry himself in an oddly regal fashion."
S430: "The slipgate glows with an otherworldly sheen. It's really a shame you
don't have OpenGL installed, as it's quite lovely to look at. This slipgate is
marked "NORMAL", which would seem to suggest that it's a normal slipgate, and
not one of those ones that, you know, kills you or Shub Niggurath or
something."
S431: "The slipgate glows with an otherworldly sheen. It's really a shame you
don't have OpenGL installed, as it's quite lovely to look at."
S432: "OpenGL does nothing for this slipgate. Whereas the other slipgates
you've seen are intoxicatingly easy on the eyes, this one is rustic, to say the
least. It consists of two metal grates, which are so rusted they look as if
they're bleeding, connected by an equally ugly mass of machinery and wires.
There seems to be a monitor of some sort in the center of the slipgate,
although it appears to be merely painted on.

As you look over at the slipgate, the words "WALK INTO THE SLIPGATE TO START
PLAYING QUAKE!" appear. Perhaps if you walk into the slipgate these words will
stop tormenting you?"
S433: "The slipgate glows with an otherworldly sheen. It's really a shame you
don't have OpenGL installed, as it's quite lovely to look at. This slipgate is
marked "EASY", which probably means walking through it won't be much of a
challenge, certainly not for an experienced person like yourself."
S434: "The slipgate glows with an otherworldly sheen. It's really a shame you
don't have OpenGL installed, as it's quite lovely to look at. This slipgate is
marked "HARD", which means you might have some difficulty passing through it.
Then again, probably not. It's just a bloody slipgate, not a Rubik's Cube."
S435: "The slipgate glows with an otherworldly sheen. It's really a shame you
don't have OpenGL installed, as it's quite lovely to look at. You spend a few
moments admiring its nicely rendered glory."
S436: "The tools and wooden planks are the usual things you'd expect to see at
a construction site. You've seen them plenty of times before, and have no real
need to spend any more time admiring them."
S437: "Don't you have better things to do than clean up this room?"
S438: "The two pyres are made of stone, and contain a small, almost miniscule
flame. You're not missing much by not being able to see this, believe me."
S439: "Directly in front of you, a slovenly and obese fellow wearing
dirt-covered jeans, a stained white t-shirt and a bright red trucker hat is
sitting at a desk fiddling with some nails and a hammer. He turns around to
look at you, and you see that he's wearing a name tag on his chest that reads
"Sal", which you assume is either his name, or the name of the guy he stole it
from."
S440: "Even if you could fit Sal into your pocket, he probably wouldn't like
the idea very much."
S441: "
You don't even want to know what Sal just did. Trust me."
S442: "
Sal replies, "Heys! Yous shouldn't be heres. You shoulds just goes backs the
ways you cames in untils this here rooms is completeds.""
S443: "Sal is fat, ugly, and quite possibly rather slow. He's everything you
wish you could be."
S444: "*********************************************************************
***               Welcome to Quake Shareware v1.01!               ***
*********************************************************************

Please consult the README.TXT file for the latest-breaking information on this
Quake version!

Quake System Requirements
-------------------------
IBM PC and Compatibles
Pentium processor or better
VGA Compatible Display or better
8MB RAM minimum, 16MB recommended (16 MB required for running under Win95)
CD-ROM drive Required 
MS-DOS 5.0 or better or Windows 95 (does NOT run under Windows NT)
Hard Drive (30MB for Shareware, 80 MB for Registered)

*** IMPORTANT!: Quake requires a floating point processor.
Systems that do not have an FPU installed will not run Quake -- at all.

Thank you,

id Software, inc.
"
S445: "The plate is a bit blurry and rusted, but you can clearly see that the
text scratched into its surface is pure gibberish. Perhaps some meaning lies in
these crude scratchings, but you certainly aren't going to spend the time
bothering to figure it out when you have all these lovely hallways to explore."
S446: "The two stone demon's heads depict an angry, horned beast, with his
mouth agape and blood covering his lips and chin, suggesting that not only has
he recently been involved in some sort of violent, bloody feast, but that he
really should be properly instructed on table manners."
S447: "They're nailed to the wall. They ain't leaving without a fight, and you
have better things to do than to try and steal someone else's demon heads."
S448: "The window is nicely crafted, if slightly dull."
S449: "The bodies are crucified to the walls on your right and left. They seem
to be emaciated, but also rather small in comparison to your ample girth,
suggesting that these were perhaps some unfortunate Leprechauns who had one too
many drinks on St. Patrick's Day. Interestingly, they appear to be thrashing
about in near unison, making you wonder if they were in fact some sort of
synchronized agony team."
S450: "They're too high up for you to grab, and even if you could, the guilt
you'd feel at breaking the symmetry of this display would be too much to bear."
S451: "A large and heavy weapon capable of firing nine-inch-nails out of its
two symmetrical rectangular barrels. You wouldn't want to get one in your eye.
"
S452: "A nice long-range weapon. Not nearly as effective as the Super Shotgun,
but it's effective enough for its primary purpose. "
S453: "Ah, your trusty hatchet. It's purely a melee weapon, which means it's
not really a good idea to use it when you have other options, but every now and
then you like to get your hands dirty, and really, there's nothing more
satisfying then the "thunk!" sound you hear when striking a blow with your axe.
Its metal blade is caked with dry blood, although that could just as easily be
from the peanut butter and jelly sandwich you cleaved in twain with it over
lunch."
S454: "Your standard issue first person shooter medkit. You don't know how it
works, but damn does it ever come in handy."
S455: "Ah...that's better. Your health increases by 20 points."
S456: "Greetings, your omnipotence. Hey, wait a minute...cut that out!"
S457: "You suddenly feel like you can walk through walls. 
After a moment,the feeling passes. I guess you're just going to have to play
this the hard way."
S458: ""All the news that's fit to..." etcetera, etcetera."
S459: "I hear it gets you chicks. Is that true? Well obviously not, or else why
would you be sitting here typing useless things into a Z-Machine like this?"
S460: "Hey, what did I tell you about that?"
S461: "You will not sue. You will not sue. You will not sue."
S462: "A bloody egomaniac who can't resist the urge to include his own name
in...huh? Oh, I didn't say anything."
S463: "Woah. Did you feel that? That must have been at least a 3.7."
S464: "You pull your trusty copy of the Necronomicon out of your robes and
begin to chant.

Alsi ku nushi ilani mushiti
Itti kunu alsi mushitum kallatum kattumtum
Alsi bararitum qablitum u namaritum
Ashshu kashshaptu u kashshipanni
Eli nitum ubbiraanni
Ili-ia u Ishtari-ia ushis-su-u-eli-ia
Eli ameri-ia amru-usanaku
Imdikula salalu musha u urra
Qu-u imtana-allu-u pi-ia
Upu unti pi-ia iprusu

The world around you begins to shake and shudder...in the distance you can hear
thunder...could it be?

Yes!

Yes!

Cthulhu is awake!

Cthulhu is awake!"
S465: "We're not worthy. We're not worthy."
S466:
"------------------------------------------------------------------------------
-
                           Quake 1.09 by id Software
-------------------------------------------------------------------------------


IF Quake ported and compiled by jason bergman
(http://www.loonyboi.com/if/quake/)

ASCII id Software logo by Frans P. DeVries of 3DGamers.com. Used with
permission.

Zork Extensions for Inform by Joe Merical (python_q@email.com)

Special thanks to Simon Carless for beta testing!

Quake (c) 1996 - 2004 id Software. You will not sue. You will not sue. You will
not sue.

--

Please do not redistribute this file (either online or on physical media)
without express permission of the author!

Thank you for playing IF Quake!"
S467: "
Sal replies, "Heys! Yous shouldn't bes heres. Yous shoulds just goes backs the
ways you cames ins untils this here rooms is completeds.""
S468: "Yeah, I get those all the time too. It's best to ignore them."
S469: "Stuck already, eh? Well, that's okay, I'm here to help. Actually, I'm
here for much more interesting things than this but, hey, you're the player.

You are playing an Interactive Fiction adventure written by one Jason Bergman.
In this game, you'll want to walk around by typing in the directions you wish
to walk in (to go to the North, type "North" or simply "n" and so on). You can
take items by using the "take" command (also useful: "take all"), and
manipulate them using commands like, "eat", "read", "use", "attack" and so on.

For more useful information, consult the official IF Quake homepage at
http://www.loonyboi.com/if/quake/ or visit one of the many, many IF sites on
the web. 

Interactive FictionTM: it's your friend!"
S470: "What exactly would you like to jump on, and why?"
S471: "What exactly would you like to jump down from?"
S472: "Deciding that life isn't worth living, you attempt to snuff yourself
out. You're new at this sort of thing, so you succeed in taking off ten health
points, but fail in your ultimate goal of actually ending your life."
S473: "In Utah, it is illegal to detonate a nuclear weapon. Possession is
legal, but detonation is not. Comforting, huh?"
S474: "Kakorrhaphiophobia is the fear of failure or defeat."
S475: "The first United States coast to coast airplane flight occurred in 1911
and took 49 days."
S476: "In Missouri, there is a special tax exclusively for single men. Of
course, being only one dollar per year, some might argue the benefits are well
worth the extra taxes."
S477: "A ball of glass will bounce higher than a ball of rubber. A ball of
solid steel will bounce higher than one made entirely of glass."
S478: "Virginia O'Hanlon Douglas was the eight-year-old girl who, in 1897,
asked the staff of The New York Sun whether Santa Claus existed. In the
now-famous editorial, Francis Church assured Virginia that yes, indeed, "there
is a Santa Claus.""
S479: "Selenophobia is the fear of the moon."
S480: "Leonardo da Vinci could write with one hand and draw with the other at
the same time."
S481: "Xanthophobia is a fear of the color or word yellow. Also known as "Alan
Scott syndrome". (If you caught that reference give yourself +2 geek points)."
S482: "The People's Republic of China recently admitted that a long-held myth
was indeed false: the Great Wall of China can not be seen from outer space."
S483: " health points left. You might want to get that taken care of. 

You have "
S484: " health points left. Face it. You've seen better days. 

You have "
S485: "You are in pristine condition, with a full 100 health points. Now if
only you didn't smell so badly... 

You have "
S486: " health points left. You're a little banged up, but you'll live. 

You have "
S487: " health points left. Battle scarred, but relatively healthy. 

You have "
S488: " health points left. You're a bit tired, but you'll live. 

You have "
S489: "Sal responds with a belch of his own, at least ten times louder and more
potent. Clearly you have met your match."
S490: "Shoot what at what with what? What?"
S491: "Feeling like a big man, you strike Sal, dealing him a fatal blow. Just
before he dies, Sal cries out, "Heys...whats gives...?"

Nicely done there, killing an unarmed slob like that."
S492: " from his health and killing him. Nicely done there, Leatherface."
S493: " from his health and killing him. Nice shootin', Tex."
S494: " from his health and killing him. Frag-tastic."
S495: " from his health and killing him. Move over, Thresh."
S496: " from his health and killing him. He never stood a chance."
S497: " from his health and killing him. You spit on his corpse."
S498: "That wouldn't be very productive."
S499: "The Creator turns towards you. "Well if you're going to act that way,
I'll just have to take that away from you.""
S500: "Hah HAH! You attack the pitiful Text File, chopping it in twain. That'll
teach developers to include such wasteful pieces of virtual text with their
software programs."
S501: "KaBLAM! You attack the pitiful Text File, blowing it to smithereens.
That'll teach developers to include such wasteful pieces of virtual text with
their software programs."
S502: "With a mighty blow you swing your Axe at your target. This accomplishes
nothing whatsoever. Perhaps you should find something better to do with your
time?"
S503: "Blam! Niiice shot there homeboy. Maybe you ought to save your ammo for
some actual enemies?"
S504: "You hit the hazardous canister right on its side, causing a major chain
reaction. Unfortunately for you, you're the only person left standing in here,
and you're hit full-force with the explosion, causing 25 points of damage."
S505: "You hit the hazardous canister right on its side, causing a major chain
reaction. Luckily for you, there's a Grunt here to take the brunt of the
explosion, killing him instantly. You manage to walk away with a mere five
points taken off your health."
S506: "You hit the hazardous canister right on its side, causing a major chain
reaction. Luckily for you, there's a Rottweiler here to take some of the
explosion, killing him instantly. Still, it doesn't absorb all of it, and  walk
away with ten points taken off your health."
S507: "You hit the hazardous canister right on its side, causing a major chain
reaction. Thankfully, there's both a Rottweiler and a Grunt here to absorb the
explosion, killing them both instantly, and leaving you without a scratch."
S508: "You fire at the door, which surprisingly results in some blood (or
possibly blood-colored rust) to spatter off of it. After that moment of
ickiness, the door moves backwards and slides into the wall, revealing a small
alcove containing a single box. Right on cue, the words "YOU HAVE FOUND A
SECRET AREA" pop into your head. You stifle the urge to yell out NO KIDDING
MORON."
S509: "You already shot that door. Let's not go crazy here with the shooting."
S510: "What? You didn't actually expect that to do anything, did you? What kind
of a game do you think this is, anyway?"
S511: "You suddenly feel peculiar...is if...no...it couldn't be...yes! You can
FLY! You can FLY! Oh, it's so beautiful up here...oh wait, no, there you
go...sorry. Guess it was just a temporary thing, huh?"
S512: "Hey you tried twice already! Stop flogging that horse."
S513: "                                               .od8888
"
S514: "           .od88bo.                     ...ood88888888
"
S515: "         d8888888888b               888888888888888888
"
S516: "        d888888888888b              888888888888888888
"
S517: "        88888888888888              888888888888888888
"
S518: "        Y888888888888P                   8888888888888
"
S519: "         Y8888888888P                     888888888888
"
S520: "             Y88P                         888888888888
"
S521: "                             ...oooo..    888888888888
"
S522: "         ....oooo88888   .o8888888888888o.888888888888
"
S523: "     88888888888888888.d888888888888888888888888888888
"
S524: "     888888888888888P'88888888888888888888888888888888
"
S525: "     88888888888888P  8888888888P       Y8888888888888
"
S526: "         888888888P   888888888           888888888888
"
S527: "          88888888    88888888            888888888888
"
S528: "          88888888    88888888            888888888888
"
S529: "          88888888    88888888            888888888888
"
S530: "          88888888.   88888888.           888888888888
"
S531: "          888888888   88888888b          .888888888888
"
S532: "          888888888b  888888888b..    ..o8888888888888
"
S533: "         d8888888888b. Y888888888888888888888888888888b
"
S534: "     ood88888888888888b.   8888888888888888888888888888
"
S535: "     8888888888888888888bo Y88888888888P  8888888888

"
S536: "    ---------------------SOFTWARE-----------------------
"
S537: "    ---------------------PRESENTS-----------------------

"
S538: "VIDEO WAIT SUCCESSFULLY ENABLED!
"
S539: "GL_VENDOR: ATI TECHNOLOGIES INC.
"
S540: "VIDEO MODE 640X480 TEXT_ONLY INITIALIZED."
S541: "
Quake 1.09 by id Software
IF Quake ported and compiled by jason bergman
http://www.loonyboi.com/
Type "Credits" for full list of credits.
"
S542: "write to"
S543: "read"
S544: "send message"
S545: "apply 'ofclass' for"
S546: ": 'create' can have 0 to 3 parameters only **]"
S547: "objectloop broken because the object "
S548: " was moved while the loop passed through it **]"
S549: ", which is not a valid ZSCII character code for output **]"
S550: "tried to print (address) on something not the "
S551: "tried to print (string) on something not a "
S552: "tried to print (object) on something not an "
S553: "give" or test "has" or "hasnt" with a non-attribute         on the
object "
S554: "recreate"
S555: "destroy"
S556: "copy"
S557: "copy"
S558: "set"
S559: "<unknown attribute>"
S560: "name"
S561: "create"
S562: "recreate"
S563: "destroy"
S564: "remaining"
S565: "copy"
S566: "call"
S567: "print"
S568: "print_to_array"
S569: "shootable"
S570: "blunt"
S571: "warned"
S572: "ewarned"
S573: "didjump2"
S574: "didjump"
S575: "deadsal"
S576: "numbuttons"
S577: "stairway1"
S578: "stairway2"
S579: "stairway3"
S580: "watercount"
S581: "meat"
S582: "firstrun"
S583: "candidblow"
S584: "button1"
S585: "button2"
S586: "secretdoor"
S587: "puddingt"
S588: "button3"
S589: "e1"
S590: "diff"
S591: "salc"
S592: "yard"
S593: "medcount"
S594: "latestdamage"
S595: "numgrunts"
S596: "fly"
S597: "multiplyer"
S598: "damage"
S599: "animate"
S600: "absent"
S601: "clothing"
S602: "concealed"
S603: "container"
S604: "door"
S605: "edible"
S606: "enterable"
S607: "general"
S608: "light"
S609: "lockable"
S610: "locked"
S611: "moved"
S612: "on"
S613: "open"
S614: "openable"
S615: "proper"
S616: "scenery"
S617: "scored"
S618: "static"
S619: "supporter"
S620: "switchable"
S621: "talkable"
S622: "transparent"
S623: "visited"
S624: "workflag"
S625: "worn"
S626: "male"
S627: "female"
S628: "neuter"
S629: "pluralname"
S630: "before"
S631: "after"
S632: "life"
S633: "n_to"
S634: "s_to"
S635: "e_to"
S636: "w_to"
S637: "ne_to"
S638: "se_to"
S639: "nw_to"
S640: "sw_to"
S641: "u_to"
S642: "d_to"
S643: "in_to"
S644: "out_to"
S645: "door_to"
S646: "with_key"
S647: "door_dir"
S648: "invent"
S649: "plural"
S650: "add_to_scope"
S651: "list_together"
S652: "react_before"
S653: "react_after"
S654: "grammar"
S655: "orders"
S656: "initial"
S657: "when_open"
S658: "when_closed"
S659: "when_on"
S660: "when_off"
S661: "description"
S662: "describe"
S663: "article"
S664: "cant_go"
S665: "found_in"
S666: "time_left"
S667: "number"
S668: "time_out"
S669: "daemon"
S670: "each_turn"
S671: "capacity"
S672: "short_name"
S673: "short_name_indef"
S674: "parse_name"
S675: "articles"
S676: "inside_description"
S677: "play"
S678: "Pronouns"
S679: "Quit"
S680: "Restart"
S681: "Restore"
S682: "Save"
S683: "Verify"
S684: "ScriptOn"
S685: "ScriptOff"
S686: "NotifyOn"
S687: "NotifyOff"
S688: "Places"
S689: "Objects"
S690: "Score"
S691: "FullScore"
S692: "Inv"
S693: "Take"
S694: "Drop"
S695: "Remove"
S696: "PutOn"
S697: "Insert"
S698: "EmptyT"
S699: "Give"
S700: "Show"
S701: "Enter"
S702: "GetOff"
S703: "Exit"
S704: "VagueGo"
S705: "Go"
S706: "LMode1"
S707: "LMode2"
S708: "LMode3"
S709: "Look"
S710: "Examine"
S711: "LookUnder"
S712: "Search"
S713: "Unlock"
S714: "Lock"
S715: "SwitchOn"
S716: "SwitchOff"
S717: "Open"
S718: "Close"
S719: "Disrobe"
S720: "Wear"
S721: "Eat"
S722: "Yes"
S723: "No"
S724: "Burn"
S725: "Pray"
S726: "Wake"
S727: "WakeOther"
S728: "Kiss"
S729: "Think"
S730: "Smell"
S731: "Listen"
S732: "Taste"
S733: "Touch"
S734: "Dig"
S735: "Cut"
S736: "Jump"
S737: "JumpOver"
S738: "Tie"
S739: "Drink"
S740: "Fill"
S741: "Sorry"
S742: "Strong"
S743: "Mild"
S744: "Attack"
S745: "Swim"
S746: "Swing"
S747: "Blow"
S748: "Rub"
S749: "Set"
S750: "SetTo"
S751: "WaveHands"
S752: "Wave"
S753: "Pull"
S754: "Push"
S755: "Turn"
S756: "PushDir"
S757: "Squeeze"
S758: "ThrowAt"
S759: "Tell"
S760: "Answer"
S761: "Ask"
S762: "Buy"
S763: "Sing"
S764: "Climb"
S765: "Wait"
S766: "Sleep"
S767: "Consult"
S768: "parse_input"
S769: "AskFor"
S770: "GiveR"
S771: "ShowR"
S772: "begin_action"
S773: "end_turn_sequence"
S774: "Diagnose"
S775: "damage_death"
S776: "Transfer"
S777: "dive"
S778: "jumpedUp"
S779: "JumpOn"
S780: "myhealth"
S781: "myscore"
S782: "isdead"
S783: "init"
S784: "turnaway"
S785: "pushed"
S786: "button"
S787: "Talk"
S788: "legible"
S789: "Version"
S790: "TraceOn"
S791: "TraceLevel"
S792: "TraceOff"
S793: "ActionsOn"
S794: "ActionsOff"
S795: "RoutinesOn"
S796: "RoutinesOff"
S797: "TimersOn"
S798: "TimersOff"
S799: "ChangesOn"
S800: "ChangesOff"
S801: "CommandsOn"
S802: "CommandsOff"
S803: "CommandsRead"
S804: "Predictable"
S805: "XPurloin"
S806: "XAbstract"
S807: "XTree"
S808: "Goto"
S809: "Gonear"
S810: "Scope"
S811: "Showverb"
S812: "Showobj"
S813: "Empty"
S814: "InvTall"
S815: "InvWide"
S816: "GoIn"
S817: "AttackWith"
S818: "Load"
S819: "God"
S820: "Noclip"
S821: "Unreal"
S822: "Zork"
S823: "blue"
S824: "Loony"
S825: "id"
S826: "sue"
S827: "summon"
S828: "shack"
S829: "Quake"
S830: "Carmack"
S831: "Credits"
S832: "Fly"
S833: "NoTarget"
S834: "Impulse"
S835: "Help"
S836: "Belch"
S837: "Health"
S838: "Suicide"
S839: "Stupid"
S840: "AttackAt"
S841: "JumpDown"
S842: "LetGo"
S843: "Receive"
S844: "ThrownAt"
S845: "Order"
S846: "TheSame"
S847: "PluralFound"
S848: "ListMiscellany"
S849: "Miscellany"
S850: "Prompt"
S851: "NotUnderstood"
S852: "task_scores"
S853: "the_timers"
S854: "inputobjs"
S855: "multiple_object"
S856: "kept_results"
S857: "pattern"
S858: "pattern2"
S859: "line_ttype"
S860: "line_tdata"
S861: "line_token"
S862: "match_list"
S863: "match_classes"
S864: "match_scores"
S865: "buffer"
S866: "parse"
S867: "buffer2"
S868: "parse2"
S869: "buffer3"
S870: "oops_workspace"
S871: "PowersOfTwo_TB"
S872: "LanguagePronouns"
S873: "LanguageDescriptors"
S874: "LanguageNumbers"
S875: "LanguageArticles"
S876: "LanguageGNAsToArticles"
S877: "StorageForShortName"
S878: "task_done"

[End of text]

[End of file]
