// dependecies ================================================================
var express			= require('express');
var app				= express();
var fs 				= require('fs');
var sms 			= require('./app/nexmo.js');
var ifvms 			= require('./app/bootstrap.js');

// configuration ==============================================================
var debugOn 		= true;
var config 			= require('./app/config/config.js');
var database		= require('./app/database.js');

sms.initialize(config.SMS.apiKey, config.SMS.apiSecret, config.SMS.sender, debugOn);
app.use(express.static(__dirname + '/public'));	// Set static file location

//sms.sendTextMessage('13104205285', 'Server started');


function handleGameInput(user, input, game){
	var output;

	if (typeof game === 'undefined') {
		// Create a new game
		log('New user ' + user);
		game = ifvms.zvm(config.defaultStoryPath); //, log);
		database.activeGames[user] = game;
	}else{
		// Continue an existing game
		log('Returning user ' + user);
	}

	if(typeof input === 'string'){
		input = input.split('\n');
		input.forEach(function(e){
			game.inputText(e);
		});
	}

	game.go();
	game.go();
	output = game.getText(true);
	return output;
}


// listen =====================================================================

// homepage ----------------------------------------------------------------
app.get('/', function(req, res){
	res.sendfile('./public/index.html');
});


// Incoming text messages.
// User will be identified by the phone number
app.get('/smsinbound', function(req, res){
	log('<smsinbound>');
	if( 
		(typeof req.query.msisdn === 'undefined' || req.query.msisdn.length === 0)
		&& (typeof req.query.from === 'undefined' || req.query.from.length === 0)
	){
		res.send(400);
		return;
	}
	var user, input, game, output;
	// only process short text messages
	if( (req.query.type === 'text') 
		&& (typeof req.query.concat === 'undefined') 
		&& (typeof req.query.msisdn !== 'undefined')
		&& (typeof req.query.text   !== 'undefined')
	) {

		user = req.query.msisdn || 0;
		input = req.query.text || '';
		game = database.activeGames[user];

		output = handleGameInput(user, input, game);
		//output = JSON.stringify(output).replace(/\\r/g, '\n');
		//output = JSON.parse(output);
		//sms.sendTextMessage(user, output.slice(-3000));
	}
	res.send(200); // TODO: Validate that the query parameters are valid or not and send 400 if necessary
})

// Input from the web form
// User is identified by a random number generated by the webpage
// Parameters:
// 		userID: alphanumeric string
//		text: (optional) user text input
app.get('/play', function(req, res){
	log('<play>');
	if( typeof req.query.userId === 'undefined' || req.query.userId.length === 0) {
		res.send(400);
		return;
	}
	var user = req.query.userId || 0,
		input = req.query.text,
		game = database.activeGames[user],
		output;

	output = handleGameInput(user, input, game);
	res.json({text: output});
});

// Delete a game
app.get('/kill', function(req, res){
	log('<kill>');
	if( typeof req.query.userId === 'undefined' || req.query.userId.length === 0) {
		res.send(400);
		return;
	}
	var user = req.query.userId || 0;
	delete database.activeGames[user];
	
	log('killing session ' + user);
	res.send(200);
});


// serve up all other assets -----------------------------------------------
app.get('/:folder/:file', function(req, res){
	res.sendfile('/' + req.params.folder + '/' + req.params.file);
});

app.listen(config.port, function() {
	log('Listening on ' + config.port);
});




// Log =====================================================================
//Logging in one place to make it easier to move to a logging library like winston later.
GLOBAL.log = function log(logMsg) {
	if (logMsg instanceof Error) console.log(logMsg.stack);
	if (debugOn) {
		if (typeof logMsg == 'object') {
			console.dir(logMsg);
		} else {
			console.log(logMsg);
		}
	}
};